(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[79374],{71619:function(e,n,t){"use strict";t.r(n);var a=t(96832),l=t(22131),c=t(89730),o=a.memo((e=>{e.demos;return a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h1",{id:"447-\u56de\u65cb\u9556\u7684\u6570\u91cf"},a.createElement(l.AnchorLink,{to:"#447-\u56de\u65cb\u9556\u7684\u6570\u91cf","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"447. \u56de\u65cb\u9556\u7684\u6570\u91cf"),a.createElement("blockquote",null,a.createElement("p",null,"\u94fe\u63a5\uff1a",a.createElement(l.Link,{to:"https://leetcode-cn.com/problems/number-of-boomerangs/"},"447. \u56de\u65cb\u9556\u7684\u6570\u91cf"),a.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",a.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6570\u5b66",a.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u5e73\u9762\u4e0a\u6240\u6709\u56de\u65cb\u9556\u7684\u6570\u91cf\u3002")),a.createElement("h2",{id:"\u9898\u89e3-1---typescript"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.09.13"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a252ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a60.9MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1amap \u50a8\u5b58\u3002")),a.createElement(c.Z,{code:"function numberOfBoomerangs(points: number[][]): number {\n  const n = points.length;\n  const getDistance = ([x1, y1]: number[], [x2, y2]: number[]) => (x1 - x2) ** 2 + (y1 - y2) ** 2;\n  const pointMap: Map<number[], Map<number, number>> = new Map();\n  let ans = 0;\n  for (let i = 0; i < n; i++) {\n    const p1 = points[i];\n    let map1 = pointMap.get(p1);\n    if (!map1) pointMap.set(p1, (map1 = new Map()));\n    for (let j = i + 1; j < n; j++) {\n      const p2 = points[j];\n      let map2 = pointMap.get(p2);\n      if (!map2) pointMap.set(p2, (map2 = new Map()));\n      const distance = getDistance(p1, p2);\n      const count1 = map1.get(distance) ?? 0;\n      map1.set(distance, count1 + 1);\n      ans += count1 * 2;\n      const count2 = map2.get(distance) ?? 0;\n      map2.set(distance, count2 + 1);\n      ans += count2 * 2;\n    }\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=a.useContext(l.context),t=n.demos;return a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),a.createElement(o,{demos:t})}}}]);