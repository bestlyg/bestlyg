(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[23786],{89364:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"629-k-\u4e2a\u9006\u5e8f\u5bf9\u6570\u7ec4"},l.createElement(r.AnchorLink,{to:"#629-k-\u4e2a\u9006\u5e8f\u5bf9\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"629. K \u4e2a\u9006\u5e8f\u5bf9\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/k-inverse-pairs-array/"},"629. K \u4e2a\u9006\u5e8f\u5bf9\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570 n \u548c k\uff0c\u627e\u51fa\u6240\u6709\u5305\u542b\u4ece 1 \u5230 n \u7684\u6570\u5b57\uff0c\u4e14\u6070\u597d\u62e5\u6709 k \u4e2a\u9006\u5e8f\u5bf9\u7684\u4e0d\u540c\u7684\u6570\u7ec4\u7684\u4e2a\u6570\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.11"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a5508ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a45.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u52a8\u6001\u89c4\u5212\u3002")),l.createElement(c.Z,{code:"function kInversePairs(n: number, k: number): number {\n  if (k === 0) return 1;\n  const MOD = 10 ** 9 + 7;\n  const dp: Map<number, number>[] = new Array(2).fill(0).map(_ => new Map());\n  dp[0].set(0, 1);\n  for (let i = 1; i < n; i++) {\n    const map = dp[i % 2];\n    map.clear();\n    for (const [num, cnt] of dp[(i - 1) % 2].entries()) {\n      for (let j = 0; j <= i; j++) {\n        if (num + j > k) break;\n        const cur = map.get(num + j) ?? 0;\n        map.set(num + j, (cur + cnt) % MOD);\n      }\n    }\n  }\n  return dp[(n - 1) % 2].get(k) ?? 0;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);