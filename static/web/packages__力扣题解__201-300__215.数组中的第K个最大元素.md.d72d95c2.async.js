(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[88443],{33672:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"215-\u6570\u7ec4\u4e2d\u7684\u7b2c-k-\u4e2a\u6700\u5927\u5143\u7d20"},l.createElement(i.AnchorLink,{to:"#215-\u6570\u7ec4\u4e2d\u7684\u7b2c-k-\u4e2a\u6700\u5927\u5143\u7d20","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"215. \u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/kth-largest-element-in-an-array/"},"215. \u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5806\u3001\u5206\u6cbb\u7b97\u6cd5",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u5728\u672a\u6392\u5e8f\u7684\u6570\u7ec4\u4e2d\u627e\u5230\u7b2c k \u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002\u8bf7\u6ce8\u610f\uff0c\u4f60\u9700\u8981\u627e\u7684\u662f\u6570\u7ec4\u6392\u5e8f\u540e\u7684\u7b2c k \u4e2a\u6700\u5927\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c k \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.6.29"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a88ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a35.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6784\u5efa\u5927\u9876\u5806\u5373\u53ef\u3002")),l.createElement(r.Z,{code:"class Heap {\n  get size(): number {\n    return this._elemenets.length;\n  }\n  constructor(private _elemenets: number[]) {\n    this.heapify();\n  }\n  heapify(): void {\n    for (let i = (this.size >> 1) - 1; i >= 0; i--) {\n      this.siftDown(i);\n    }\n  }\n  remove(): number {\n    const root = this._elemenets[0];\n    this._elemenets[0] = this._elemenets.pop() as number;\n    this.siftDown(0);\n    return root;\n  }\n  siftDown(index: number) {\n    const element = this._elemenets[index];\n    const half = this.size >> 1;\n    while (index < half) {\n      let childIndex = (index << 1) + 1;\n      let child = this._elemenets[childIndex];\n      const rightIndex = childIndex + 1;\n      if (rightIndex < this.size && this._elemenets[rightIndex] > child) {\n        child = this._elemenets[(childIndex = rightIndex)];\n      }\n      if (element >= child) break;\n      this._elemenets[index] = child;\n      index = childIndex;\n    }\n    this._elemenets[index] = element;\n  }\n}\nfunction findKthLargest(nums: number[], k: number): number {\n  const heap = new Heap(nums);\n  for (let i = 1; i < k; i++) {\n    heap.remove();\n  }\n  return heap.remove();\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);