(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[51665],{98340:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),a=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"915-\u5206\u5272\u6570\u7ec4"},l.createElement(i.AnchorLink,{to:"#915-\u5206\u5272\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"915. \u5206\u5272\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode.cn/problems/partition-array-into-disjoint-intervals/"},"915. \u5206\u5272\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u5728\u5b8c\u6210\u8fd9\u6837\u7684\u5206\u7ec4\u540e\u8fd4\u56de left \u7684 \u957f\u5ea6 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.10.24"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a732ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a136.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u7ef4\u62a4\u6709\u5e8f\u5e8f\u5217\u3002")),l.createElement(a.Z,{code:"class Solution {\npublic:\n    int partitionDisjoint(vector<int>& nums) {\n        int n = nums.size();\n        map<int, int> m1, m2;\n        m1[nums[0]]++;\n        for (int i = 1; i < n; i++) m2[nums[i]]++;\n        int idx = 1;\n        while (m1.crbegin()->first > m2.cbegin()->first) {\n            m1[nums[idx]]++;\n            m2[nums[idx]]--;\n            if (m2[nums[idx]] == 0) m2.erase(nums[idx]);\n            ++idx;\n        }\n        return idx;\n    }\n};",lang:"cpp"}),l.createElement("h2",{id:"\u9898\u89e3-2---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.10.24"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a140ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a91.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4e00\u6b21\u904d\u5386\uff0c\u7ef4\u62a4\u5de6\u8fb9\u7684\u6700\u5927\u503c\u3002")),l.createElement(a.Z,{code:"class Solution {\npublic:\n    int partitionDisjoint(vector<int>& nums) {\n        int n = nums.size(), cur_max = nums[0], ans = 1, ans_max = nums[0];\n        for (int i = 1; i < n; i++) {\n            cur_max = max(cur_max, nums[i]);\n            if (nums[i] < ans_max) {\n                ans_max = cur_max;\n                ans = i + 1;\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);