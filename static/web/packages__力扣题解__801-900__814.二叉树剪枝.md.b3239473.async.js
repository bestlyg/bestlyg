(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[72507],{83720:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),c=t(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"814-\u4e8c\u53c9\u6811\u526a\u679d"},r.createElement(l.AnchorLink,{to:"#814-\u4e8c\u53c9\u6811\u526a\u679d","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"814. \u4e8c\u53c9\u6811\u526a\u679d"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode.cn/problems/binary-tree-pruning/"},"814. \u4e8c\u53c9\u6811\u526a\u679d"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u79fb\u9664\u4e86\u6240\u6709\u4e0d\u5305\u542b 1 \u7684\u5b50\u6811\u7684\u539f\u4e8c\u53c9\u6811\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---cpp"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.4MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(c.Z,{code:"class Solution {\n   public:\n    TreeNode *pruneTree(TreeNode *root) {\n        bool check = false;\n        return _pruneTree(root, &check);\n    }\n    TreeNode *_pruneTree(TreeNode *root, bool *check) {\n        if (root == nullptr) {\n            *check = false;\n            return root;\n        }\n        bool checkl = false, checkr = false;\n        root->left = _pruneTree(root->left, &checkl);\n        root->right = _pruneTree(root->right, &checkr);\n        if (root->val || checkl || checkr) {\n            *check = true;\n            return root;\n        } else {\n            *check = false;\n            return nullptr;\n        }\n    }\n};",lang:"cpp"}),r.createElement("h2",{id:"\u9898\u89e3-2---rust"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---rust","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - rust"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(c.Z,{code:"use std::cell::RefCell;\nuse std::rc::Rc;\nimpl Solution {\n    pub fn prune_tree(root: Option<Rc<RefCell<TreeNode>>>) -> Option<Rc<RefCell<TreeNode>>> {\n        let mut check = false;\n        let mut root = root;\n        Solution::_prune_tree(&mut root, &mut check);\n        root\n    }\n    fn _prune_tree(root: &mut Option<Rc<RefCell<TreeNode>>>, check: &mut bool) {\n        if root.is_none() {\n            *check = false;\n            return;\n        }\n        let mut check_l = false;\n        let mut check_r = false;\n        Solution::_prune_tree(&mut root.as_ref().unwrap().borrow_mut().left, &mut check_l);\n        Solution::_prune_tree(&mut root.as_ref().unwrap().borrow_mut().right, &mut check_r);\n        if root.as_ref().unwrap().borrow().val == 1 || check_l || check_r {\n            *check = true;\n        } else {\n            *root = None;\n        }\n    }\n}",lang:"rust"}),r.createElement("h2",{id:"\u9898\u89e3-3---javascript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---javascript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - javascript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a60ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.7MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(c.Z,{code:"var pruneTree = function (root) {\n  return _pruneTree(root)[0];\n};\nfunction _pruneTree(root) {\n  if (!root) return [null, false];\n  const [left, checkl] = _pruneTree(root.left);\n  const [right, checkr] = _pruneTree(root.right);\n  root.left = left;\n  root.right = right;\n  if (checkl || checkr || root.val === 1) {\n    return [root, true];\n  } else {\n    return [null, false];\n  }\n}",lang:"javascript"}),r.createElement("h2",{id:"\u9898\u89e3-4---javascript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-4---javascript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 4 - javascript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a68ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43.9MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(c.Z,{code:"function pruneTree(root: TreeNode | null): TreeNode | null {\n  return _pruneTree(root)[0];\n}\nfunction _pruneTree(root: TreeNode | null): [TreeNode | null, boolean] {\n  if (!root) return [null, false];\n  const [left, checkl] = _pruneTree(root.left);\n  const [right, checkr] = _pruneTree(root.right);\n  root.left = left;\n  root.right = right;\n  if (checkl || checkr || root.val === 1) {\n    return [root, true];\n  } else {\n    return [null, false];\n  }\n}",lang:"javascript"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);