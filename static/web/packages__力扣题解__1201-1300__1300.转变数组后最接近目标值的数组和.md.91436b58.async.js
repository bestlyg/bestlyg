(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[84194],{32928:function(e,n,t){"use strict";t.r(n);var a=t(96832),r=t(22131),l=t(89730),c=a.memo((e=>{e.demos;return a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h1",{id:"1300-\u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"},a.createElement(r.AnchorLink,{to:"#1300-\u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"),a.createElement("blockquote",null,a.createElement("p",null,"\u94fe\u63a5\uff1a",a.createElement(r.Link,{to:"https://leetcode-cn.com/problems/sum-of-mutated-array-closest-to-target/"},"1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"),a.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",a.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e",a.createElement("br",null),"\u7b80\u4ecb\uff1a\u6392\u5e8f\u540e\u8fdb\u884c\u5224\u65ad\uff0c\u56db\u820d\u4e94\u5165")),a.createElement("h2",{id:"\u9898\u89e3-1---typescript"},a.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.6.17"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a36MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adescription\u3002")),a.createElement(l.Z,{code:"function findBestValue(arr: number[], target: number): number {\n  const len = arr.length;\n  if (len === 1) return target > arr[0] ? target : arr[0];\n  arr.sort((a, b) => a - b);\n  let sum = 0;\n  let min = Infinity;\n  let cha = Infinity;\n  for (let i = 0; i < len; i++) {\n    const num = arr[i];\n    const sLen = len - i - 1;\n    sum += num;\n    const need = Math.round((target - sum) / sLen);\n    if (need < num || (i !== len - 1 && need > arr[i + 1])) continue;\n    const newCha = Math.abs(need * sLen + sum - target);\n    compCha(newCha, need);\n    const newCha2 = Math.abs((need - 1) * sLen + sum - target);\n    compCha(newCha2, need - 1);\n  }\n  if (min === Infinity) {\n    const num = Math.round(target / len);\n    if (num < arr[0]) {\n      const newCha = Math.abs(num * len - target);\n      compCha(newCha, num);\n    }\n  }\n  compCha(Math.abs(target - sum), arr[len - 1]);\n  return min;\n  function compCha(newCha: number, need: number): void {\n    if (newCha < cha || (newCha === cha && need < min)) {\n      cha = newCha;\n      min = need;\n    }\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=a.useContext(r.context),t=n.demos;return a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),a.createElement(c,{demos:t})}}}]);