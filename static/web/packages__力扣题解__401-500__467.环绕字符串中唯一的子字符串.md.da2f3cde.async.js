(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[36613],{27697:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),a=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"467-\u73af\u7ed5\u5b57\u7b26\u4e32\u4e2d\u552f\u4e00\u7684\u5b50\u5b57\u7b26\u4e32"},l.createElement(r.AnchorLink,{to:"#467-\u73af\u7ed5\u5b57\u7b26\u4e32\u4e2d\u552f\u4e00\u7684\u5b50\u5b57\u7b26\u4e32","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"467. \u73af\u7ed5\u5b57\u7b26\u4e32\u4e2d\u552f\u4e00\u7684\u5b50\u5b57\u7b26\u4e32"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode.cn/problems/unique-substrings-in-wraparound-string/"},"467. \u73af\u7ed5\u5b57\u7b26\u4e32\u4e2d\u552f\u4e00\u7684\u5b50\u5b57\u7b26\u4e32"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u73b0\u5728\u7ed9\u5b9a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 p \u3002\u8fd4\u56de s \u4e2d \u552f\u4e00 \u7684 p \u7684 \u975e\u7a7a\u5b50\u4e32 \u7684\u6570\u91cf \u3002 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a8ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\uff0c\u6bcf\u6b21\u50a8\u5b58\u4ee5\u5f53\u524d\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u957f\u5ea6\u3002")),l.createElement(a.Z,{code:"class Solution {\n   public:\n    int findSubstringInWraproundString(string p) {\n        int n = p.size(), ans = 0;\n        vector<int> dp(n);\n        unordered_map<char, int> m;\n        dp[0] = 1;\n        m[p[0]] = 1;\n        for (int i = 1; i < n; i++) {\n            int next = p[i - 1] == 'z' ? 'a' : p[i - 1] + 1;\n            if (next != p[i])\n                dp[i] = 1;\n            else\n                dp[i] = dp[i - 1] + 1;\n            m[p[i]] = max(m[p[i]], dp[i]);\n        }\n        for (auto& item : m) ans += item.second;\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);