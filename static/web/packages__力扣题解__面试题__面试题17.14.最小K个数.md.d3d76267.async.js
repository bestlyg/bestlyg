(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[97566],{29677:function(e,n,t){"use strict";t.r(n);var r=t(96832),i=t(22131),l=t(89730),a=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"\u9762\u8bd5\u9898-1714-\u6700\u5c0f-k-\u4e2a\u6570"},r.createElement(i.AnchorLink,{to:"#\u9762\u8bd5\u9898-1714-\u6700\u5c0f-k-\u4e2a\u6570","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9762\u8bd5\u9898 17.14. \u6700\u5c0f K \u4e2a\u6570"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(i.Link,{to:"https://leetcode-cn.com/problems/smallest-k-lcci/"},"\u9762\u8bd5\u9898 17.14. \u6700\u5c0f K \u4e2a\u6570"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5806\u3001\u5206\u6cbb\u7b97\u6cd5\u3001\u6392\u5e8f",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684 k \u4e2a\u6570\u3002\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u8fd9 k \u4e2a\u6570\u5747\u53ef\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.07"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a164ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a45.1MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5229\u7528\u5185\u90e8\u6392\u5e8f\u3002")),r.createElement(l.Z,{code:"function smallestK(arr: number[], k: number): number[] {\n  return arr.sort((a, b) => a - b).slice(0, k);\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-2---typescript"},r.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.09.03"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a8000ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.4mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5806\u3002")),r.createElement(l.Z,{code:"class Heap<T = number> {\n  private arr: T[] = [];\n  get isEmpty() {\n    return this.size === 0;\n  }\n  get size() {\n    return this.arr.length;\n  }\n  get top() {\n    return this.arr[0];\n  }\n  constructor(private compare: (t1: T, t2: T) => number) {}\n  add(num: T): void {\n    this.arr.push(num);\n    this.shiftUp(this.size - 1);\n  }\n  remove(): T {\n    const num = this.arr.shift()!;\n    if (this.size) {\n      this.arr.unshift(this.arr.pop()!);\n      this.shiftDown(0);\n    }\n    return num;\n  }\n  private shiftUp(index: number): void {\n    if (index === 0) return;\n    const parentIndex = (index - 1) >> 1;\n    if (this.compare(this.arr[index], this.arr[parentIndex]) > 0) {\n      [this.arr[index], this.arr[parentIndex]] = [this.arr[parentIndex], this.arr[index]];\n      this.shiftUp(parentIndex);\n    }\n  }\n  private shiftDown(index: number): void {\n    let childrenIndex = index * 2 + 1;\n    if (childrenIndex > this.size - 1) return;\n    if (\n      childrenIndex + 1 <= this.size - 1 &&\n      this.compare(this.arr[childrenIndex + 1], this.arr[childrenIndex]) > 0\n    ) {\n      childrenIndex++;\n    }\n    if (this.compare(this.arr[childrenIndex], this.arr[index]) > 0) {\n      [this.arr[childrenIndex], this.arr[index]] = [this.arr[index], this.arr[childrenIndex]];\n      this.shiftDown(childrenIndex);\n    }\n  }\n  *[Symbol.iterator](): IterableIterator<T> {\n    for (const t of this.arr) {\n      yield t;\n    }\n  }\n}\nfunction smallestK(arr: number[], k: number): number[] {\n  const heap = new Heap((t1, t2) => t2 - t1);\n  arr.forEach(v => heap.add(v));\n  const ans: number[] = [];\n  while (k--) ans.push(heap.remove());\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(i.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(a,{demos:t})}}}]);