(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[95088],{19240:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),i=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"846-\u4e00\u624b\u987a\u5b50"},l.createElement(c.AnchorLink,{to:"#846-\u4e00\u624b\u987a\u5b50","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"846. \u4e00\u624b\u987a\u5b50"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode-cn.com/problems/hand-of-straights/"},"846. \u4e00\u624b\u987a\u5b50"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 hand \u5176\u4e2d hand[i] \u662f\u5199\u5728\u7b2c i \u5f20\u724c\uff0c\u548c\u4e00\u4e2a\u6574\u6570 groupSize \u3002\u5982\u679c\u5979\u53ef\u80fd\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u724c\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.30"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a32ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a19.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u540e\u6807\u8bb0\u4f7f\u7528\u8fc7\u7684\u503c\u3002")),l.createElement(i.Z,{code:"class Solution {\n   public:\n    bool isNStraightHand(vector<int>& hand, int groupSize) {\n        int n = hand.size(), ans = 0, *check = (int*)calloc(n, sizeof(int)),\n            *nums = (int*)calloc(groupSize, sizeof(int));\n        sort(hand.begin(), hand.end());\n        for (int i = 0; i < n; i++) {\n            if (check[i]) continue;\n            int len = 0, pre = hand[i];\n            nums[len++] = i;\n            for (int j = i + 1; j < n && len < groupSize && hand[j] <= pre + 1;\n                 j++) {\n                if (check[j] || pre == hand[j]) continue;\n                pre = hand[j];\n                nums[len++] = j;\n            }\n            if (len < groupSize) continue;\n            ans++;\n            for (int j = 0; j < groupSize; j++) check[nums[j]] = 1;\n        }\n        return ans * groupSize == n;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);