(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[20693],{94322:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"6241-\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee"},l.createElement(i.AnchorLink,{to:"#6241-\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"6241. \u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode.cn/problems/number-of-unequal-triplets-in-array/"},"6241. \u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u4e09\u5143\u7ec4\u7684\u6570\u76ee\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a344ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u66b4\u529b\u3002")),l.createElement(r.Z,{code:"class Solution {\npublic:\n    int unequalTriplets(vector<int>& nums) {\n        map<int, int> m;\n        for (auto &num : nums) m[num]++;\n        vector<int> list;\n        for (auto &item : m) list.push_back(item.first);\n        int ans = 0;\n        for (int i = 0; i < list.size(); i++) {\n            for (int j = i + 1; j < list.size(); j++) {\n                for (int k = j + 1; k < list.size(); k++) {\n                    ans += m[list[i]] * m[list[j]] * m[list[k]];\n                }\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"}),l.createElement(r.Z,{code:"## \u9898\u89e3 2 - cpp",lang:"unknown"}),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u76f8\u540c\u7684\u6570\uff0c\u5224\u65ad\u6bd4\u4ed6\u5c0f\u7684\u6709\u51e0\u4e2a\u6570\uff0c\u6bd4\u4ed6\u5927\u7684\u6709\u51e0\u4e2a\u6570\u3002")),l.createElement(r.Z,{code:"class Solution {\npublic:\n    int unequalTriplets(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int ans = 0, prev = 0;\n        for (int i = 0; i < nums.size() - 1; i++) {\n            if (nums[i] == nums[i + 1]) continue;\n            ans += prev * (i - prev + 1) * (nums.size() - i - 1);\n            prev = i + 1;\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);