(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[34687],{75754:function(e,n,t){"use strict";t.r(n);var l=t(96832),m=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"765-\u60c5\u4fa3\u7275\u624b"},l.createElement(m.AnchorLink,{to:"#765-\u60c5\u4fa3\u7275\u624b","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"765. \u60c5\u4fa3\u7275\u624b"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(m.Link,{to:"https://leetcode-cn.com/problems/couples-holding-hands/"},"765. \u60c5\u4fa3\u7275\u624b"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u5e76\u67e5\u96c6\u3001\u56fe",l.createElement("br",null),"\u7b80\u4ecb\uff1aN \u5bf9\u60c5\u4fa3\u5750\u5728\u8fde\u7eed\u6392\u5217\u7684 2N \u4e2a\u5ea7\u4f4d\u4e0a\uff0c\u60f3\u8981\u7275\u5230\u5bf9\u65b9\u7684\u624b\u3002 \u8ba1\u7b97\u6700\u5c11\u4ea4\u6362\u5ea7\u4f4d\u7684\u6b21\u6570\uff0c\u4ee5\u4fbf\u6bcf\u5bf9\u60c5\u4fa3\u53ef\u4ee5\u5e76\u80a9\u5750\u5728\u4e00\u8d77\u3002 \u4e00\u6b21\u4ea4\u6362\u53ef\u9009\u62e9\u4efb\u610f\u4e24\u4eba\uff0c\u8ba9\u4ed6\u4eec\u7ad9\u8d77\u6765\u4ea4\u6362\u5ea7\u4f4d\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(m.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.2.14"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u50a8\u5b58\u6240\u6709\u503c\u8fdb\u884c\u4ea4\u6362\u3002")),l.createElement(r.Z,{code:"function minSwapsCouples(row: number[]): number {\n  const map: Record<number, number> = {};\n  row.forEach((num, i) => (map[num] = i));\n  const swap = (num1: number, num2: number) => {\n    [row[map[num1]], row[map[num2]]] = [row[map[num2]], row[map[num1]]];\n    [map[num1], map[num2]] = [map[num2], map[num1]];\n  };\n  let ans = 0;\n  for (let i = 0, l = row.length - 1; i < l - 1; i += 2) {\n    const num = row[i];\n    const nextNum = row[i + 1];\n    const needNum = num & 1 ? num - 1 : num + 1;\n    if (nextNum !== needNum) {\n      ans++;\n      swap(needNum, nextNum);\n    }\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(m.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&m.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);