(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[90678],{84183:function(e,n,t){"use strict";t.r(n);var l=t(96832),s=t(22131),a=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"735-\u884c\u661f\u78b0\u649e"},l.createElement(s.AnchorLink,{to:"#735-\u884c\u661f\u78b0\u649e","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"735. \u884c\u661f\u78b0\u649e"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(s.Link,{to:"https://leetcode.cn/problems/asteroid-collision/"},"735. \u884c\u661f\u78b0\u649e"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u627e\u51fa\u78b0\u649e\u540e\u5269\u4e0b\u7684\u6240\u6709\u884c\u661f\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.13"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a16ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a17.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6808\u3002")),l.createElement(a.Z,{code:"class Solution {\n   public:\n    vector<int> asteroidCollision(vector<int>& asteroids) {\n        int n = asteroids.size();\n        stack<int> s;\n        for (int i = 0; i < n; i++) {\n            int aster = asteroids[i];\n            bool hasAster = true;\n            while (s.size() && asteroids[s.top()] > 0 && aster < 0) {\n                int top = asteroids[s.top()];\n                if (abs(top) == abs(aster)) s.pop();\n                if (abs(top) >= abs(aster)) {\n                    hasAster = false;\n                    break;\n                } else\n                    s.pop();\n            }\n            if (hasAster) s.push(i);\n        }\n        vector<int> ans(s.size());\n        for (int i = s.size() - 1; i >= 0; i--)\n            ans[i] = asteroids[s.top()], s.pop();\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(s.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);