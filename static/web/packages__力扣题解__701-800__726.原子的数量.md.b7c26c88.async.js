(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[54683],{38572:function(e,n,t){"use strict";t.r(n);var r=t(96832),c=t(22131),l=t(89730),a=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"726-\u539f\u5b50\u7684\u6570\u91cf"},r.createElement(c.AnchorLink,{to:"#726-\u539f\u5b50\u7684\u6570\u91cf","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"726. \u539f\u5b50\u7684\u6570\u91cf"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(c.Link,{to:"https://leetcode-cn.com/problems/number-of-atoms/"},"726. \u539f\u5b50\u7684\u6570\u91cf"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u54c8\u5e0c\u8868\u3001\u6808",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5316\u5b66\u5f0f\uff0c\u8f93\u51fa\u6240\u6709\u539f\u5b50\u7684\u6570\u91cf\u3002\u683c\u5f0f\u4e3a\uff1a\u7b2c\u4e00\u4e2a\uff08\u6309\u5b57\u5178\u5e8f\uff09\u539f\u5b50\u7684\u540d\u5b50\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u539f\u5b50\u7684\u540d\u5b57\uff08\u6309\u5b57\u5178\u5e8f\uff09\uff0c\u8ddf\u7740\u5b83\u7684\u6570\u91cf\uff08\u5982\u679c\u6570\u91cf\u5927\u4e8e 1\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.05"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a112ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u68c0\u7d22\u62ec\u53f7\uff0c\u9010\u4e2a\u5b58\u5165\u54c8\u5e0c\u8868\u4e2d\u3002")),r.createElement(l.Z,{code:"function countOfAtoms(formula: string): string {\n  const uperChar = /^[A-Z]$/;\n  const lowerChar = /^[a-z]$/;\n  const numChar = /^[0-9]$/;\n  const data = getRecord(formula);\n  return Object.entries(data)\n    .sort(([k1], [k2]) => {\n      const len1 = k1.length;\n      const len2 = k2.length;\n      let i = 0;\n      while (i < Math.min(len1, len2)) {\n        const code1 = k1.codePointAt(i)!;\n        const code2 = k2.codePointAt(i)!;\n        if (code1 !== code2) return code1 - code2;\n        else i++;\n      }\n      if (i === len1) return -1;\n      else if (i === len2) return 1;\n      else return 0;\n    })\n    .map(([k, v]) => k + (v === 1 ? '' : v))\n    .join('');\n  function getRecord(str: string): Record<string, number> {\n    const len = str.length;\n    const stack: string[] = [];\n    const map: Record<string, number> = {};\n    for (let i = 0; i < len; i++) {\n      let c = str[i];\n      if (uperChar.test(c)) {\n        stack.push(c);\n      } else if (lowerChar.test(c)) {\n        stack.push(stack.pop()! + c);\n      } else if (c === '(') {\n        let left = 1;\n        let tempStr = '';\n        while (true) {\n          if (str[i + 1] === '(') left++;\n          if (str[i + 1] === ')' && --left === 0) break;\n          tempStr += str[++i];\n        }\n        const internalRecord = getRecord(tempStr);\n        i++;\n        let numStr = '';\n        while (numChar.test(str[i + 1])) numStr += str[++i];\n        const num = +numStr;\n        Object.entries(internalRecord).forEach(([k, v]) => {\n          map[k] = (map[k] ?? 0) + v * (num === 0 ? 1 : num);\n        });\n      } else {\n        while (numChar.test(str[i + 1])) c = c + str[++i];\n        const num = +c;\n        const char = stack.pop()!;\n        map[char] = (map[char] ?? 0) + num;\n      }\n    }\n    while (stack.length !== 0) {\n      const c = stack.pop()!;\n      map[c] = (map[c] ?? 0) + 1;\n    }\n    return map;\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(c.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(a,{demos:t})}}}]);