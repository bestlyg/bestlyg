(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[24592],{37319:function(e,n,t){"use strict";t.r(n);var i=t(96832),r=t(22131),a=t(89730),s=i.memo((e=>{e.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"\u9762\u8bd5\u9898-1720-\u8fde\u7eed\u4e2d\u503c"},i.createElement(r.AnchorLink,{to:"#\u9762\u8bd5\u9898-1720-\u8fde\u7eed\u4e2d\u503c","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9762\u8bd5\u9898 17.20. \u8fde\u7eed\u4e2d\u503c"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(r.Link,{to:"https://leetcode-cn.com/problems/continuous-median-lcci/"},"\u9762\u8bd5\u9898 17.20. \u8fde\u7eed\u4e2d\u503c"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",i.createElement("br",null),"\u6807\u7b7e\uff1a\u5806",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u968f\u673a\u4ea7\u751f\u6570\u5b57\u5e76\u4f20\u9012\u7ed9\u4e00\u4e2a\u65b9\u6cd5\u3002\u4f60\u80fd\u5426\u5b8c\u6210\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5728\u6bcf\u6b21\u4ea7\u751f\u65b0\u503c\u65f6\uff0c\u5bfb\u627e\u5f53\u524d\u6240\u6709\u503c\u7684\u4e2d\u95f4\u503c\uff08\u4e2d\u4f4d\u6570\uff09\u5e76\u4fdd\u5b58\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---typescript"},i.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.04.10"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a280ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a58.9MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6784\u5efa\u5de6\u4fa7\u5927\u9876\u5806\u548c\u53f3\u4fa7\u5c0f\u9876\u5806\uff0c\u4e2d\u95f4\u503c\u4e3a\u5de6\u4fa7\u5806\u6700\u5927\u503c\u548c\u53f3\u4fa7\u5806\u6700\u5c0f\u503c\u7684\u6bd4\u8f83\u3002")),i.createElement(a.Z,{code:"class Heap<T> {\n  private arr: T[] = [];\n  get isEmpty() {\n    return this.size === 0;\n  }\n  get size() {\n    return this.arr.length;\n  }\n  get top() {\n    return this.arr[0];\n  }\n  constructor(private compare: (t1: T, t2: T) => number) {}\n  add(num: T): void {\n    this.arr.push(num);\n    this.shiftUp(this.size - 1);\n  }\n  remove(): T {\n    const num = this.arr.shift()!;\n    if (this.size) {\n      this.arr.unshift(this.arr.pop()!);\n      this.shiftDown(0);\n    }\n    return num;\n  }\n  private shiftUp(index: number): void {\n    if (index === 0) return;\n    const parentIndex = (index - 1) >> 1;\n    if (this.compare(this.arr[index], this.arr[parentIndex]) > 0) {\n      [this.arr[index], this.arr[parentIndex]] = [this.arr[parentIndex], this.arr[index]];\n      this.shiftUp(parentIndex);\n    }\n  }\n  private shiftDown(index: number): void {\n    let childrenIndex = index * 2 + 1;\n    if (childrenIndex > this.size - 1) return;\n    if (\n      childrenIndex + 1 <= this.size - 1 &&\n      this.compare(this.arr[childrenIndex + 1], this.arr[childrenIndex]) > 0\n    ) {\n      childrenIndex++;\n    }\n    if (this.compare(this.arr[childrenIndex], this.arr[index]) > 0) {\n      [this.arr[childrenIndex], this.arr[index]] = [this.arr[index], this.arr[childrenIndex]];\n      this.shiftDown(childrenIndex);\n    }\n  }\n}\n\nclass MedianFinder {\n  private leftHeap = new Heap<number>((num1: number, num2: number) => num1 - num2);\n  private rightHeap = new Heap<number>((num1: number, num2: number) => num2 - num1);\n  get size() {\n    return this.leftHeap.size + this.rightHeap.size;\n  }\n  addNum(num: number): void {\n    if (!this.leftHeap.size || this.leftHeap.top >= num) {\n      this.leftHeap.add(num);\n    } else {\n      this.rightHeap.add(num);\n    }\n    if (this.leftHeap.size === this.rightHeap.size + 2) {\n      this.rightHeap.add(this.leftHeap.remove());\n    } else if (this.leftHeap.size === this.rightHeap.size - 1) {\n      this.leftHeap.add(this.rightHeap.remove());\n    }\n  }\n  findMedian(): number {\n    if (this.size % 2 === 0) {\n      return (this.leftHeap.top + this.rightHeap.top) / 2;\n    } else {\n      return this.leftHeap.top;\n    }\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=i.useContext(r.context),t=n.demos;return i.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),i.createElement(s,{demos:t})}}}]);