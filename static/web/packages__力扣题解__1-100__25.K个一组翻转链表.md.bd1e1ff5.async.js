(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[18886],{38325:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),o=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"25-k-\u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868"},l.createElement(r.AnchorLink,{to:"#25-k-\u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/reverse-nodes-in-k-group/"},"25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u94fe\u8868",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf k \u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u8bf7\u4f60\u8fd4\u56de\u7ffb\u8f6c\u540e\u7684\u94fe\u8868\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---javascript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.5.16"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a37.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6bcf K \u4e2a\u8fdb\u884c\u622a\u53d6\u7ffb\u8f6c\u3002")),l.createElement(o.Z,{code:"function listNodeLastNode(node) {\n  let temp = node;\n  if (temp === null) return null;\n  while (temp.next !== null) temp = temp.next;\n  return temp;\n}\nfunction listNodeReverse(node) {\n  let newRoot;\n  function _reverse(node, prevNode) {\n    if (node.next !== null) _reverse(node.next, node);\n    else newRoot = node;\n    node.next = prevNode;\n  }\n  _reverse(node, null);\n  return newRoot;\n}\nfunction listNodeLength(node) {\n  let l = 0,\n    temp = node;\n  if (temp === null) return l;\n  while (temp !== null) {\n    l++;\n    temp = temp.next;\n  }\n  return l;\n}\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar reverseKGroup = function (head, k) {\n  if (head === null) return null;\n  let temp = head,\n    num = k;\n  const rootArr = [temp];\n  while (temp !== null) {\n    if (--num === 0) {\n      const next = temp.next;\n      temp.next = null;\n      temp = next;\n      num = k;\n      rootArr.push(next);\n    } else temp = temp.next;\n  }\n  const len = rootArr.length;\n  let root, lastNode;\n  for (let i = 0; i < len; i++) {\n    if (i === len - 1) {\n      if (listNodeLength(rootArr[i]) !== k) lastNode.next = rootArr[i];\n      else lastNode.next = listNodeReverse(rootArr[i]);\n    } else {\n      if (i === 0) root = listNodeReverse(rootArr[i]);\n      else lastNode.next = listNodeReverse(rootArr[i]);\n      lastNode = listNodeLastNode(root);\n    }\n  }\n  return root;\n};",lang:"javascript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.3.6"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a100ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u3002")),l.createElement(o.Z,{code:"function _reverseList(head: ListNode, count: number): ListNode | null {\n  if (count === 1 || head.next === null) return head;\n  const tail = head.next;\n  const nextList = _reverseList(tail, count - 1);\n  head.next = tail.next;\n  tail.next = head;\n  return nextList;\n}\nfunction reverseList(head: ListNode, count: number): ListNode | null {\n  let temp: ListNode | null = head;\n  let c = count;\n  while (--c && temp) temp = temp.next;\n  return temp ? _reverseList(head, count) : head;\n}\nfunction reverseKGroup(head: ListNode | null, k: number): ListNode | null {\n  const dummyHead = new ListNode(0, head);\n  let temp: ListNode = dummyHead;\n  while (temp !== null && temp.next !== null) {\n    temp!.next = reverseList(temp.next!, k);\n    let count = k;\n    while (count-- && temp !== null) temp = temp.next!;\n  }\n  return dummyHead.next;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);