(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[26640],{83760:function(e,n,l){"use strict";l.r(n);var t=l(96832),r=l(22131),o=l(89730),a=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"199-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"},t.createElement(r.AnchorLink,{to:"#199-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(r.Link,{to:"https://leetcode-cn.com/problems/binary-tree-right-side-view/"},"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6811",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u60f3\u8c61\u81ea\u5df1\u7ad9\u5728\u5b83\u7684\u53f3\u4fa7\uff0c\u6309\u7167\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u987a\u5e8f\uff0c\u8fd4\u56de\u4ece\u53f3\u4fa7\u6240\u80fd\u770b\u5230\u7684\u8282\u70b9\u503c\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---javascript"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.4.22"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a112ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a34.3MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5c42\u5e8f\u904d\u5386\u5f53\u524d\u5c42\u904d\u5386\u5b8c\u540e\u538b\u6808\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002")),t.createElement(o.Z,{code:'/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function (root) {\n  if (root === null) return [];\n  const res = [root.val];\n  const queue = [root];\n  let levelSize = 1;\n  while (queue.length !== 0) {\n    const node = queue.shift();\n    // console.log("===================");\n    // console.log(node);\n    if (node.left !== null) queue.push(node.left);\n    if (node.right !== null) queue.push(node.right);\n    if (--levelSize === 0 && queue.length !== 0) {\n      // console.log("in");\n      levelSize = queue.length;\n      res.push(queue[levelSize - 1].val);\n    }\n  }\n  return res;\n};',lang:"javascript"})))}));n["default"]=e=>{var n=t.useContext(r.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(a,{demos:l})}}}]);