(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[96410],{29937:function(n,e,t){"use strict";t.r(e);var l=t(96832),s=t(22131),r=t(89730),c=l.memo((n=>{n.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"321-\u62fc\u63a5\u6700\u5927\u6570"},l.createElement(s.AnchorLink,{to:"#321-\u62fc\u63a5\u6700\u5927\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"321. \u62fc\u63a5\u6700\u5927\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(s.Link,{to:"https://leetcode-cn.com/problems/create-maximum-number//"},"321. \u62fc\u63a5\u6700\u5927\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u957f\u5ea6\u5206\u522b\u4e3a \xa0m\xa0 \u548c \xa0n\xa0 \u7684\u4e24\u4e2a\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u7531 \xa00-9\xa0 \u6784\u6210\uff0c\u8868\u793a\u4e24\u4e2a\u81ea\u7136\u6570\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\u73b0\u5728\u4ece\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u9009\u51fa k (k <= m + n)\xa0 \u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e00\u4e2a\u65b0\u7684\u6570\uff0c\u8981\u6c42\u4ece\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u7684\u6570\u5b57\u4fdd\u6301\u5176\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\u6c42\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u6700\u5927\u6570\u3002\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u6700\u5927\u6570\u7684\u957f\u5ea6\u4e3a \xa0k\xa0 \u7684\u6570\u7ec4\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.12.2"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a228ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8c03\u6808\u8fdb\u884c\u904d\u5386\u3002")),l.createElement(r.Z,{code:"function maxNumber(nums1: number[], nums2: number[], k: number): number[] {\n  const ans: number[][] = [];\n  const pushArr = (nums: number[]) => {\n    const len = nums.length;\n    const arrLen = ans.length;\n    const elLen = ans[0]?.length;\n    if (arrLen === 0 || elLen === len) ans.push(nums);\n    else if (elLen < len) {\n      ans.length = 0;\n      ans.push(nums);\n    }\n  };\n  const getCache = (nums: number[], k: number): number[] => {\n    const len = nums.length;\n    const stack: number[] = [];\n    if (k === 0) return stack;\n    k = len - k;\n    if (k <= 0) return nums;\n    for (const num of nums) {\n      if (stack.length === 0) {\n        stack.push(num);\n      } else {\n        let top = stack[stack.length - 1];\n        while (num > top && k !== 0) {\n          stack.pop();\n          k--;\n          top = stack[stack.length - 1];\n        }\n        stack.push(num);\n      }\n    }\n    while (k-- > 0) stack.pop();\n    return stack;\n  };\n  for (let i = 0; i <= k; i++) {\n    const stack1 = getCache(nums1, i);\n    const stack2 = getCache(nums2, k - i);\n    const len1 = stack1.length;\n    const len2 = stack2.length;\n    if (len1 === 0) pushArr(stack2);\n    else if (len2 === 0) pushArr(stack1);\n    else {\n      const compare = (p1: number, p2: number): boolean =>\n        p2 >= len2\n          ? true\n          : p1 >= len1\n          ? false\n          : stack1[p1] > stack2[p2]\n          ? true\n          : stack1[p1] < stack2[p2]\n          ? false\n          : compare(p1 + 1, p2 + 1);\n      const arr: number[] = [];\n      let i1 = 0;\n      let i2 = 0;\n      while (i1 !== len1 || i2 !== len2) {\n        const num1 = stack1[i1];\n        const num2 = stack2[i2];\n        if (compare(i1, i2)) {\n          arr.push(num1);\n          i1++;\n        } else {\n          arr.push(num2);\n          i2++;\n        }\n      }\n      pushArr(arr);\n    }\n  }\n  const len = ans[0].length;\n  return ans.sort((nums1: number[], nums2: number[]) => {\n    let i1 = 0;\n    let i2 = 0;\n    while (i1 < len && i2 < len) {\n      const n1 = nums1[i1];\n      const n2 = nums2[i2];\n      if (n1 > n2) {\n        return -1;\n      } else if (n1 < n2) {\n        return 1;\n      } else {\n        i1++;\n        i2++;\n      }\n    }\n    return 0;\n  })[0];\n}",lang:"typescript"})))}));e["default"]=n=>{var e=l.useContext(s.context),t=e.demos;return l.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);