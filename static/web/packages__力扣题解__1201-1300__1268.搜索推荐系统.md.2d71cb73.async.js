(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[99941],{14880:function(n,e,t){"use strict";t.r(e);var r=t(96832),o=t(22131),s=t(89730),i=r.memo((n=>{n.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1268-\u641c\u7d22\u63a8\u8350\u7cfb\u7edf"},r.createElement(o.AnchorLink,{to:"#1268-\u641c\u7d22\u63a8\u8350\u7cfb\u7edf","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1268. \u641c\u7d22\u63a8\u8350\u7cfb\u7edf"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(o.Link,{to:"https://leetcode-cn.com/problems/search-suggestions-system/"},"1268. \u641c\u7d22\u63a8\u8350\u7cfb\u7edf"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u5178\u6811\u3001\u6570\u7ec4\u3001\u5b57\u7b26\u4e32",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u4ee5\u4e8c\u7ef4\u5217\u8868\u7684\u5f62\u5f0f\uff0c\u8fd4\u56de\u5728\u8f93\u5165 searchWord \u6bcf\u4e2a\u5b57\u6bcd\u540e\u76f8\u5e94\u7684\u63a8\u8350\u4ea7\u54c1\u7684\u5217\u8868\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.10.25"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a820ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a66.6MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1atrie \u4e2d\u5e8f\u904d\u5386\u3002")),r.createElement(s.Z,{code:"const MAX_COUNT = 26;\nconst getIdx = (ch: string) => ch.codePointAt(0)! - 'a'.codePointAt(0)!;\nclass TrieNode {\n  end = false;\n  children: TrieNode[] = new Array(MAX_COUNT);\n  constructor(public val: string) {}\n}\nclass Trie {\n  root = new TrieNode('');\n  insert(word: string): void {\n    let node = this.root;\n    for (const ch of word) {\n      const idx = getIdx(ch);\n      if (!node.children[idx]) node.children[idx] = new TrieNode(ch);\n      node = node.children[idx];\n    }\n    node.end = true;\n  }\n  findNode(word: string): TrieNode | null {\n    let node = this.root;\n    for (const ch of word) {\n      const idx = getIdx(ch);\n      if (!node.children[idx]) return null;\n      node = node.children[idx];\n    }\n    return node;\n  }\n  search(word: string): boolean {\n    return !!this.findNode(word)?.end;\n  }\n  startsWith(prefix: string): boolean {\n    return !!this.findNode(prefix);\n  }\n}\nfunction suggestedProducts(products: string[], searchWord: string): string[][] {\n  const trie = new Trie();\n  products.forEach(ch => trie.insert(ch));\n  let str = '';\n  const ans: string[][] = [];\n  for (const ch of searchWord) {\n    const node = trie.findNode(str + ch);\n    const list = dfs(node)\n      .slice(0, 3)\n      .map(v => str + v);\n    ans.push(list);\n    str += ch;\n  }\n  return ans;\n  function dfs(node: TrieNode | null): string[] {\n    const ans: string[] = [];\n    _dfs(node);\n    return ans;\n    function _dfs(node: TrieNode | null, str = ''): void {\n      if (!node) return;\n      str += node.val;\n      if (node.end) ans.push(str);\n      for (let i = 0; i < 26; i++) _dfs(node.children[i], str);\n    }\n  }\n}",lang:"typescript"})))}));e["default"]=n=>{var e=r.useContext(o.context),t=e.demos;return r.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),r.createElement(i,{demos:t})}}}]);