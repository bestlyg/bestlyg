(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[70576],{14032:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),o=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1723-\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u95f4"},l.createElement(r.AnchorLink,{to:"#1723-\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u95f4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1723. \u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u95f4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/find-minimum-time-to-finish-all-jobs/"},"1723. \u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u95f4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u56de\u6eaf\u7b97\u6cd5\u3001\u9012\u5f52",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u5206\u914d\u65b9\u6848\u4e2d\u5c3d\u53ef\u80fd \u6700\u5c0f \u7684 \u6700\u5927\u5de5\u4f5c\u65f6\u95f4 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.08"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a3336ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.8MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u56de\u6eaf\u3002")),l.createElement(i.Z,{code:"function minimumTimeRequired(jobs: number[], k: number): number {\n  const len = jobs.length;\n  if (len === k) return Math.max(...jobs);\n  const workers: number[] = new Array(k).fill(0);\n  let min = Infinity;\n  const distribute = (jobIndex: number = 0) => {\n    if (jobIndex === len) {\n      min = Math.min(min, Math.max(...workers));\n      return;\n    }\n    for (let i = 0; i < k; i++) {\n      if (i > 0 && workers[i] === workers[i - 1]) continue;\n      workers[i] += jobs[jobIndex];\n      distribute(jobIndex + 1);\n      workers[i] -= jobs[jobIndex];\n    }\n  };\n  distribute();\n  return min;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(o,{demos:t})}}}]);