(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[40327],{41547:function(e,n,l){"use strict";l.r(n);var t=l(96832),r=l(22131),c=l(89730),o=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"429-n-\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},t.createElement(r.AnchorLink,{to:"#429-n-\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(r.Link,{to:"https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/submissions/"},"429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684\u5c42\u5e8f\u904d\u5386\u3002\uff08\u5373\u4ece\u5de6\u5230\u53f3\uff0c\u9010\u5c42\u904d\u5386\uff09\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.04.08"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a12ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a11.5MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5c42\u5e8f\u904d\u5386\u3002")),t.createElement(c.Z,{code:"class Solution {\n   public:\n    vector<vector<int>> levelOrder(Node *root) {\n        vector<vector<int>> ans;\n        if (!root) return ans;\n        queue<Node *> q;\n        q.push(root);\n        int size = 1;\n        vector<int> cur;\n        while (q.size()) {\n            Node *node = q.front();\n            q.pop();\n            cur.push_back(node->val);\n            for (auto child : node->children) q.push(child);\n            if (--size == 0) {\n                size = q.size();\n                ans.push_back(cur);\n                cur.clear();\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(r.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(o,{demos:l})}}}]);