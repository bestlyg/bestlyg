(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[4047],{12366:function(e,n,l){"use strict";l.r(n);var t=l(96832),r=l(22131),c=l(89730),a=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"2024-\u8003\u8bd5\u7684\u6700\u5927\u56f0\u6270\u5ea6"},t.createElement(r.AnchorLink,{to:"#2024-\u8003\u8bd5\u7684\u6700\u5927\u56f0\u6270\u5ea6","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"2024. \u8003\u8bd5\u7684\u6700\u5927\u56f0\u6270\u5ea6"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(r.Link,{to:"https://leetcode-cn.com/problems/maximize-the-confusion-of-an-exam/"},"2024. \u8003\u8bd5\u7684\u6700\u5927\u56f0\u6270\u5ea6"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u4e8c\u5206\u67e5\u627e\u3001\u524d\u7f00\u548c\u3001\u6ed1\u52a8\u7a97\u53e3",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de\u5728\u4e0d\u8d85\u8fc7 k \u6b21\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927 \u8fde\u7eed 'T' \u6216\u8005 'F' \u7684\u6570\u76ee\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.29"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a24ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a11.7MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u53cc\u6307\u9488\u7ef4\u62a4\u4e2d\u95f4 k\u3002")),t.createElement(c.Z,{code:"class Solution {\n   public:\n    int maxConsecutiveAnswers(string answerKey, int k) {\n        return max(check('T', answerKey, k), check('F', answerKey, k));\n    }\n    int check(char ch, string str, int k) {\n        int n = str.size(), l = 0, r = 0, ans = 0;\n        do {\n            while (r < n && k > 0) {\n                while (r < n && str[r] == ch) r++;\n                k--;\n                if (r < n) r++;\n                while (r < n && str[r] == ch) r++;\n            }\n            ans = max(ans, r - l);\n            while (l < n && k <= 0) {\n                if (str[l] != ch) k++;\n                l++;\n            }\n        } while (r < n);\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(r.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(a,{demos:l})}}}]);