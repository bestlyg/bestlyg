(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[65971],{80838:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"2047-\u53e5\u5b50\u4e2d\u7684\u6709\u6548\u5355\u8bcd\u6570"},l.createElement(r.AnchorLink,{to:"#2047-\u53e5\u5b50\u4e2d\u7684\u6709\u6548\u5355\u8bcd\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"2047. \u53e5\u5b50\u4e2d\u7684\u6709\u6548\u5355\u8bcd\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/number-of-valid-words-in-a-sentence/"},"2047. \u53e5\u5b50\u4e2d\u7684\u6709\u6548\u5355\u8bcd\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 sentence \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de sentence \u4e2d \u6709\u6548\u5355\u8bcd\u7684\u6570\u76ee \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.01.27"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(c.Z,{code:"class Solution {\n   public:\n    string str;\n    int idx = 0;\n    void scan_blank() {\n        while (idx < str.size() && str[idx] == ' ') idx++;\n    }\n    int check(int start, int end) {\n        if (start == end) return 0;\n        int cnt_line = 0, cnt_tag = 0;\n        for (int i = start; i < end; i++) {\n            char ch = str[i];\n            if (ch == '-') {\n                if (++cnt_line > 1 || i == start || i == end - 1 ||\n                    str[i - 1] < 'a' || str[i - 1] > 'z' || str[i + 1] < 'a' ||\n                    str[i + 1] > 'z')\n                    return 0;\n            } else if (ch == '!' || ch == '.' || ch == ',') {\n                if (++cnt_tag > 1 || i != end - 1) return 0;\n            } else if (ch < 'a' || ch > 'z')\n                return 0;\n        }\n        return 1;\n    }\n    int countValidWords(string sentence) {\n        str = sentence;\n        int ans = 0;\n        do {\n            scan_blank();\n            int start = idx, end = idx;\n            while (end < str.size() && str[end] != ' ') end++;\n            idx = end;\n            if (check(start, end)) ans++;\n        } while (idx < str.size());\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);