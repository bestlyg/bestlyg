(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[18337],{76208:function(e,n,t){"use strict";t.r(n);var l=t(96832),o=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"590-n-\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"},l.createElement(o.AnchorLink,{to:"#590-n-\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"590. N \u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(o.Link,{to:"https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/"},"590. N \u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6811",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a N \u53c9\u6811\uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684\u540e\u5e8f\u904d\u5386\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---java"},l.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---java","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - java"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a1ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u6bcf\u4e2a\u5b50\u8282\u70b9\u518d\u9012\u5f52\u3002")),l.createElement(r.Z,{code:"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\nclass Solution {\n\tLinkedList<Integer> list = new LinkedList<Integer>();\n    public List<Integer> postorder(Node root) {\n    \tinPostorder(root);\n        return list;\n    }\n    void inPostorder(Node node) {\n    \tif(node==null)return;\n    \tif(node.children!=null)\n    \tfor(int i=0,len=node.children.size();i<len;i++) {\n    \t\tinPostorder(node.children.get(i));\n    \t}\n\t\tlist.add(node.val);\n    }\n}",lang:"java"}),l.createElement("h2",{id:"\u9898\u89e3-2---c"},l.createElement(o.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.12"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a16ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a11.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    vector<int> postorder(Node *root) {\n        vector<int> ans;\n        if (root) dfs(ans, root);\n        return ans;\n    }\n    void dfs(vector<int> &ans, Node *&root) {\n        for (auto &child : root->children) dfs(ans, child);\n        ans.push_back(root->val);\n    }\n};",lang:"cpp"}),l.createElement("h2",{id:"\u9898\u89e3-3---c"},l.createElement(o.AnchorLink,{to:"#\u9898\u89e3-3---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.12"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a20ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a12.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8fed\u4ee3\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    vector<int> postorder(Node *root) {\n        vector<int> ans;\n        stack<Node *> s;\n        unordered_set<Node *> sset;\n        if (root) s.push(root);\n        while (s.size()) {\n            Node *node = s.top();\n            s.pop();\n            if (sset.count(node)) {\n                ans.push_back(node->val);\n                continue;\n            }\n            sset.insert(node);\n            s.push(node);\n            for (auto it = node->children.rbegin(); it != node->children.rend();\n                 it++) {\n                s.push(*it);\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(o.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);