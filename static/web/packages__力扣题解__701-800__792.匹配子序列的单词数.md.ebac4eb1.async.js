(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[20689],{99493:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"792-\u5339\u914d\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u6570"},l.createElement(i.AnchorLink,{to:"#792-\u5339\u914d\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"792. \u5339\u914d\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode.cn/problems/number-of-matching-subsequences/"},"792. \u5339\u914d\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u5178\u6811\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u548c\u5b57\u7b26\u4e32\u6570\u7ec4 words, \u8fd4\u56de  words[i] \u4e2d\u662fs\u7684\u5b50\u5e8f\u5217\u7684\u5355\u8bcd\u4e2a\u6570 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.17"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a184ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a50.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u628as\u7684\u6bcf\u4e2a\u5750\u6807\u5b58\u5165\u540e\uff0c\u8fdb\u884c\u4e8c\u5206\u3002")),l.createElement(r.Z,{code:"class Solution {\npublic:\n    int numMatchingSubseq(string s, vector<string>& words) {\n        vector<vector<int>> list(26);\n        for (int i = 0; i < s.size(); i++) list[s[i] - 'a'].push_back(i);\n        int ans = 0;\n        for (auto &word : words) {\n            if (word.size() > s.size()) continue;\n            int p = -1;\n            bool f = true;\n            for (auto &c : word) {\n                auto &ilist = list[c - 'a'];\n                auto it = upper_bound(ilist.begin(), ilist.end(), p);\n                if (it == ilist.end()) {\n                    f = false;\n                    break;\n                }\n                if (!f) break;\n                p = *it;\n            }\n            if (f) ans++;\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);