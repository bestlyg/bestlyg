(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[4611],{253:function(e,n,t){"use strict";t.r(n);var r=t(96832),a=t(22131),l=t(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1719-\u91cd\u6784\u4e00\u68f5\u6811\u7684\u65b9\u6848\u6570"},r.createElement(a.AnchorLink,{to:"#1719-\u91cd\u6784\u4e00\u68f5\u6811\u7684\u65b9\u6848\u6570","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1719. \u91cd\u6784\u4e00\u68f5\u6811\u7684\u65b9\u6848\u6570"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(a.Link,{to:"https://leetcode-cn.com/problems/number-of-ways-to-reconstruct-a-tree/"},"1719. \u91cd\u6784\u4e00\u68f5\u6811\u7684\u65b9\u6848\u6570"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u77e9\u9635",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de ways\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---c"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.02.16"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a728ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a159.7MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u627e\u5230\u6839\u8282\u70b9\u540e\uff0c\u904d\u5386\u6240\u6709\u8282\u70b9\u627e\u5230\u5176\u7236\u8282\u70b9\u3002")),r.createElement(l.Z,{code:"class Solution {\n   public:\n    int checkWays(vector<vector<int>>& pairs) {\n        unordered_map<int, unordered_set<int>> m;\n        int root = pairs[0][0];\n        // \u88c5\u8f7dpair\u5230map\u4e2d\uff0c\u540c\u65f6\u8bb0\u5f55\u76f8\u90bb\u6700\u591a\u7684\u8282\u70b9\n        for (auto& pair : pairs) {\n            m[pair[0]].emplace(pair[1]);\n            m[pair[1]].emplace(pair[0]);\n            if (m[root].size() < m[pair[0]].size()) root = pair[0];\n            if (m[root].size() < m[pair[1]].size()) root = pair[1];\n        }\n        // \u5982\u679c\u6700\u591a\u7684\u8282\u70b9\u6ca1\u6cd5\u8986\u76d6\u6240\u6709\u5176\u4ed6\u8282\u70b9\uff0c\u90a3\u5c31\u65e0\u6cd5\u751f\u6210\u6811\n        if (m[root].size() != m.size() - 1) return 0;\n        int ans = 1;\n        // \u904d\u5386\u6240\u6709\u5b50\u8282\u70b9\n        for (auto& [node, list] : m) {\n            if (node == root) continue;\n            // \u5bfb\u627e\u5f53\u524d\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u7236\u8282\u70b9\uff0c \u62e5\u6709\u6bd4\u5f53\u524d\u8282\u70b9\u66f4\u591a\u7684\u76f8\u90bb\u6570\uff0c\n            // \u4e14\u5b50\u8282\u70b9\u7684\u6240\u6709\u76f8\u90bb\u4e5f\u4e0e\u7236\u8282\u70b9\u76f8\u90bb\n            int degree = list.size(), parent = -1, parent_degree = INT_MAX;\n            for (auto& node : list) {\n                if (m[node].size() < parent_degree &&\n                    m[node].size() >= degree) {\n                    parent = node;\n                    parent_degree = m[node].size();\n                }\n            }\n            // \u627e\u4e0d\u5230\u7236\u8282\u70b9\u5c31\u4e0d\u53ef\u80fd\u6210\u6811\n            if (parent == -1) return 0;\n            for (auto& node : list) {\n                if (node == parent) continue;\n                if (!m[parent].count(node)) return 0;\n            }\n            // \u5982\u679c\u8fde\u63a5\u6570\u76f8\u540c\u8bf4\u660e\u7236\u5b50\u53ef\u4ee5\u66ff\u6362\n            if (parent_degree == degree) ans = 2;\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=r.useContext(a.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);