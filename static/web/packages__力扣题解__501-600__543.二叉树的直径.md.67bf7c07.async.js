(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[59012],{11320:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),a=t(89730),o=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"543-\u4e8c\u53c9\u6811\u7684\u76f4\u5f84"},l.createElement(r.AnchorLink,{to:"#543-\u4e8c\u53c9\u6811\u7684\u76f4\u5f84","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/diameter-of-binary-tree/"},"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5b83\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u662f\u4efb\u610f\u4e24\u4e2a\u7ed3\u70b9\u8def\u5f84\u957f\u5ea6\u4e2d\u7684\u6700\u5927\u503c\u3002\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u7a7f\u8fc7\u4e5f\u53ef\u80fd\u4e0d\u7a7f\u8fc7\u6839\u7ed3\u70b9\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.15"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a16ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a19.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs \u7edf\u8ba1\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u3002")),l.createElement(a.Z,{code:"class Solution {\n   public:\n    int h(TreeNode* node) {\n        if (!node) return 0;\n        return max(h(node->left), h(node->right)) + 1;\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if (!root) return 0;\n        return max(h(root->left) + h(root->right),\n                   max(diameterOfBinaryTree(root->left),\n                       diameterOfBinaryTree(root->right)));\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(o,{demos:t})}}}]);