(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[34262],{96711:function(e,n,t){"use strict";t.r(n);var l=t(96832),a=t(22131),c=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"32-\u6700\u957f\u6709\u6548\u62ec\u53f7"},l.createElement(a.AnchorLink,{to:"#32-\u6700\u957f\u6709\u6548\u62ec\u53f7","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"32. \u6700\u957f\u6709\u6548\u62ec\u53f7"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(a.Link,{to:"https://leetcode-cn.com/problems/longest-valid-parentheses/"},"32. \u6700\u957f\u6709\u6548\u62ec\u53f7"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b '(' \u548c ')' \u7684\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u6700\u957f\u6709\u6548\uff08\u683c\u5f0f\u6b63\u786e\u4e14\u8fde\u7eed\uff09\u62ec\u53f7\u5b50\u4e32\u7684\u957f\u5ea6\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.06"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u52a8\u6001\u89c4\u5212\u5206\u6790\u62ec\u53f7\u51fa\u73b0\u7684\u72b6\u6001\u3002")),l.createElement(c.Z,{code:"function longestValidParentheses(s: string): number {\n  const n = s.length;\n  const dp = new Array(n + 1).fill(0);\n  let ans = 0;\n  for (let i = 1; i < n; i++) {\n    const ch = s[i];\n    if (ch === '(') dp[i + 1] = 0;\n    else if (s[i - 1] === '(') dp[i + 1] = dp[i - 1] + 2;\n    else if (s[i - dp[i] - 1] === '(') dp[i + 1] = dp[i] + 2 + dp[i - dp[i] - 1];\n    else dp[i + 1] = 0;\n    ans = Math.max(ans, dp[i + 1]);\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(a.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);