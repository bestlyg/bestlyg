(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[5275],{57200:function(e,n,l){"use strict";l.r(n);var t=l(96832),r=l(22131),i=l(89730),c=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"6236-\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee"},t.createElement(r.AnchorLink,{to:"#6236-\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"6236. \u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(r.Link,{to:"https://leetcode.cn/problems/maximum-number-of-non-overlapping-palindrome-substrings/"},"6236. \u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",t.createElement("br",null),"\u6807\u7b7e\uff1a",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u6700\u4f18\u65b9\u6848\u4e2d\u80fd\u9009\u62e9\u7684\u5b50\u5b57\u7b26\u4e32\u7684 \u6700\u5927 \u6570\u76ee\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.13"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a44ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.6MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adp[i]\u8868\u793a\u5b58\u5728 i \u4e2a\u5b57\u7b26\u7684\u65f6\u5019\u6700\u5927\u56de\u6587\u4e2a\u6570\u3002")),t.createElement(i.Z,{code:"class Solution {\npublic:\n    string s;\n    int n;\n    int maxPalindromes(string s, int k) {\n        this->s = s;\n        n = s.size();\n        vector<int> dp(n + 1, 0);\n        for (int i = 0; i < n; i++) {\n            check(dp, k, i, i);\n            check(dp, k, i, i + 1);\n        }\n        return dp[n];\n    }\n    void check(vector<int> &dp, int k, int l, int r) {\n        dp[l + 1] = max(dp[l + 1], dp[l]);\n        for (; l >= 0 && r < n && s[l] == s[r]; l--, r++) {\n            if (r - l + 1 >= k) dp[r + 1] = max(dp[r + 1], dp[l] + 1);\n        }\n    }\n};",lang:"cpp"}),t.createElement("h2",{id:"\u9898\u89e3-2---cpp"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.13"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a40ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.5MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u65b9\u4fbf\u83b7\u53d6 l \u548c r\u3002")),t.createElement(i.Z,{code:"class Solution {\npublic:\n    int maxPalindromes(string s, int k) {\n        int n = s.size();\n        vector<int> dp(n + 1, 0);\n        for (int i = 0; i < 2 * n - 1; i++) {\n            int l = i / 2, r = l + i % 2;\n            dp[l + 1] = max(dp[l + 1], dp[l]);\n            for (; l >= 0 && r < n && s[l] == s[r]; l--, r++) {\n                if (r - l + 1 >= k) dp[r + 1] = max(dp[r + 1], dp[l] + 1);\n            }\n        }\n        return dp[n];\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(r.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(c,{demos:l})}}}]);