(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[83667],{98460:function(t,n,e){"use strict";e.r(n);var a=e(96832),l=e(22131),s=e(89730),r=a.memo((t=>{t.demos;return a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h1",{id:"150-\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c"},a.createElement(l.AnchorLink,{to:"#150-\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c"),a.createElement("blockquote",null,a.createElement("p",null,"\u94fe\u63a5\uff1a",a.createElement(l.Link,{to:"https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/"},"150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c"),a.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",a.createElement("br",null),"\u6807\u7b7e\uff1a\u6808",a.createElement("br",null),"\u7b80\u4ecb\uff1a\u6839\u636e\u9006\u6ce2\u5170\u8868\u793a\u6cd5\uff0c\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u3002\u6709\u6548\u7684\u8fd0\u7b97\u7b26\u5305\u62ec +, -, *, / \u3002\u6bcf\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002")),a.createElement("h2",{id:"\u9898\u89e3-1---java"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---java","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - java"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.13"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a20ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a46.8MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4f7f\u7528\u6808\uff0c\u6570\u5b57\u538b\u6808\uff0c\u7b26\u53f7\u51fa\u6808\u3002")),a.createElement(s.Z,{code:'class Solution {\n    public int evalRPN(String[] tokens) {\n        Stack<String> stack = new Stack<String>();\n\t\tint a, b;\n\t\tfor (String s : tokens) {\n\t\t\tswitch (s) {\n\t\t\tcase "+":\n\t\t\t\ta = Integer.parseInt(stack.pop());\n\t\t\t\tb = Integer.parseInt(stack.pop());\n\t\t\t\tstack.push((a + b) + "");\n\t\t\t\tbreak;\n\t\t\tcase "-":\n\t\t\t\ta = Integer.parseInt(stack.pop());\n\t\t\t\tb = Integer.parseInt(stack.pop());\n\t\t\t\tstack.push((b - a) + "");\n\t\t\t\tbreak;\n\t\t\tcase "*":\n\t\t\t\ta = Integer.parseInt(stack.pop());\n\t\t\t\tb = Integer.parseInt(stack.pop());\n\t\t\t\tstack.push((a * b) + "");\n\t\t\t\tbreak;\n\t\t\tcase "/":\n\t\t\t\ta = Integer.parseInt(stack.pop());\n\t\t\t\tb = Integer.parseInt(stack.pop());\n\t\t\t\tstack.push((b / a) + "");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tstack.push(s);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Integer.parseInt(stack.pop());\n    }\n}',lang:"java"}),a.createElement("h2",{id:"\u9898\u89e3-2---typescript"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.3.20"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a724ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.2MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6808\u3002")),a.createElement(s.Z,{code:"function evalRPN(tokens: string[]): number {\n  const opMap: Record<string, (num1: number, num2: number) => number> = {\n    '+': (num1, num2) => num1 + num2,\n    '-': (num1, num2) => num1 - num2,\n    '*': (num1, num2) => num1 * num2,\n    '/': (num1, num2) => ~~(num1 / num2),\n  };\n  const stack: number[] = [];\n  for (const token of tokens) {\n    console.log(token, stack);\n    if (token === '+' || token === '-' || token === '*' || token === '/') {\n      const num2 = stack.pop()!;\n      const num1 = stack.pop()!;\n      stack.push(opMap[token](num1, num2));\n    } else {\n      stack.push(Number(token));\n    }\n  }\n  return stack[0];\n}",lang:"typescript"}),a.createElement("h2",{id:"\u9898\u89e3-3---c"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---c","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - c++"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.23"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a12ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a11.6mb"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6808\u5b58\u50a8\u3002")),a.createElement(s.Z,{code:'class Solution {\n   public:\n    int s2i(string str) {\n        int ans = 0, f = 1;\n        for (int i = 0; i < str.size(); i++) {\n            if (i == 0 && str[i] == \'-\') {\n                f = -1;\n                continue;\n            }\n            ans = ans * 10 + str[i] - \'0\';\n        }\n        return ans * f;\n    }\n    int evalRPN(vector<string>& tokens) {\n        stack<int> s;\n        for (auto& str : tokens) {\n            if (str == "+" || str == "-" || str == "*" || str == "/") {\n                int num1 = s.top();\n                s.pop();\n                int num2 = s.top();\n                s.pop();\n                int ans;\n                if (str == "+")\n                    ans = num2 + num1;\n                else if (str == "-")\n                    ans = num2 - num1;\n                else if (str == "*")\n                    ans = num2 * num1;\n                else\n                    ans = num2 / num1;\n                s.push(ans);\n            } else {\n                s.push(s2i(str));\n            }\n        }\n        return s.top();\n    }\n};',lang:"cpp"})))}));n["default"]=t=>{var n=a.useContext(l.context),e=n.demos;return a.useEffect((()=>{var n;null!==t&&void 0!==t&&null!==(n=t.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(t.location.hash.slice(1)))}),[]),a.createElement(r,{demos:e})}}}]);