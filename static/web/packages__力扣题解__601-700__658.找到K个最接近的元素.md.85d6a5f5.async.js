(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[28849],{29255:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),a=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"658-\u627e\u5230-k-\u4e2a\u6700\u63a5\u8fd1\u7684\u5143\u7d20"},l.createElement(r.AnchorLink,{to:"#658-\u627e\u5230-k-\u4e2a\u6700\u63a5\u8fd1\u7684\u5143\u7d20","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"658. \u627e\u5230 K \u4e2a\u6700\u63a5\u8fd1\u7684\u5143\u7d20"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode.cn/problems/find-k-closest-elements/"},"658. \u627e\u5230 K \u4e2a\u6700\u63a5\u8fd1\u7684\u5143\u7d20"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u53cc\u6307\u9488\u3001\u4e8c\u5206\u67e5\u627e\u3001\u6392\u5e8f\u3001\u5806",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a \u6392\u5e8f\u597d \u7684\u6570\u7ec4 arr \uff0c\u4e24\u4e2a\u6574\u6570 k \u548c x \uff0c\u4ece\u6570\u7ec4\u4e2d\u627e\u5230\u6700\u9760\u8fd1 x\uff08\u4e24\u6570\u4e4b\u5dee\u6700\u5c0f\uff09\u7684 k \u4e2a\u6570\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u5fc5\u987b\u8981\u662f\u6309\u5347\u5e8f\u6392\u597d\u7684\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---rust"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---rust","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - rust"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a16ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u53ea\u8981\u6570\u7684\u6570\u91cf\u76f8\u540c\u5c31\u53ef\u4ee5\u5339\u914d\u3002")),l.createElement(a.Z,{code:"use std::cmp::Ordering;\nuse std::collections::{BinaryHeap, VecDeque};\n#[derive(PartialEq, Eq, Debug)]\nstruct Item(i32, i32);\nimpl PartialOrd for Item {\n    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n        let ord = other.1.cmp(&self.1);\n        if ord == Ordering::Equal {\n            Some(other.0.cmp(&self.0))\n        } else {\n            Some(ord)\n        }\n    }\n}\nimpl Ord for Item {\n    fn cmp(&self, other: &Self) -> Ordering {\n        self.partial_cmp(other).unwrap()\n    }\n}\nimpl Solution {\n    pub fn find_closest_elements(arr: Vec<i32>, k: i32, x: i32) -> Vec<i32> {\n        let mut ans = VecDeque::<i32>::new();\n        let mut heap = BinaryHeap::<Item>::new();\n        for num in arr {\n            heap.push(Item(num, (num - x).abs()));\n        }\n        for _ in 0..k {\n            let num = heap.pop().unwrap().0;\n            if ans.len() == 0 || *ans.back().unwrap() <= num {\n                ans.push_back(num);\n            } else {\n                ans.push_front(num);\n            }\n        }\n        Vec::from(ans)\n    }\n}",lang:"rust"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);