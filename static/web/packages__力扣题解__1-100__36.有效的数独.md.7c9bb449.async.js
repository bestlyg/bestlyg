(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[61997],{44901:function(e,n,l){"use strict";l.r(n);var t=l(96832),o=l(22131),r=l(89730),c=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"36-\u6709\u6548\u7684\u6570\u72ec"},t.createElement(o.AnchorLink,{to:"#36-\u6709\u6548\u7684\u6570\u72ec","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"36. \u6709\u6548\u7684\u6570\u72ec"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(o.Link,{to:"https://leetcode-cn.com/problems/valid-sudoku/"},"36. \u6709\u6548\u7684\u6570\u72ec"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u77e9\u9635",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u5224\u65ad\u4e00\u4e2a 9x9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981 \u6839\u636e\u4ee5\u4e0b\u89c4\u5219 \uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002 \u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---javascript"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.09.17"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43.8MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9010\u884c\u904d\u5386\uff0cset \u50a8\u5b58\u3002")),t.createElement(r.Z,{code:"function isValidSudoku(board: string[][]): boolean {\n        const rows: Set<string>[] = new Array(9).fill(0).map(_ => new Set<string>());\n        const cols: Set<string>[] = new Array(9).fill(0).map(_ => new Set<string>());\n        const blocks: Set<string>[] = new Array(9).fill(0).map(_ => new Set<string>());\n        const getBolck = (row: number, col: number) => ~~(row / 3) * 3 + ~~(col / 3);\n        for (let row = 0; row < 9; row++) {\n          for (let col = 0; col < 9; col++) {\n            const val = board[row][col];\n            const block = getBolck(row, col);\n            if (val === '.') continue;\n            const rowSet = rows[row];\n            const colSet = cols[col];\n            const blockSet = blocks[block];\n            if (rowSet.has(val) || colSet.has(val) || blockSet.has(val)) return false;\n            rowSet.add(val);\n            colSet.add(val);\n            blockSet.add(val);\n          }\n        }\n        return true;\n      }",lang:"javascript"})))}));n["default"]=e=>{var n=t.useContext(o.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(c,{demos:l})}}}]);