(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[50880],{27727:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),m=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"594-\u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217"},l.createElement(r.AnchorLink,{to:"#594-\u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"594. \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/longest-harmonious-subsequence/"},"594. \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u73b0\u5728\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u8bf7\u4f60\u5728\u6240\u6709\u53ef\u80fd\u7684\u5b50\u5e8f\u5217\u4e2d\u627e\u5230\u6700\u957f\u7684\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a120ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.6MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u54c8\u5e0c\u5b58\u50a8\u3002")),l.createElement(m.Z,{code:"function findLHS(nums: number[]): number {\n  const map = new Map<number, number>();\n  for (const num of nums) map.set(num, (map.get(num) ?? 0) + 1);\n  const list = Array.from(map.entries()).sort(([num1], [num2]) => num1 - num2);\n  let ans = 0;\n  for (let i = 0, l = list.length; i < l - 1; i++) {\n    const [num1, cnt1] = list[i];\n    const [num2, cnt2] = list[i + 1];\n    if (num2 !== num1 + 1) continue;\n    ans = Math.max(ans, cnt1 + cnt2);\n  }\n  return ans;\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---c"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a52ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.6mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6392\u5e8f\u3002")),l.createElement(m.Z,{code:"int comp(int *num1, int *num2){\n    return *num1 - *num2;\n}\nint findLHS(int* nums, int numsSize){\n    qsort(nums, numsSize, sizeof(int), comp);\n    int ans = 0, left = 0, right = 0;\n    while(right < numsSize - 1){\n        while(right < numsSize - 1 && nums[right] == nums[left]) right++;\n        while(right < numsSize - 1 && nums[right] == nums[right + 1]) right++;\n        if(nums[left] == nums[right] - 1 && right - left + 1 > ans) ans = right - left + 1;\n        while(nums[left] != nums[right]) left++;\n    }\n    return ans;\n}",lang:"c"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);