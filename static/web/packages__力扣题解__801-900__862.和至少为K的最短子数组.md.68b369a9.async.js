(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[29943],{40319:function(e,n,t){"use strict";t.r(n);var l=t(96832),s=t(22131),u=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"862-\u548c\u81f3\u5c11\u4e3a-k-\u7684\u6700\u77ed\u5b50\u6570\u7ec4"},l.createElement(s.AnchorLink,{to:"#862-\u548c\u81f3\u5c11\u4e3a-k-\u7684\u6700\u77ed\u5b50\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"862. \u548c\u81f3\u5c11\u4e3a K \u7684\u6700\u77ed\u5b50\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(s.Link,{to:"https://leetcode-cn.com/problems/shortest-subarray-with-sum-at-least-k/"},"862. \u548c\u81f3\u5c11\u4e3a K \u7684\u6700\u77ed\u5b50\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u961f\u5217\u3001\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u524d\u7f00\u548c\u3001\u6ed1\u52a8\u7a97\u53e3\u3001\u5355\u8c03\u961f\u5217\u3001\u5806(\u4f18\u5148\u961f\u5217)",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de A \u7684\u6700\u77ed\u7684\u975e\u7a7a\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8be5\u5b50\u6570\u7ec4\u7684\u548c\u81f3\u5c11\u4e3a K \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a6080ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a50.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5355\u8c03\u9012\u589e\u961f\u5217\u3002")),l.createElement(u.Z,{code:"function shortestSubarray(nums: number[], k: number): number {\n  const n = nums.length;\n  const queue: number[] = [];\n  const sums = [0];\n  let sum = 0;\n  nums.forEach(num => sums.push((sum += num)));\n  let ans = Infinity;\n  for (let i = 0; i <= n; i++) {\n    const sum = sums[i];\n    while (queue.length && sums[queue[queue.length - 1]] > sum) queue.pop();\n    for (const prevIndex of queue) {\n      if (sum - sums[prevIndex] >= k) {\n        ans = Math.min(ans, i - prevIndex);\n      } else break;\n    }\n    queue.push(i);\n  }\n  return ans === Infinity ? -1 : ans;\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a2896ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a50.3mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4f18\u5316\u9898\u89e3 1\u3002")),l.createElement(u.Z,{code:"function shortestSubarray(nums: number[], k: number): number {\n  const n = nums.length;\n  const queue: number[] = [];\n  const sums = [0];\n  let sum = 0;\n  nums.forEach(num => sums.push((sum += num)));\n  let ans = Infinity;\n  for (let i = 0; i <= n; i++) {\n    const sum = sums[i];\n    let p = -1;\n    while (queue.length && sum - sums[queue[0]] >= k) p = queue.shift()!;\n    if (p !== -1) ans = Math.min(ans, i - p);\n    while (queue.length && sums[queue[queue.length - 1]] > sum) queue.pop();\n    queue.push(i);\n  }\n  return ans === Infinity ? -1 : ans;\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-3---cpp"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-3---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.10.26"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a204ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a102.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c+\u5355\u8c03\u9012\u589e\u961f\u5217\uff0c\u904d\u5386\u5230\u4e00\u4e2a\u503c\u65f6\uff0c\u53ef\u4ee5\u5feb\u901f\u77e5\u9053\u524d\u9762\u7684\u524d\u7f00\u548c\u3002")),l.createElement(u.Z,{code:"class Solution {\npublic:\n    int shortestSubarray(vector<int>& nums, int k) {\n        int n = nums.size(), ans = 0x7fffffff;\n        vector<long long> sums(1 + n, 0);\n        for (int i = 0; i < n; i++) sums[i + 1] = sums[i] + nums[i];\n        deque<int> q;\n        q.push_back(0);\n        for (int i = 0; i < n; i++) {\n            int idx = -1;\n            while (q.size() && sums[i + 1] - sums[q.front()] >= k) idx = q.front(), q.pop_front();\n            if (idx != -1) ans = min(ans, i + 1 - idx);\n            while (q.size() && sums[q.back()] > sums[i + 1]) q.pop_back();\n            q.push_back(i + 1);\n        }\n        return ans == 0x7fffffff ? -1 : ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(s.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);