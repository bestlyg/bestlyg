(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[95785],{98038:function(e,t,n){"use strict";n.r(t);var l=n(96832),r=n(22131),c=n(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"748-\u6700\u77ed\u8865\u5168\u8bcd"},l.createElement(r.AnchorLink,{to:"#748-\u6700\u77ed\u8865\u5168\u8bcd","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"748. \u6700\u77ed\u8865\u5168\u8bcd"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/shortest-completing-word/"},"748. \u6700\u77ed\u8865\u5168\u8bcd"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 licensePlate \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de words \u4e2d\u7684 \u6700\u77ed\u8865\u5168\u8bcd \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.10"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a88ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u54c8\u5e0c\u3002")),l.createElement(c.Z,{code:"function shortestCompletingWord(licensePlate: string, words: string[]): string {\n  const reg_lowchar = /[a-z]/;\n  const map: Record<string, number> = {};\n  for (const ch of licensePlate.toLowerCase()) {\n    if (reg_lowchar.test(ch)) map[ch] = (map[ch] ?? 0) + 1;\n  }\n  return words\n    .filter(word => {\n      const wmap = { ...map };\n      for (const ch of word) {\n        if (wmap[ch]) wmap[ch]--;\n      }\n      return Object.values(wmap).every(v => v <= 0);\n    })\n    .sort((a, b) => a.length - b.length)[0];\n}",lang:"typescript"})))}));t["default"]=e=>{var t=l.useContext(r.context),n=t.demos;return l.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:n})}}}]);