(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[61471],{44481:function(e,n,t){"use strict";t.r(n);var l=t(96832),m=t(22131),i=t(89730),u=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1818-\u7edd\u5bf9\u5dee\u503c\u548c"},l.createElement(m.AnchorLink,{to:"#1818-\u7edd\u5bf9\u5dee\u503c\u548c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1818. \u7edd\u5bf9\u5dee\u503c\u548c"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(m.Link,{to:"https://leetcode-cn.com/problems/minimum-absolute-sum-difference/"},"1818. \u7edd\u5bf9\u5dee\u503c\u548c"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6709\u5e8f\u96c6\u5408\u3001\u8d2a\u5fc3\u3001\u4e8c\u5206\u67e5\u627e",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e24\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u90fd\u662f n \u3002\u5728\u66ff\u6362\u6570\u7ec4 nums1 \u4e2d\u6700\u591a\u4e00\u4e2a\u5143\u7d20 \u4e4b\u540e \uff0c\u8fd4\u56de\u6700\u5c0f\u7edd\u5bf9\u5dee\u503c\u548c\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(m.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.14"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a224ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a55.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u67e5\u627e\u6700\u8fd1\u503c\u3002")),l.createElement(i.Z,{code:"function minAbsoluteSumDiff(nums1: number[], nums2: number[]): number {\n  const len = nums1.length;\n  const nums: number[] = new Array(len).fill(0).map((_, i) => Math.abs(nums1[i] - nums2[i]));\n  nums1.sort((a, b) => a - b);\n  const sum = nums.reduce((total, cur) => total + cur, 0);\n  let ans = sum;\n  for (let i = 0; i < len; i++) ans = Math.min(ans, sum - nums[i] + findMin(i));\n  return ans % (10 ** 9 + 7);\n  function findMin(index: number): number {\n    const num2 = nums2[index];\n    let left = 0;\n    let right = len - 1;\n    while (left < right) {\n      const mid = (left + right) >> 1;\n      const midNum = nums1[mid];\n      if (midNum < num2) left = mid + 1;\n      else if (midNum > num2) right = mid - 1;\n      else {\n        left = mid;\n        break;\n      }\n    }\n    return Math.min(\n      Math.abs(nums1[left] - num2),\n      left > 0 ? Math.abs(nums1[left - 1] - num2) : Infinity,\n      left < len - 1 ? Math.abs(nums1[left + 1] - num2) : Infinity\n    );\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(m.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&m.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(u,{demos:t})}}}]);