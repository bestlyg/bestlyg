(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[89906],{43556:function(e,n,l){"use strict";l.r(n);var t=l(96832),r=l(22131),o=l(89730),a=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"363-\u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7-k-\u7684\u6700\u5927\u6570\u503c\u548c"},t.createElement(r.AnchorLink,{to:"#363-\u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7-k-\u7684\u6700\u5927\u6570\u503c\u548c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"363. \u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7 K \u7684\u6700\u5927\u6570\u503c\u548c"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(r.Link,{to:"https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/"},"363. \u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7 K \u7684\u6700\u5927\u6570\u503c\u548c"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",t.createElement("br",null),"\u6807\u7b7e\uff1a\u4e8c\u5206\u67e5\u627e\u3001\u52a8\u6001\u89c4\u5212\u3001\u961f\u5217",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a m x n \u7684\u77e9\u9635 matrix \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u627e\u51fa\u5e76\u8fd4\u56de\u77e9\u9635\u5185\u90e8\u77e9\u5f62\u533a\u57df\u7684\u4e0d\u8d85\u8fc7 k \u7684\u6700\u5927\u6570\u503c\u548c\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---typescript"},t.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.04.22"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a408ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.7MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u66b4\u529b\u5faa\u73af\u56db\u6b21\u3002")),t.createElement(o.Z,{code:"function maxSumSubmatrix(matrix: number[][], k: number): number {\n  const rowLen = matrix.length;\n  const colLen = matrix[0].length;\n  const dp: number[][] = new Array(rowLen + 1).fill(0).map(_ => new Array(colLen + 1).fill(0));\n  let max = -Infinity;\n  for (let row = 0; row < rowLen; row++) {\n    for (let col = 0; col < colLen; col++) {\n      let num = matrix[row][col] + dp[row + 1][col] + dp[row][col + 1] - dp[row][col];\n      if (num === k) return k;\n      dp[row + 1][col + 1] = matrix[row][col] + dp[row + 1][col] + dp[row][col + 1] - dp[row][col];\n      for (let i = 0; i <= row; i++) {\n        for (let j = 0; j <= col; j++) {\n          const areaNum = num - dp[i][col + 1] - dp[row + 1][j] + dp[i][j];\n          if (areaNum === k) return k;\n          else if (areaNum < k) max = Math.max(max, areaNum);\n        }\n      }\n    }\n  }\n  return max;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=t.useContext(r.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(a,{demos:l})}}}]);