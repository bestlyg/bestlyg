(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[36291],{97524:function(e,n,t){"use strict";t.r(n);var i=t(96832),l=t(22131),s=t(89730),r=i.memo((e=>{e.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"636-\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4"},i.createElement(l.AnchorLink,{to:"#636-\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"636. \u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(l.Link,{to:"https://leetcode-cn.com/problems/exclusive-time-of-functions/"},"636. \u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",i.createElement("br",null),"\u6807\u7b7e\uff1a\u6808",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u51fa\u4e00\u4e2a\u975e\u62a2\u5360\u5355\u7ebf\u7a0b CPU \u7684 n \u4e2a\u51fd\u6570\u8fd0\u884c\u65e5\u5fd7\uff0c\u627e\u5230\u51fd\u6570\u7684\u72ec\u5360\u65f6\u95f4\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---typescript"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.3.20"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a116ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.8MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5229\u7528\u6808\u7ef4\u62a4\u51fd\u6570\u8fd0\u884c\u8fc7\u7a0b\u3002")),i.createElement(s.Z,{code:"function exclusiveTime(n: number, logs: string[]): number[] {\n  const ans = new Array(n).fill(0);\n  const stack: number[] = [];\n  for (let i = 0, l = logs.length, pre = 0; i < l; i++) {\n    const info = logs[i].split(':');\n    const id = Number(info[0]);\n    const tag = info[1];\n    const time = Number(info[2]);\n    if (tag === 'start') {\n      if (stack.length !== 0) ans[stack[stack.length - 1]] += time - pre;\n      pre = time;\n      stack.push(id);\n    } else {\n      ans[id] += time - pre + 1;\n      pre = time + 1;\n      stack.pop();\n    }\n  }\n  return ans;\n}",lang:"typescript"}),i.createElement("h2",{id:"\u9898\u89e3-2---cpp"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---cpp","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - cpp"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.07"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a12ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a13MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1astack\u3002")),i.createElement(s.Z,{code:"class Solution {\n  public:\n    typedef pair<int, int> node;\n    vector<int> exclusiveTime(int n, vector<string>& logs) {\n        vector<int> list(n, 0);\n        stack<node> s;\n        for (auto &item : logs) {\n            bool isStart;\n            int idx = 0, time = 0;\n            analysis(item, idx, isStart, time);\n            if (s.size()) {\n                if (isStart) {\n                    node top = s.top();\n                    list[top.first] += time - top.second;\n                    s.push(make_pair(idx, time));\n                } else {\n                    node top = s.top(); s.pop();\n                    list[top.first] += time - top.second + 1;\n                    if (s.size()) {\n                        top = s.top(); s.pop();\n                        top.second = time + 1;\n                        s.push(top);\n                    }\n                }\n            } else {\n                s.push(make_pair(idx, time));\n            }\n        }\n        return list;\n    }\n    void analysis(string &item, int &idx, bool &isStart, int &time) {\n        int i = 0;\n        for (; item[i] != ':'; i++) idx = idx * 10 + item[i] - '0';\n        i++;\n        string temp = \"\";\n        for (; item[i] != ':'; i++) temp += item[i];\n        isStart = temp == \"start\";\n        i++;\n        for (; i < item.size(); i++) time = time * 10 + item[i] - '0';\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=i.useContext(l.context),t=n.demos;return i.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),i.createElement(r,{demos:t})}}}]);