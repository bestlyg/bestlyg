(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[3233],{38879:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),i=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"809-\u60c5\u611f\u4e30\u5bcc\u7684\u6587\u5b57"},l.createElement(c.AnchorLink,{to:"#809-\u60c5\u611f\u4e30\u5bcc\u7684\u6587\u5b57","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"809. \u60c5\u611f\u4e30\u5bcc\u7684\u6587\u5b57"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode.cn/problems/expressive-words/"},"809. \u60c5\u611f\u4e30\u5bcc\u7684\u6587\u5b57"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8f93\u5165\u4e00\u7ec4\u67e5\u8be2\u5355\u8bcd\uff0c\u8f93\u51fa\u5176\u4e2d\u53ef\u6269\u5f20\u7684\u5355\u8bcd\u6570\u91cf\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a7.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u53cc\u6307\u9488\u904d\u5386\u3002")),l.createElement(i.Z,{code:"class Solution {\npublic:\n    typedef pair<int, char> Node;\n    int expressiveWords(string s, vector<string>& words) {\n        vector<Node> list;\n        for (int i = 0; i < s.size(); i++) {\n            char c = s[i];\n            int cnt = 1;\n            while (i + 1 < s.size() && s[i + 1] == c) i++, cnt++;\n            list.push_back(make_pair(cnt, c));\n        }\n        int ans = 0;\n        for (auto &s : words) if (check(list, s)) ans++;\n        return ans;\n    }\n    bool check(vector<Node> &list, string &s) {\n        int cur = 0, i = 0;\n        for (; i < s.size() && cur < list.size(); i++, cur++) {\n            Node &node = list[cur];\n            char c = s[i];\n            int cnt = 1;\n            while (i + 1 < s.size() && s[i + 1] == c) i++, cnt++;\n            if (node.second != c || \n                node.first < cnt ||\n                node.first == 2 && cnt == 1\n            ) return false;\n        }\n        return i == s.size() && cur == list.size();\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);