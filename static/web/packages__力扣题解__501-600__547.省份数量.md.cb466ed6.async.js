(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[63719],{20097:function(n,e,t){"use strict";t.r(e);var i=t(96832),l=t(22131),r=t(89730),a=i.memo((n=>{n.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"547-\u7701\u4efd\u6570\u91cf"},i.createElement(l.AnchorLink,{to:"#547-\u7701\u4efd\u6570\u91cf","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"547. \u7701\u4efd\u6570\u91cf"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(l.Link,{to:"https://leetcode-cn.com/problems/number-of-provinces/"},"547. \u7701\u4efd\u6570\u91cf"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",i.createElement("br",null),"\u6807\u7b7e\uff1a\u5e76\u67e5\u96c6\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u5728\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32 s \u4e2d\uff0c\u5305\u542b\u7531\u4e00\u4e9b\u8fde\u7eed\u7684\u76f8\u540c\u5b57\u7b26\u6240\u6784\u6210\u7684\u5206\u7ec4\u3002\u627e\u5230\u6bcf\u4e00\u4e2a \u8f83\u5927\u5206\u7ec4 \u7684\u533a\u95f4\uff0c\u6309\u8d77\u59cb\u4f4d\u7f6e\u4e0b\u6807\u9012\u589e\u987a\u5e8f\u6392\u5e8f\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u3002\u6709 n \u4e2a\u57ce\u5e02\uff0c\u5176\u4e2d\u4e00\u4e9b\u5f7c\u6b64\u76f8\u8fde\uff0c\u53e6\u4e00\u4e9b\u6ca1\u6709\u76f8\u8fde\u3002\u5982\u679c\u57ce\u5e02 a \u4e0e\u57ce\u5e02 b \u76f4\u63a5\u76f8\u8fde\uff0c\u4e14\u57ce\u5e02 b \u4e0e\u57ce\u5e02 c \u76f4\u63a5\u76f8\u8fde\uff0c\u90a3\u4e48\u57ce\u5e02 a \u4e0e\u57ce\u5e02 c \u95f4\u63a5\u76f8\u8fde\u3002\u8fd4\u56de\u77e9\u9635\u4e2d \u7701\u4efd \u7684\u6570\u91cf\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---typescript"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.1.7"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a92ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.1MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002")),i.createElement(r.Z,{code:"function findCircleNum(isConnected: number[][]): number {\n  const set = new Set<number>();\n  let ans = 0;\n  const len = isConnected.length;\n  const find = (index: number): void => {\n    for (let i = 0; i < len; i++) {\n      if (isConnected[i][index] === 1 && !set.has(i)) {\n        set.add(i);\n        find(i);\n      }\n    }\n  };\n  for (let i = 0; i < len; i++) {\n    if (!set.has(i)) {\n      ans++;\n      find(i);\n    }\n  }\n  return ans;\n}",lang:"typescript"}),i.createElement("h2",{id:"\u9898\u89e3-2---typescript"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.04.30"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a92ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.7mb"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),i.createElement(r.Z,{code:"class UnionFind {\n  elements: number[];\n  constructor(public size: number) {\n    this.elements = new Array(size).fill(0).map((_, i) => i);\n  }\n  same(v1: number, v2: number): boolean {\n    return this.find(v1) === this.find(v2);\n  }\n  find(v: number): number {\n    return v === this.elements[v] ? v : (this.elements[v] = this.find(this.elements[v]));\n  }\n  union(v1: number, v2: number): void {\n    const e1 = this.find(v1);\n    const e2 = this.find(v2);\n    if (e1 !== e2) {\n      this.elements[e1] = e2;\n      this.size--;\n    }\n  }\n}\n\nfunction findCircleNum(isConnected: number[][]): number {\n  const len = isConnected.length;\n  const uf = new UnionFind(len);\n  for (let i = 0; i < len; i++) {\n    const connect = isConnected[i];\n    for (let j = 0; j < len; j++) {\n      connect[j] === 1 && uf.union(i, j);\n    }\n  }\n  return uf.size;\n}",lang:"typescript"}),i.createElement("h2",{id:"\u9898\u89e3-3---javascript"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---javascript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - javascript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.04"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a36ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.9mb"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),i.createElement(r.Z,{code:"typedef struct unionfind\n{\n    int *father, len, size;\n} UnionFind;\nUnionFind *unionfind_create(int len)\n{\n    UnionFind *uf = (UnionFind *)malloc(sizeof(UnionFind));\n    uf->size = uf->len = len;\n    uf->father = (int *)malloc(sizeof(int) * len);\n    for (int i = 0; i < len; i++)\n        uf->father[i] = i;\n    return uf;\n}\nvoid unionfind_free(UnionFind *uf)\n{\n    free(uf->father);\n    free(uf);\n}\nint unionfind_find(UnionFind *uf, int data)\n{\n    return uf->father[data] = uf->father[data] == data ? data : unionfind_find(uf, uf->father[data]);\n}\nvoid unionfind_union(UnionFind *uf, int data1, int data2)\n{\n    int p1 = unionfind_find(uf, data1), p2 = unionfind_find(uf, data2);\n    if (p1 == p2) return ;\n    uf->size--;\n    uf->father[p1] = p2;\n}\nint findCircleNum(int** isConnected, int isConnectedSize, int* isConnectedColSize){\n    UnionFind *uf = unionfind_create(isConnectedSize);\n    for (int i = 0; i < isConnectedSize; i++) {\n        for (int j = 0; j < isConnectedSize; j++) {\n            if (isConnected[i][j]) unionfind_union(uf, i, j);\n        }\n    }\n    return uf->size;\n}",lang:"javascript"})))}));e["default"]=n=>{var e=i.useContext(l.context),t=e.demos;return i.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),i.createElement(a,{demos:t})}}}]);