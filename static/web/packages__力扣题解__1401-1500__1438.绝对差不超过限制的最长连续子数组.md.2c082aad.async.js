(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[65007],{89384:function(n,e,t){"use strict";t.r(e);var l=t(96832),r=t(22131),i=t(89730),m=l.memo((n=>{n.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4"},l.createElement(r.AnchorLink,{to:"#1438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1438. \u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/"},"1438. \u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6ed1\u52a8\u7a97\u53e3",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u548c\u4e00\u4e2a\u8868\u793a\u9650\u5236\u7684\u6574\u6570 limit\uff0c\u8bf7\u4f60\u8fd4\u56de\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8be5\u5b50\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u5fc5\u987b\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e limit \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.2.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a208ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a61.8MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6ed1\u52a8\u7a97\u53e3,\u8bb0\u5f55\u6700\u503c\u8fdb\u884c\u6bd4\u8f83\u3002")),l.createElement(i.Z,{code:"function longestSubarray(nums: number[], limit: number): number {\n  const zero = nums[0];\n  let l = 0;\n  let r = 0;\n  let max = zero;\n  let min = zero;\n  let win: Record<number, number> = { [zero]: 1 };\n  let ans = 1;\n  let sortArr = [zero];\n  const len = nums.length;\n  while (++r < len) {\n    const num = nums[r];\n    const value = win[num];\n    win[num] = 1 + (value ?? 0);\n    if (!value) {\n      if (num > max) sortArr.push((max = num));\n      else if (num < min) sortArr.unshift((min = num));\n      else {\n        for (let i = 0, l = sortArr.length; i < l; i++) {\n          if (sortArr[i] > num) {\n            sortArr.splice(i, 0, num);\n            break;\n          }\n        }\n      }\n      while (l < r && max - min > limit) {\n        const prevNum = nums[l++];\n        const count = win[prevNum];\n        win[prevNum] = count - 1;\n        if (count === 1) {\n          if (prevNum === max) max = sortArr[sortArr.length - 2];\n          else if (prevNum === min) min = sortArr[1];\n          for (let i = 0, l = sortArr.length; i < l; i++) {\n            if (sortArr[i] === prevNum) {\n              sortArr.splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n    }\n    ans = Math.max(ans, r - l + 1);\n  }\n  return ans;\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a2712ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a65.9mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u6bcf\u4e2a\u957f\u5ea6\uff0c\u5229\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u503c\u3002")),l.createElement(i.Z,{code:"function longestSubarray(nums: number[], limit: number): number {\n  const n = nums.length;\n  return search();\n  function search(l = 0, r = nums.length): number {\n    if (l === r) return l;\n    const mid = (l + r + 1) >> 1;\n    if (check(mid)) l = mid;\n    else r = mid - 1;\n    return search(l, r);\n  }\n  function check(len: number): boolean {\n    const qMax: number[] = [];\n    const qMin: number[] = [];\n    for (let i = 0; i < n; i++) {\n      const num = nums[i];\n      while (qMax.length && nums[qMax[qMax.length - 1]] < num) qMax.pop();\n      while (qMin.length && nums[qMin[qMin.length - 1]] > num) qMin.pop();\n      qMax.push(i);\n      qMin.push(i);\n      if (i + 1 < len) continue;\n      if (i - qMax[0] === len) qMax.shift();\n      if (i - qMin[0] === len) qMin.shift();\n      if (nums[qMax[0]] - nums[qMin[0]] <= limit) return true;\n    }\n    return false;\n  }\n}",lang:"typescript"})))}));e["default"]=n=>{var e=l.useContext(r.context),t=e.demos;return l.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),l.createElement(m,{demos:t})}}}]);