(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[70316],{63621:function(n,e,t){"use strict";t.r(e);var l=t(96832),r=t(22131),u=t(89730),m=l.memo((n=>{n.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"179-\u6700\u5927\u6570"},l.createElement(r.AnchorLink,{to:"#179-\u6700\u5927\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"179. \u6700\u5927\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/largest-number/"},"179. \u6700\u5927\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---javascript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.4.22"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a116ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a36.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c\u5148\u5224\u65ad\u6700\u5927\u4f4d\uff0c\u4f4d\u6570\u4e0d\u76f8\u540c\u53c8\u4e00\u6b21\u5224\u65ad\u3002")),l.createElement(u.Z,{code:"/**\n * @param {number[]} nums\n * @return {string}\n */\nvar largestNumber = function (nums) {\n  let spliltNums = [];\n  for (const num of nums) {\n    spliltNums.push(numSpilt(num));\n  }\n  spliltNums = spliltNums.sort(sortFn);\n  return arrJoin(spliltNums);\n};\nfunction numSpilt(num) {\n  if (num === 0) {\n    return [0];\n  }\n  const splitArr = [];\n  while (num !== 0) {\n    splitArr.push(num % 10);\n    num = Math.floor(num / 10);\n  }\n  return splitArr.reverse();\n}\nfunction arrJoin(arr) {\n  let res = arr.map(value => value.join('')).join('');\n  while (res[0] === '0' && res.length !== 1) {\n    res = res.substr(1);\n  }\n  return res;\n}\nfunction sortFn(num1, num2) {\n  const len1 = num1.length;\n  const len2 = num2.length;\n  let minLen = Math.min(len1, len2);\n  for (let i = 0; i < minLen; i++) {\n    if (num2[i] !== num1[i]) {\n      return num2[i] - num1[i];\n    }\n  }\n  if (len1 === len2) return 0;\n  if (minLen === len1) {\n    const lNum = num2[minLen];\n    for (let i = 0; i < minLen; i++) {\n      const comp = num2[i];\n      if (lNum !== comp) return lNum - comp;\n    }\n    const llNum = num2[minLen + 1];\n    if (num2[minLen + 1] !== lNum) {\n      return llNum - lNum;\n    }\n    return -1;\n  } else {\n    const lNum = num1[minLen];\n    for (let i = 0; i < minLen; i++) {\n      const comp = num1[i];\n      if (lNum !== comp) return comp - lNum;\n    }\n    const llNum = num1[minLen + 1];\n    if (num1[minLen + 1] !== lNum) {\n      return lNum - llNum;\n    }\n    return 1;\n  }\n}",lang:"javascript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.04.12"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5408\u5e76\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002")),l.createElement(u.Z,{code:"function largestNumber(nums: number[]): string {\n  const getCount = (num: number): number => {\n    if (num === 0) return 1;\n    let c = 0;\n    while (num) {\n      num = ~~(num / 10);\n      c++;\n    }\n    return c;\n  };\n  nums.sort((num1, num2) => {\n    const count1 = getCount(num1);\n    const count2 = getCount(num2);\n    const left = num1 * 10 ** count2 + num2;\n    const right = num2 * 10 ** count1 + num1;\n    return right - left;\n  });\n  return nums[0] === 0 ? '0' : nums.join('');\n}",lang:"typescript"})))}));e["default"]=n=>{var e=l.useContext(r.context),t=e.demos;return l.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),l.createElement(m,{demos:t})}}}]);