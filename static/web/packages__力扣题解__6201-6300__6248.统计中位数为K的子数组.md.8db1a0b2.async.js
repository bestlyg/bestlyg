(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[41167],{59171:function(e,n,t){"use strict";t.r(n);var i=t(96832),l=t(22131),m=t(89730),a=i.memo((e=>{e.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"6248-\u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a-k-\u7684\u5b50\u6570\u7ec4"},i.createElement(l.AnchorLink,{to:"#6248-\u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a-k-\u7684\u5b50\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"6248. \u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a K \u7684\u5b50\u6570\u7ec4"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(l.Link,{to:"https://leetcode.cn/problems/count-subarrays-with-median-k"},"6248. \u7edf\u8ba1\u4e2d\u4f4d\u6570\u4e3a K \u7684\u5b50\u6570\u7ec4"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",i.createElement("br",null),"\u6807\u7b7e\uff1a",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 nums \uff0c\u8be5\u6570\u7ec4\u7531\u4ece 1 \u5230 n \u7684 \u4e0d\u540c \u6574\u6570\u7ec4\u6210\u3002\u53e6\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 k \u3002\u7edf\u8ba1\u5e76\u8fd4\u56de num \u4e2d\u7684 \u4e2d\u4f4d\u6570 \u7b49\u4e8e k \u7684\u975e\u7a7a\u5b50\u6570\u7ec4\u7684\u6570\u76ee\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---cpp"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.27"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a76ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a51.4MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u56e0\u4e3a\u662f\u4e2d\u4f4d\u6570\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u627e\u5230\u552f\u4e00\u7684k\uff0c\u5411\u5de6\u904d\u5386\u8bb0\u5f55\u60c5\u51b5\u5b58\u50a8\uff0c\u518d\u5411\u53f3\u904d\u5386\u7edf\u8ba1\u3002")),i.createElement(m.Z,{code:'#define X first\n#define Y second\n#define lb(x) ((x) & (-x))\n#define mem(a,b) memset(a,b,sizeof(a))\n#define debug freopen("r.txt","r",stdin)\n#define pi pair<int,int>\nusing namespace std;\ntypedef long long ll;\n\nclass Solution {\npublic:\n    int countSubarrays(vector<int>& nums, int k) {\n        int ans = 1, idx = findK(nums, k), n = nums.size();\n        unordered_map<int, int> m;\n        pi item = make_pair(0, 0);\n        for (int i = idx - 1; i >= 0; i--) {\n            if (nums[i] > k) item.Y += 1;\n            else item.X += 1;\n            if (item.Y - item.X == 0 || item.Y - item.X == 1) ans++;\n            m[item.Y - item.X]++;\n        }\n        item = make_pair(0, 0);\n        for (int j = idx + 1; j < n; j++) {\n          if (nums[j] > k) item.Y += 1;\n          else item.X += 1;\n          if (item.Y - item.X == 0) ans += 1 + m[0] + m[1];\n          else if (item.Y - item.X == 1) ans += 1 + m[0] + m[-1];\n          else ans += m[item.X - item.Y] + m[item.X - item.Y + 1];\n        }\n        return ans;\n    }\n    int findK(vector<int>& nums, int k) {\n      for (int i = 0; i < nums.size(); i++) if (nums[i] == k) return i;\n      return -1;\n    }\n};',lang:"cpp"})))}));n["default"]=e=>{var n=i.useContext(l.context),t=n.demos;return i.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),i.createElement(a,{demos:t})}}}]);