(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[63967],{53819:function(n,e,i){"use strict";i.r(e);var t=i(96832),l=i(22131),r=i(89730),a=t.memo((n=>{n.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"827-\u6700\u5927\u4eba\u5de5\u5c9b"},t.createElement(l.AnchorLink,{to:"#827-\u6700\u5927\u4eba\u5de5\u5c9b","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"827. \u6700\u5927\u4eba\u5de5\u5c9b"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(l.Link,{to:"https://leetcode.cn/problems/making-a-large-island/"},"827. \u6700\u5927\u4eba\u5de5\u5c9b"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6\u3001\u6570\u7ec4\u3001\u77e9\u9635",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3a n x n \u4e8c\u8fdb\u5236\u77e9\u9635 grid \u3002\u6700\u591a \u53ea\u80fd\u5c06\u4e00\u683c 0 \u53d8\u6210 1 \u3002\u8fd4\u56de\u6267\u884c\u6b64\u64cd\u4f5c\u540e\uff0cgrid \u4e2d\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u662f\u591a\u5c11\uff1f\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.09.18"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a620ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a167.5MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1auf \u8bb0\u5f55\u6240\u6709\u5c9b\uff0c\u5bf9\u6bcf\u4e2a 0 \u4f4d\u7f6e\u8fdb\u884c\u5c1d\u8bd5\u5408\u5e76\u3002")),t.createElement(r.Z,{code:"class UnionFind{\npublic:\n    int n;\n    vector<int> list;\n    UnionFind(int n){\n        this->n = n;\n        list = vector<int>(n);\n        for (int i = 0; i < n; i++) list[i] = i;\n    }\n    int find(int e) {\n        if (list[e] == e) return e;\n        return list[e] = find(list[e]);\n    }\n    void uni(int e1, int e2) {\n        int p1 = find(e1), p2 = find(e2);\n        if (p1 != p2) list[p1] = p2;\n    }\n};\nint dirs[4][2] = {\n    {0, 1}, {0, -1},\n    {-1, 0}, {1, 0}\n};\ntypedef pair<int, int> node;\nclass Solution {\npublic:\n    int n;\n    int largestIsland(vector<vector<int>>& grid) {\n        n = grid.size();\n        vector<node> list0;\n        UnionFind uf(n * n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                int idx = toIdx(i, j);\n                if (grid[i][j] == 0) {\n                    uf.list[idx] = -1;\n                    list0.push_back(make_pair(i, j));\n                } else {\n                    for (int k = 0; k < 4; k++) {\n                        int x = i + dirs[k][0], y = j + dirs[k][1];\n                        if (x < 0 || x == n || y < 0 || y == n || grid[x][y] == 0) continue;\n                        uf.uni(idx, toIdx(x, y));\n                    }\n                }\n            }\n        }\n        unordered_map<int, int> m;\n        int ans = 0;\n        for (int i = 0; i < uf.n; i++) if (uf.list[i] != -1) ans = max(ans, ++m[uf.find(i)]);\n        for (auto &item : list0) {\n            unordered_set<int> s;\n            for (int i = 0; i < 4; i++) {\n                int x = item.first + dirs[i][0], y = item.second + dirs[i][1];\n                if (x < 0 || x == n || y < 0 || y == n || grid[x][y] == 0) continue;\n                s.insert(uf.find(toIdx(x, y)));\n            }\n            int sum = 1;\n            for (auto &p : s) sum += m[p];\n            ans = max(ans, sum);\n        }\n        return ans;\n    }\n    int toIdx(int x, int y) {\n        return x * n + y;\n    }\n};",lang:"cpp"})))}));e["default"]=n=>{var e=t.useContext(l.context),i=e.demos;return t.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),t.createElement(a,{demos:i})}}}]);