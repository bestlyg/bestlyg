(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[97006],{27135:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),a=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"149-\u76f4\u7ebf\u4e0a\u6700\u591a\u7684\u70b9\u6570"},l.createElement(c.AnchorLink,{to:"#149-\u76f4\u7ebf\u4e0a\u6700\u591a\u7684\u70b9\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"149. \u76f4\u7ebf\u4e0a\u6700\u591a\u7684\u70b9\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode-cn.com/problems/max-points-on-a-line/"},"149. \u76f4\u7ebf\u4e0a\u6700\u591a\u7684\u70b9\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u51e0\u4f55\u3001\u54c8\u5e0c\u8868\u3001\u6570\u5b66",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 points \uff0c\u5176\u4e2d points[i] = [xi, yi] \u8868\u793a X-Y \u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u6c42\u6700\u591a\u6709\u591a\u5c11\u4e2a\u70b9\u5728\u540c\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.06.24"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a152ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a49.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u50a8\u5b58\u4e0b\u6807\u8fdb\u884c\u5224\u65ad\u6570\u91cf\u3002")),l.createElement(a.Z,{code:"function maxPoints(points: number[][]): number {\n  const len = points.length;\n  if (len === 1) return 1;\n  const cacheKB: Record<string, Set<number>> = {};\n  const cacheX: Record<string, Set<number>> = {};\n  for (let i1 = 0; i1 < len; i1++) {\n    const [x1, y1] = points[i1];\n    for (let i2 = i1 + 1; i2 < len; i2++) {\n      const [x2, y2] = points[i2];\n      if (x1 === x2) {\n        let set = cacheX[x1];\n        if (!set) set = cacheX[x1] = new Set();\n        set.add(i1);\n        set.add(i2);\n      } else {\n        const k = (y1 - y2) / (x1 - x2);\n        const b = y1 - k * x1;\n        const str = `k=${k},b=${b}`;\n        let set = cacheKB[str];\n        if (!set) set = cacheKB[str] = new Set();\n        set.add(i1);\n        set.add(i2);\n      }\n    }\n  }\n  return Math.max(\n    ...Object.values(cacheKB).map(v => v.size),\n    ...Object.values(cacheX).map(v => v.size)\n  );\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);