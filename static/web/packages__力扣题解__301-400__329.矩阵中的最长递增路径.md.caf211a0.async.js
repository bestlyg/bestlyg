(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[67208],{95781:function(n,e,t){"use strict";t.r(e);var r=t(96832),a=t(22131),l=t(89730),o=r.memo((n=>{n.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"329-\u77e9\u9635\u4e2d\u7684\u6700\u957f\u9012\u589e\u8def\u5f84"},r.createElement(a.AnchorLink,{to:"#329-\u77e9\u9635\u4e2d\u7684\u6700\u957f\u9012\u589e\u8def\u5f84","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"329. \u77e9\u9635\u4e2d\u7684\u6700\u957f\u9012\u589e\u8def\u5f84"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(a.Link,{to:"https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/"},"329. \u77e9\u9635\u4e2d\u7684\u6700\u957f\u9012\u589e\u8def\u5f84"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u62d3\u6251\u6392\u5e8f\u3001\u8bb0\u5fc6\u5316",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u77e9\u9635\uff0c\u627e\u51fa\u6700\u957f\u9012\u589e\u8def\u5f84\u7684\u957f\u5ea6\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.7.26"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a232ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a47.1MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8bb0\u5fc6\u5316\u904d\u5386\u3002")),r.createElement(l.Z,{code:"function longestIncreasingPath(matrix: number[][]): number {\n  const rowLen = matrix.length;\n  if (rowLen === 0) return 0;\n  const colLen = matrix[0].length;\n  const cache = new Map<string, number>();\n  const format = (row: number, col: number) => `${row}:${col}`;\n  let maxNum = 0;\n  const setMax = (num: number) => (maxNum = Math.max(maxNum, num));\n  for (let i = 0; i < rowLen; i++) for (let j = 0; j < colLen; j++) setMax(each(i, j));\n  return maxNum;\n  function each(row: number, col: number, set = new Set<string>()): number {\n    const num = matrix[row][col];\n    const name = format(row, col);\n    if (cache.has(name)) return cache.get(name)!;\n    set.add(name);\n    let max = 1;\n    const setMax = (num: number) => (max = Math.max(max, num));\n    if (row !== rowLen - 1 && matrix[row + 1][col] > num && !set.has(format(row + 1, col))) {\n      setMax(each(row + 1, col, set) + 1);\n    }\n    if (row !== 0 && matrix[row - 1][col] > num && !set.has(format(row - 1, col))) {\n      max = setMax(each(row - 1, col, set) + 1);\n    }\n    if (col !== 0 && matrix[row][col - 1] > num && !set.has(format(row, col - 1))) {\n      setMax(each(row, col - 1, set) + 1);\n    }\n    if (col !== colLen - 1 && matrix[row][col + 1] > num && !set.has(format(row, col + 1))) {\n      setMax(each(row, col + 1, set) + 1);\n    }\n    set.delete(name);\n    cache.set(name, max);\n    return max;\n  }\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-2---c"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c++"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.30"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a32ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a14.3MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8bb0\u5fc6\u5316 dfs\u3002")),r.createElement(l.Z,{code:"class Solution {\n   public:\n    int dirs[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n    int dfs(int mmap[][200], vector<vector<int>>& matrix, int n, int m, int row,\n            int col) {\n        if (mmap[row][col]) return mmap[row][col];\n        int num = matrix[row][col], ans = 1;\n        for (int i = 0; i < 4; i++) {\n            int nrow = row + dirs[i][0];\n            int ncol = col + dirs[i][1];\n            if (nrow < 0 || ncol < 0 || nrow >= n || ncol >= m ||\n                matrix[nrow][ncol] <= num)\n                continue;\n            ans = max(ans, dfs(mmap, matrix, n, m, nrow, ncol) + 1);\n        }\n        return mmap[row][col] = ans;\n    }\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        int n = matrix.size(), m = matrix[0].size(), ans = 0, mmap[n][200];\n        memset(mmap, 0, sizeof(int) * n * 200);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                int tag = 1, num = matrix[i][j];\n                for (int k = 0; k < 4; k++) {\n                    int nrow = i + dirs[k][0];\n                    int ncol = j + dirs[k][1];\n                    if (nrow < 0 || ncol < 0 || nrow >= n || ncol >= m)\n                        continue;\n                    if (matrix[nrow][ncol] < num) {\n                        tag = 0;\n                        break;\n                    }\n                }\n                if (tag) ans = max(ans, dfs(mmap, matrix, n, m, i, j));\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));e["default"]=n=>{var e=r.useContext(a.context),t=e.demos;return r.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);