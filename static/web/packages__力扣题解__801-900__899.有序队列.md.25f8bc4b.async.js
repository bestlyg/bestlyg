(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[53905],{26548:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"899-\u6709\u5e8f\u961f\u5217"},l.createElement(r.AnchorLink,{to:"#899-\u6709\u5e8f\u961f\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"899. \u6709\u5e8f\u961f\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode.cn/problems/orderly-queue/"},"899. \u6709\u5e8f\u961f\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u5b66\u3001\u5b57\u7b26\u4e32\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u6574\u6570 k \u3002\u4f60\u53ef\u4ee5\u4ece s \u7684\u524d k \u4e2a\u5b57\u6bcd\u4e2d\u9009\u62e9\u4e00\u4e2a\uff0c\u5e76\u628a\u5b83\u52a0\u5230\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---rust"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---rust","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - rust"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.03"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5982\u679c k \u5927\u4e8e 1\uff0c\u8bf4\u660e\u53ef\u4ee5\u4efb\u610f\u8c03\u6362\u987a\u5e8f\uff0c\u5982\u679c k \u7b49\u4e8e 1 \u8bf4\u660e\u53ea\u80fd\u628a\u5934\u90e8\u653e\u5165\u5c3e\u90e8\u3002")),l.createElement(c.Z,{code:"use std::cmp::Ordering;\nuse std::collections::VecDeque;\nimpl Solution {\n    pub fn orderly_queue(s: String, k: i32) -> String {\n        if k == 1 {\n            let mut s = s.chars().collect::<VecDeque<char>>();\n            let mut ans = s.clone();\n            let mut temp = s.clone();\n            for i in 0..s.len() {\n                temp.pop_front();\n                temp.push_back(s[i]);\n                if ans.cmp(&temp) == Ordering::Greater {\n                    ans = temp.clone();\n                }\n            }\n            ans.into_iter().collect()\n        } else {\n            let mut s = s.chars().collect::<Vec<char>>();\n            s.sort();\n            s.into_iter().collect()\n        }\n    }\n}",lang:"rust"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);