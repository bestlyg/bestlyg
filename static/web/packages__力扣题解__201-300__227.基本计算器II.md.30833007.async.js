(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[55731],{79077:function(n,e,t){"use strict";t.r(e);var c=t(96832),l=t(22131),s=t(89730),a=c.memo((n=>{n.demos;return c.createElement(c.Fragment,null,c.createElement("div",{className:"markdown"},c.createElement("h1",{id:"227-\u57fa\u672c\u8ba1\u7b97\u5668-ii"},c.createElement(l.AnchorLink,{to:"#227-\u57fa\u672c\u8ba1\u7b97\u5668-ii","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"227. \u57fa\u672c\u8ba1\u7b97\u5668 II"),c.createElement("blockquote",null,c.createElement("p",null,"\u94fe\u63a5\uff1a",c.createElement(l.Link,{to:"https://leetcode-cn.com/problems/basic-calculator-ii/"},"227. \u57fa\u672c\u8ba1\u7b97\u5668 II"),c.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",c.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u5b57\u7b26\u4e32",c.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f s \uff0c\u8bf7\u4f60\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u8ba1\u7b97\u5668\u6765\u8ba1\u7b97\u5e76\u8fd4\u56de\u5b83\u7684\u503c\u3002")),c.createElement("h2",{id:"\u9898\u89e3-1---typescript"},c.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),c.createElement("ul",null,c.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.3.11"),c.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a148ms"),c.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a50.6MB"),c.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),c.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5148\u4e58\u9664\u540e\u52a0\u51cf\u3002")),c.createElement(s.Z,{code:"const numReg = /\\-?\\d+/;\nconst opMap: Record<string, (num1: number, num2: number) => number> = {\n  '+': (num1, num2) => num1 + num2,\n  '-': (num1, num2) => num1 - num2,\n  '*': (num1, num2) => num1 * num2,\n  '/': (num1, num2) => ~~(num1 / num2),\n};\nfunction calculate(s: string): number {\n  s = s.replace(/ /g, '');\n  const len = s.length;\n  const stack: string[] = [];\n  const peek = () => stack[stack.length - 1];\n  // \u53bb\u4e58\u9664\n  for (let i = 0; i < len; i++) {\n    let c = s[i];\n    if (c === '*' || c === '/' || c === '+') {\n      stack.push(c);\n    } else if (c === '-') {\n      if (stack.length === 0) stack.push('0');\n      stack.push(c);\n    } else {\n      while (i < len - 1 && numReg.test(s[i + 1])) {\n        c += s[i + 1];\n        i++;\n      }\n      const top = peek();\n      if (stack.length === 0) {\n        stack.push(c);\n      } else if (top === '*' || top === '/') {\n        const op = stack.pop()!;\n        const num1 = +stack.pop()!;\n        const num2 = +c;\n        stack.push(opMap[op](num1, num2) + '');\n      } else if (top === '-') {\n        stack[stack.length - 1] = '+';\n        stack.push(c.startsWith('-') ? c.substr(1) : '-' + c);\n      } else {\n        stack.push(c);\n      }\n    }\n  }\n  // \u53bb\u52a0\u51cf\n  const newStack: string[] = [];\n  for (const c of stack) {\n    if (numReg.test(c)) {\n      if (newStack[newStack.length - 1] === '+') {\n        const op = newStack.pop()!;\n        const num1 = +newStack.pop()!;\n        const num2 = +c;\n        newStack.push(opMap[op](num1, num2) + '');\n      } else {\n        newStack.push(c);\n      }\n    } else {\n      newStack.push(c);\n    }\n  }\n  return +newStack[0];\n}",lang:"typescript"})))}));e["default"]=n=>{var e=c.useContext(l.context),t=e.demos;return c.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),c.createElement(a,{demos:t})}}}]);