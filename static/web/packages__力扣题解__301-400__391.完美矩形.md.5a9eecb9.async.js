(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[91569],{61965:function(e,n,t){"use strict";t.r(n);var r=t(96832),a=t(22131),l=t(89730),c=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"391-\u5b8c\u7f8e\u77e9\u5f62"},r.createElement(a.AnchorLink,{to:"#391-\u5b8c\u7f8e\u77e9\u5f62","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"391. \u5b8c\u7f8e\u77e9\u5f62"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(a.Link,{to:"https://leetcode-cn.com/problems/perfect-rectangle/"},"391. \u5b8c\u7f8e\u77e9\u5f62"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u626b\u63cf\u7ebf",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u5982\u679c\u6240\u6709\u77e9\u5f62\u4e00\u8d77\u7cbe\u786e\u8986\u76d6\u4e86\u67d0\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u5219\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.16"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a272ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a62.8MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8ba1\u6570\u5224\u65ad\u9762\u79ef\u548c\u9876\u70b9\u91cd\u5408\u6b21\u6570\u3002")),r.createElement(l.Z,{code:"function isRectangleCover(rectangles: number[][]): boolean {\n  /**\n           \u5b8c\u7f8e\u77e9\u5f62\u8981\u6ee1\u8db3:\n           1. \u6700\u5de6\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0a\u3001\u53f3\u4e0b\u56db\u4e2a\u9876\u70b9\u53ea\u51fa\u73b01\u6b21;\n           2. \u91cd\u5408\u9876\u70b9\u91cd\u5408\u6b21\u6570\u5fc5\u987b\u4e3a2\u30014\uff0c\u4e0d\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\n           3. \u5927\u77e9\u5f62\u9762\u79ef\u7b49\u4e8e\u5c0f\u77e9\u5f62\u9762\u79ef\u4e4b\u548c\u3002\n           */\n  type Data = { cnt: number; point: number[] };\n  const set = new Set<string>();\n  const map: Record<string, Data> = {};\n  const format = (x: number, y: number) => `${x}:${y}`;\n  const map_add = (x: number, y: number) => {\n    const formatStr = format(x, y);\n    let data = map[formatStr];\n    if (!data) map[formatStr] = data = { cnt: 0, point: [x, y] };\n    data.cnt++;\n  };\n  let sum = 0;\n  const vertex: number[] = [];\n  const is_vertex = (x: number, y: number) =>\n    (x === vertex[0] && y === vertex[1]) ||\n    (x === vertex[2] && y === vertex[3]) ||\n    (x === vertex[0] && y === vertex[3]) ||\n    (x === vertex[2] && y === vertex[1]);\n  for (const [x, y, a, b] of rectangles) {\n    const formatStr = format(x, y) + ':' + format(a, b);\n    if (set.has(formatStr)) return false;\n    set.add(formatStr);\n    if (vertex[0] === undefined || vertex[0] > x || vertex[1] > y) {\n      vertex[0] = x;\n      vertex[1] = y;\n    }\n    if (vertex[2] === undefined || vertex[2] < a || vertex[3] < b) {\n      vertex[2] = a;\n      vertex[3] = b;\n    }\n    sum += (a - x) * (b - y);\n    map_add(x, y);\n    map_add(a, b);\n    map_add(x, b);\n    map_add(a, y);\n  }\n  if ((vertex[2] - vertex[0]) * (vertex[3] - vertex[1]) !== sum) return false;\n  for (const {\n    cnt,\n    point: [x, y],\n  } of Object.values(map)) {\n    if ((cnt === 1 && !is_vertex(x, y)) || (cnt !== 1 && cnt !== 2 && cnt !== 4)) {\n      return false;\n    }\n  }\n  return true;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(a.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);