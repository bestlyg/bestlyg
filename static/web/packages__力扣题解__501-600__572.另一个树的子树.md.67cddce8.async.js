(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[27653],{15081:function(e,n,r){"use strict";r.r(n);var t=r(96832),l=r(22131),a=r(89730),o=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"572-\u53e6\u4e00\u4e2a\u6811\u7684\u5b50\u6811"},t.createElement(l.AnchorLink,{to:"#572-\u53e6\u4e00\u4e2a\u6811\u7684\u5b50\u6811","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"572. \u53e6\u4e00\u4e2a\u6811\u7684\u5b50\u6811"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(l.Link,{to:"https://leetcode-cn.com/problems/subtree-of-another-tree/"},"572. \u53e6\u4e00\u4e2a\u6811\u7684\u5b50\u6811"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6811",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u975e\u7a7a\u4e8c\u53c9\u6811 s \u548c t\uff0c\u68c0\u9a8c \xa0s \u4e2d\u662f\u5426\u5305\u542b\u548c t \u5177\u6709\u76f8\u540c\u7ed3\u6784\u548c\u8282\u70b9\u503c\u7684\u5b50\u6811\u3002s \u7684\u4e00\u4e2a\u5b50\u6811\u5305\u62ec s \u7684\u4e00\u4e2a\u8282\u70b9\u548c\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u5b59\u3002s \u4e5f\u53ef\u4ee5\u770b\u505a\u5b83\u81ea\u8eab\u7684\u4e00\u68f5\u5b50\u6811\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---javascript"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.5.7"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.5MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5148\u904d\u5386\u83b7\u53d6\u6240\u6709\u503c\u76f8\u7b49\u7684\u8282\u70b9\uff0c\u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\u5224\u65ad\u662f\u5426\u6bcf\u9879\u503c\u90fd\u76f8\u7b49")),t.createElement(a.Z,{code:"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} s\n * @param {TreeNode} t\n * @return {boolean}\n */\nvar isSubtree = function (s, t) {\n  function searchNode(val) {\n    const queue = inorder(s);\n    const resArr = [];\n    for (const node of queue) {\n      if (node.val === val) resArr.push(node);\n    }\n    return resArr;\n  }\n  function inorder(node) {\n    const queue = [];\n    function _inorder(node) {\n      if (node.left !== null) _inorder(node.left);\n      queue.push(node);\n      if (node.right !== null) _inorder(node.right);\n    }\n    _inorder(node);\n    return queue;\n  }\n  function sameArrVal(arr1, arr2) {\n    const len1 = arr1.length;\n    if (len1 !== arr2.length) return false;\n    for (let i = 0; i < len1; i++) if (arr1[i].val !== arr2[i].val) return false;\n    return true;\n  }\n  const sameNodeArr = searchNode(t.val);\n  if (sameNodeArr.length === 0) return false;\n  const tArr = inorder(t);\n  for (const node of sameNodeArr) {\n    if (sameArrVal(inorder(node), tArr)) return true;\n  }\n  return false;\n};",lang:"javascript"})))}));n["default"]=e=>{var n=t.useContext(l.context),r=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(o,{demos:r})}}}]);