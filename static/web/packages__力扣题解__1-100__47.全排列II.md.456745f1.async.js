(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[48346],{8655:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"47-\u5168\u6392\u5217-ii"},l.createElement(r.AnchorLink,{to:"#47-\u5168\u6392\u5217-ii","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"47. \u5168\u6392\u5217 II"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/permutations-ii/"},"47. \u5168\u6392\u5217 II"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u56de\u6eaf\u7b97\u6cd5",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u6240\u6709\u4e0d\u91cd\u590d\u7684\u5168\u6392\u5217\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.18"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a588ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u540e\u5229\u7528 set \u53bb\u91cd\u3002")),l.createElement(i.Z,{code:"function permuteUnique(nums: number[]): number[][] {\n  const len = nums.length;\n  if (len === 1) return [nums];\n  const res: number[][] = [];\n  for (let i = 0; i < len; i++) {\n    res.push(\n      ...permuteUnique([...nums.slice(0, i), ...nums.slice(i + 1)]).map(v => [nums[i], ...v])\n    );\n  }\n  // \u53bb\u91cd\n  const set = new Set(res.map(v => v.join(':')));\n  const ans: number[][] = [];\n  for (const arr of set) {\n    ans.push(arr.split(':').map(v => parseInt(v)));\n  }\n  return ans;\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.08.14"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a176ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a44.5mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1aset \u53bb\u91cd\u3002")),l.createElement(i.Z,{code:"function permuteUnique(nums: number[]): number[][] {\n  const ans = new Set<string>();\n  add(nums);\n  return [...ans].map(v => v.split('::').map(v => +v));\n  function add(list: number[], q: number[] = []): void {\n    if (list.length === 1) {\n      q.push(list[0]);\n      ans.add(q.join('::'));\n      q.pop();\n      return;\n    }\n    for (let i = 0; i < list.length; i++) {\n      q.push(list[i]);\n      add([...list.slice(0, i), ...list.slice(i + 1)], q);\n      q.pop();\n    }\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);