(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[80423],{47155:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),i=t(89730),a=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1310-\u5b50\u6570\u7ec4\u5f02\u6216\u67e5\u8be2"},r.createElement(l.AnchorLink,{to:"#1310-\u5b50\u6570\u7ec4\u5f02\u6216\u67e5\u8be2","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1310. \u5b50\u6570\u7ec4\u5f02\u6216\u67e5\u8be2"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/xor-queries-of-a-subarray/"},"1310. \u5b50\u6570\u7ec4\u5f02\u6216\u67e5\u8be2"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u4f4d\u8fd0\u7b97",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 arr\uff0c\u73b0\u7ed9\u4f60\u4e00\u4e2a\u5bf9\u5e94\u7684\u67e5\u8be2\u6570\u7ec4 queries\uff0c\u5176\u4e2d queries[i] = [Li, Ri]\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u7ed9\u5b9a\u67e5\u8be2 queries \u6240\u6709\u7ed3\u679c\u7684\u6570\u7ec4\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.12"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a1492ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a52.9MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u76f4\u63a5\u5faa\u73af\u5f02\u6216\u3002")),r.createElement(i.Z,{code:"function xorQueries(arr: number[], queries: number[][]): number[] {\n  return queries.map(([start, end]) => {\n    let ans!: number;\n    for (let i = start; i <= end; i++) {\n      if (ans) ans ^= arr[i];\n      else ans = arr[i];\n    }\n    return ans;\n  });\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-2---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.12"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a132ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a53.2mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u3002")),r.createElement(i.Z,{code:"function xorQueries(arr: number[], queries: number[][]): number[] {\n  let num = arr[0];\n  const prefixSumList: number[] = arr.map((v, i) => (i === 0 ? num : (num ^= v)));\n  return queries.map(([start, end]) => prefixSumList[start - 1] ^ prefixSumList[end]);\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-3---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.14"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a124ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a52.7mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6811\u72b6\u6570\u7ec4\u3002")),r.createElement(i.Z,{code:"class FenwickTree {\n  private arr: number[];\n  constructor(private n: number) {\n    this.arr = new Array(n + 1).fill(0);\n  }\n  add(idx: number, num: number): void {\n    while (idx <= this.n) {\n      this.arr[idx] += num;\n      idx += this.lowbit(idx);\n    }\n  }\n  at(idx: number): number {\n    return this.query(idx) - this.query(idx - 1);\n  }\n  query(idx: number): number {\n    let sum = 0;\n    while (idx) {\n      sum += this.arr[idx];\n      idx -= this.lowbit(idx);\n    }\n    return sum;\n  }\n  private lowbit(num: number) {\n    return num & -num;\n  }\n}\nclass StreamRank {\n  tree = new FenwickTree(50001);\n  track(x: number): void {\n    this.tree.add(x + 1, 1);\n  }\n  getRankOfNumber(x: number): number {\n    return this.tree.query(x + 1);\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(a,{demos:t})}}}]);