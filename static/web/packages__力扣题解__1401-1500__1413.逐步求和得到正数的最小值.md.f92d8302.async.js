(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[606],{82553:function(e,n,l){"use strict";l.r(n);var t=l(96832),a=l(22131),m=l(89730),u=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"1413-\u9010\u6b65\u6c42\u548c\u5f97\u5230\u6b63\u6570\u7684\u6700\u5c0f\u503c"},t.createElement(a.AnchorLink,{to:"#1413-\u9010\u6b65\u6c42\u548c\u5f97\u5230\u6b63\u6570\u7684\u6700\u5c0f\u503c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"1413. \u9010\u6b65\u6c42\u548c\u5f97\u5230\u6b63\u6570\u7684\u6700\u5c0f\u503c"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(a.Link,{to:"https://leetcode.cn/problems/minimum-value-to-get-positive-step-by-step-sum/"},"1413. \u9010\u6b65\u6c42\u548c\u5f97\u5230\u6b63\u6570\u7684\u6700\u5c0f\u503c"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u524d\u7f00\u548c",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u5728\u786e\u4fdd\u7d2f\u52a0\u548c\u59cb\u7ec8\u5927\u4e8e\u7b49\u4e8e 1 \u7684\u524d\u63d0\u4e0b\uff0c\u9009\u51fa\u4e00\u4e2a\u6700\u5c0f\u7684 \u6b63\u6570 \u4f5c\u4e3a startValue \u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---rust"},t.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---rust","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - rust"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.09"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u5224\u65ad\u6bcf\u4e00\u6b21\u6570\u7ec4\u4e2d\u503c\u76f8\u52a0\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e ans\u3002")),t.createElement(m.Z,{code:"impl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let mut ans = 1;\n        let mut sum  = 0;\n        for num in nums {\n            sum += num;\n            if sum < 0 && ans <= sum.abs() {\n                ans = sum.abs() + 1;\n            }\n        }\n        ans\n    }\n}",lang:"rust"}),t.createElement("h2",{id:"\u9898\u89e3-2---rust"},t.createElement(a.AnchorLink,{to:"#\u9898\u89e3-2---rust","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - rust"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.09"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u5224\u65ad\u6bcf\u4e00\u6b21\u6570\u7ec4\u4e2d\u503c\u76f8\u52a0\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e ans\u3002")),t.createElement(m.Z,{code:"impl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let (mut ans, mut sum) = (0, 0);\n        for num in nums {\n            sum += num;\n            ans = ans.min(sum);\n        }\n        ans.abs() + 1\n    }\n}",lang:"rust"}),t.createElement("h2",{id:"\u9898\u89e3-3---rust"},t.createElement(a.AnchorLink,{to:"#\u9898\u89e3-3---rust","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - rust"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.09"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4e8c\u5206\u3002")),t.createElement(m.Z,{code:"fn check(nums: &Vec<i32>, v: i32) -> bool {\n    let mut v = v;\n    for num in nums {\n        v += num;\n        if v <= 0 {\n            return false;\n        }\n    }\n    true\n}\n\nimpl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let (mut l, mut r) = (1, i32::MAX);\n        while l < r {\n            let m = l + (r - l) / 2;\n            if check(&nums, m) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        l\n    }\n}",lang:"rust"})))}));n["default"]=e=>{var n=t.useContext(a.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(u,{demos:l})}}}]);