(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[76854],{18966:function(n,e,t){"use strict";t.r(e);var a=t(96832),l=t(22131),c=t(89730),r=a.memo((n=>{n.demos;return a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h1",{id:"12-\u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57"},a.createElement(l.AnchorLink,{to:"#12-\u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"12. \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57"),a.createElement("blockquote",null,a.createElement("p",null,"\u94fe\u63a5\uff1a",a.createElement(l.Link,{to:"https://leetcode-cn.com/problems/integer-to-roman/"},"12. \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57"),a.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",a.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u5b66\u3001\u5b57\u7b26\u4e32",a.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002\u8f93\u5165\u786e\u4fdd\u5728 1 \u5230 3999 \u7684\u8303\u56f4\u5185\u3002")),a.createElement("h2",{id:"\u9898\u89e3-1---typescript"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.6.2"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a144ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.3MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u5224\u65ad\u6bcf\u4e00\u4f4d\u3002")),a.createElement(c.Z,{code:"function intToRoman(num: number): string {\n  const len = (num + '').length;\n  let s = '';\n  switch (len) {\n    case 4: {\n      const n = ~~(num / 1000);\n      for (let i = 0; i < n; i++) s += 'M';\n      s += intToRoman(num % 1000);\n      break;\n    }\n    case 3: {\n      const n = ~~(num / 100);\n      switch (n) {\n        case 9: {\n          s += 'CM';\n          break;\n        }\n        case 8: {\n          s += 'DCCC';\n          break;\n        }\n        case 7: {\n          s += 'DCC';\n          break;\n        }\n        case 6: {\n          s += 'DC';\n          break;\n        }\n        case 5: {\n          s += 'D';\n          break;\n        }\n        case 4: {\n          s += 'CD';\n          break;\n        }\n        case 3: {\n          s += 'CCC';\n          break;\n        }\n        case 2: {\n          s += 'CC';\n          break;\n        }\n        case 1: {\n          s += 'C';\n          break;\n        }\n      }\n      s += intToRoman(num % 100);\n      break;\n    }\n    case 2: {\n      const n = ~~(num / 10);\n      switch (n) {\n        case 9: {\n          s += 'XC';\n          break;\n        }\n        case 8: {\n          s += 'LXXX';\n          break;\n        }\n        case 7: {\n          s += 'LXX';\n          break;\n        }\n        case 6: {\n          s += 'LX';\n          break;\n        }\n        case 5: {\n          s += 'L';\n          break;\n        }\n        case 4: {\n          s += 'XL';\n          break;\n        }\n        case 3: {\n          s += 'XXX';\n          break;\n        }\n        case 2: {\n          s += 'XX';\n          break;\n        }\n        case 1: {\n          s += 'X';\n          break;\n        }\n      }\n      s += intToRoman(num % 10);\n      break;\n    }\n    case 1: {\n      switch (num) {\n        case 9: {\n          s += 'IX';\n          break;\n        }\n        case 8: {\n          s += 'VIII';\n          break;\n        }\n        case 7: {\n          s += 'VII';\n          break;\n        }\n        case 6: {\n          s += 'VI';\n          break;\n        }\n        case 5: {\n          s += 'V';\n          break;\n        }\n        case 4: {\n          s += 'IV';\n          break;\n        }\n        case 3: {\n          s += 'III';\n          break;\n        }\n        case 2: {\n          s += 'II';\n          break;\n        }\n        case 1: {\n          s += 'I';\n          break;\n        }\n      }\n      break;\n    }\n  }\n  return s;\n}",lang:"typescript"}),a.createElement("h2",{id:"\u9898\u89e3-2---typescript"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.14"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a212ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a44.3MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5206\u8282\u5904\u7406\u3002")),a.createElement(c.Z,{code:"const config: Map<number, Map<number, string>> = new Map([\n  [\n    100,\n    new Map([\n      [1, 'C'],\n      [5, 'D'],\n      [10, 'M'],\n    ]),\n  ],\n  [\n    10,\n    new Map([\n      [1, 'X'],\n      [5, 'L'],\n      [10, 'C'],\n    ]),\n  ],\n  [\n    1,\n    new Map([\n      [1, 'I'],\n      [5, 'V'],\n      [10, 'X'],\n    ]),\n  ],\n]);\nfunction intToRoman(num: number): string {\n  let ans = '';\n  if (num >= 1000) {\n    ans += 'M'.repeat(~~(num / 1000));\n    num = num % 1000;\n  }\n  for (const [val, map] of config) {\n    if (num < val) continue;\n    const c1 = map.get(1)!;\n    const c5 = map.get(5)!;\n    const c10 = map.get(10)!;\n    const c = ~~(num / val);\n    num = num % val;\n    if (c === 9) ans += c1 + c10;\n    else if (c >= 5) ans += c5 + c1.repeat(c - 5);\n    else if (c === 4) ans += c1 + c5;\n    else ans += c1.repeat(c);\n  }\n  return ans;\n}",lang:"typescript"}),a.createElement("h2",{id:"\u9898\u89e3-3---typescript"},a.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---typescript","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - typescript"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.10.16"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a148ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a44.2mb"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6a21\u62df\u3002")),a.createElement(c.Z,{code:"function intToRoman(num: number): string {\n  let ans = '';\n  const list: { val: number; template: [string, string, string] }[] = [\n    {\n      val: 1000,\n      template: ['M', 'M', 'M'],\n    },\n    {\n      val: 100,\n      template: ['M', 'D', 'C'],\n    },\n    {\n      val: 10,\n      template: ['C', 'L', 'X'],\n    },\n    {\n      val: 1,\n      template: ['X', 'V', 'I'],\n    },\n  ];\n  for (const { val, template } of list) {\n    if (num >= val) {\n      ans += createStr(Math.floor(num / val), ...template);\n      num %= val;\n    }\n  }\n  return ans;\n  function createStr(num: number, hight: string, mid: string, low: string) {\n    if (num <= 3) return low.repeat(num);\n    else if (num <= 5) return low.repeat(5 - num) + mid;\n    else if (num <= 8) return mid + low.repeat(num - 5);\n    else return low + hight;\n  }\n}",lang:"typescript"})))}));e["default"]=n=>{var e=a.useContext(l.context),t=e.demos;return a.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),a.createElement(r,{demos:t})}}}]);