(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[20246],{29947:function(e,n,t){"use strict";t.r(n);var l=t(96832),s=t(22131),i=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"698-\u5212\u5206\u4e3a-k-\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6"},l.createElement(s.AnchorLink,{to:"#698-\u5212\u5206\u4e3a-k-\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"698. \u5212\u5206\u4e3a k \u4e2a\u76f8\u7b49\u7684\u5b50\u96c6"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(s.Link,{to:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/"},"698. \u5212\u5206\u4e3a k \u4e2a\u76f8\u7b49\u7684\u5b50\u96c6"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u4f4d\u8fd0\u7b97\u3001\u8bb0\u5fc6\u5316\u641c\u7d22\u3001\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u3001\u72b6\u6001\u538b\u7f29",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6b63\u6574\u6570 k\uff0c\u627e\u51fa\u662f\u5426\u6709\u53ef\u80fd\u628a\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210 k \u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u5176\u603b\u548c\u90fd\u76f8\u7b49\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(s.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.09.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6784\u9020 k \u4e2a\u6876\u8fdb\u884c\u56de\u6eaf+\u526a\u679d\u3002")),l.createElement(i.Z,{code:"class Solution {\npublic:\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n        sort(nums.rbegin(), nums.rend());\n        int sum = accumulate(nums.begin(), nums.end(), 0);\n        if (sum % k != 0) return false; else sum /= k;\n        vector<int> list(k, 0);\n        return dfs(nums, list, sum, 0);\n    }\n    bool dfs(vector<int> &nums, vector<int> &list, int sum, int i) {\n        if (i == nums.size()) {\n            for (auto &item : list) if (item != sum) return false;\n            return true;\n        }\n        for (int j = 0; j < list.size(); j++) {\n            if (list[j] + nums[i] > sum || j && list[j - 1] == list[j]) continue;\n            list[j] += nums[i];\n            if (dfs(nums, list, sum, i + 1)) return true;\n            list[j] -= nums[i];\n        }\n        return false;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(s.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);