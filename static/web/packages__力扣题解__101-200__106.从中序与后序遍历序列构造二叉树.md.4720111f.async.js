(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[44781],{12118:function(e,t,n){"use strict";n.r(t);var r=n(96832),l=n(22131),i=n(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"106-\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"},r.createElement(l.AnchorLink,{to:"#106-\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/"},"106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u6839\u636e\u4e00\u68f5\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u4e0e\u540e\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---java"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---java","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - java"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a18ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a75.9MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5c42\u5e8f\u904d\u5386\uff0c\u5229\u7528\u94fe\u8868\u6bcf\u6b21\u5728\u5934\u7ed3\u70b9\u6dfb\u52a0\u3002")),r.createElement(i.Z,{code:"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode buildTree(int[] inorder, int[] postorder) {\n\t\tif (inorder.length == 0)\n\t\t\treturn null;\n\t\tint center = postorder[postorder.length - 1];\n\t\tTreeNode node = new TreeNode(center);\n\t\tint index = indexOf(inorder, center);\n\t\tint left = index - 0, right = inorder.length - 1 - index;\n\t\tif (left != 0) {\n\t\t\tnode.left = buildTree(subString(inorder, 0, index), split(postorder, 0, left));\n\t\t}\n\t\tif (right != 0) {\n\t\t\tnode.right = buildTree(subString(inorder, index + 1), split(postorder, 0 + left, right));\n\t\t}\n\t\treturn node;\n\n\t}\n\n\tpublic int[] split(int[] arr, int start, int length) {\n\t\tint[] newArr = new int[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tnewArr[i] = arr[start];\n\t\t\tstart++;\n\t\t}\n\t\treturn newArr;\n\t}\n\n\tpublic int indexOf(int[] arr, int num) {\n\t\tfor (int i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (arr[i] == num)\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic int[] subString(int[] arr, int start) {\n\t\treturn subString(arr, start, arr.length);\n\t}\n\n\tpublic int[] subString(int[] arr, int start, int end) {\n\t\tint length = end - start;\n\t\tint[] newArr = new int[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tnewArr[i] = arr[start];\n\t\t\tstart++;\n\t\t}\n\t\treturn newArr;\n\t}\n}",lang:"java"}),r.createElement("h2",{id:"\u9898\u89e3-2---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.25"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a196ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a111.2MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u3002")),r.createElement(i.Z,{code:"function buildTree(inorder: number[], postorder: number[]): TreeNode | null {\n  if (inorder.length === 0 && postorder.length === 0) return null;\n  const val = postorder[postorder.length - 1];\n  const inorderIndex = inorder.indexOf(val);\n  const lInorder = inorder.slice(0, inorderIndex);\n  const rInorder = inorder.slice(inorderIndex + 1);\n  const lPostorder = postorder.slice(0, lInorder.length);\n  const rPostorder = postorder.slice(lInorder.length, postorder.length - 1);\n  return new TreeNode(val, buildTree(lInorder, lPostorder), buildTree(rInorder, rPostorder));\n}",lang:"typescript"})))}));t["default"]=e=>{var t=r.useContext(l.context),n=t.demos;return r.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:n})}}}]);