(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[76010],{68212:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),i=t(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"105-\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"},r.createElement(l.AnchorLink,{to:"#105-\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u6839\u636e\u4e00\u68f5\u6811\u7684\u524d\u5e8f\u904d\u5386\u4e0e\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---java"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---java","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - java"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a26ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a76.4MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4f7f\u7528\u9012\u5f52\uff0c\u901a\u8fc7\u5207\u5272\u6570\u7ec4\u8fdb\u884c\u904d\u5386\u5de6\u53f3\u8282\u70b9\u3002")),r.createElement(i.Z,{code:"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n\tpublic TreeNode buildTree(int[] preorder, int[] inorder) {\n        if(preorder.length==0)return null;\n\t\tint center = preorder[0];\n\t\tTreeNode node = new TreeNode(center);\n\t\tint index=indexOf(inorder, center);\n\t\tint left = index-0,right=inorder.length-1-index;\n\t\tif(left!=0) {\n\t\t\tnode.left=buildTree(split(preorder,1,left), subString(inorder, 0,index));\n\t\t}\n\t\tif(right!=0) {\n\t\t\tnode.right=buildTree(subString(preorder,1+left), subString(inorder, index+1));\n\t\t}\n\t\treturn node;\n\n\t}\n\tpublic int[] split(int[] arr,int start,int length) {\n\t\tint[] newArr = new int[length];\n\t\tfor(int i=0;i<length;i++) {\n\t\t\tnewArr[i]=arr[start];\n\t\t\tstart++;\n\t\t}\n\t\treturn newArr;\n\t}\n\tpublic int indexOf(int[] arr, int num) {\n\t\tfor (int i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (arr[i] == num)\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic int[] subString(int[] arr, int start) {\n\t\treturn subString(arr, start, arr.length);\n\t}\n\n\tpublic int[] subString(int[] arr, int start, int end) {\n\t\tint length = end - start;\n\t\tint[] newArr = new int[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tnewArr[i] = arr[start];\n\t\t\tstart++;\n\t\t}\n\t\treturn newArr;\n\t}\n\n}",lang:"java"}),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a184ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a111.3MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4f7f\u7528\u9012\u5f52\uff0c\u901a\u8fc7\u5207\u5272\u6570\u7ec4\u8fdb\u884c\u904d\u5386\u5de6\u53f3\u8282\u70b9\u3002")),r.createElement(i.Z,{code:"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\nvar buildTree = function (preorder: number[], inorder: number[]): TreeNode | null {\n  const len = preorder.length;\n  if (len === 0) return null;\n  const rootVal = preorder[0];\n  const root = new TreeNode(rootVal);\n  if (len === 1) return root;\n  const index = inorder.indexOf(rootVal);\n  root.left = buildTree(preorder.slice(1, 1 + index), inorder.slice(0, index));\n  root.right = buildTree(preorder.slice(1 + index), inorder.slice(index + 1));\n  return root;\n};",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);