(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[75732],{8068:function(e,n,t){"use strict";t.r(n);var l=t(96832),a=t(22131),c=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1725-\u53ef\u4ee5\u5f62\u6210\u6700\u5927\u6b63\u65b9\u5f62\u7684\u77e9\u5f62\u6570\u76ee"},l.createElement(a.AnchorLink,{to:"#1725-\u53ef\u4ee5\u5f62\u6210\u6700\u5927\u6b63\u65b9\u5f62\u7684\u77e9\u5f62\u6570\u76ee","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1725. \u53ef\u4ee5\u5f62\u6210\u6700\u5927\u6b63\u65b9\u5f62\u7684\u77e9\u5f62\u6570\u76ee"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(a.Link,{to:"https://leetcode-cn.com/problems/number-of-rectangles-that-can-form-the-largest-square/"},"1725. \u53ef\u4ee5\u5f62\u6210\u6700\u5927\u6b63\u65b9\u5f62\u7684\u77e9\u5f62\u6570\u76ee"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u77e9\u5f62\u80fd\u591f\u5207\u51fa\u8fb9\u957f\u4e3a maxLen \u7684\u6b63\u65b9\u5f62\uff0c\u5e76\u8fd4\u56de\u77e9\u5f62 \u6570\u76ee \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.02.05"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a36ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a17.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(c.Z,{code:"class Solution {\n   public:\n    int countGoodRectangles(vector<vector<int>>& rectangles) {\n        int len = INT_MIN, ans = 0;\n        for (auto& data : rectangles) len = max(len, min(data[0], data[1]));\n        for (auto& data : rectangles)\n            if (len <= data[0] && len <= data[1]) ans++;\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(a.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);