(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[23909],{95700:function(e,n,t){"use strict";t.r(n);var r=t(96832),a=t(22131),l=t(89730),c=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1600-\u7687\u4f4d\u7ee7\u627f\u987a\u5e8f"},r.createElement(a.AnchorLink,{to:"#1600-\u7687\u4f4d\u7ee7\u627f\u987a\u5e8f","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1600. \u7687\u4f4d\u7ee7\u627f\u987a\u5e8f"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(a.Link,{to:"https://leetcode-cn.com/problems/throne-inheritance/"},"1600. \u7687\u4f4d\u7ee7\u627f\u987a\u5e8f"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u8bbe\u8ba1",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u4e00\u4e2a\u738b\u56fd\u91cc\u4f4f\u7740\u56fd\u738b\u3001\u4ed6\u7684\u5b69\u5b50\u4eec\u3001\u4ed6\u7684\u5b59\u5b50\u4eec\u7b49\u7b49\u3002\u901a\u8fc7\u4ee5\u4e0a\u7684\u51fd\u6570\uff0c\u6211\u4eec\u603b\u662f\u80fd\u5f97\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u7ee7\u627f\u987a\u5e8f\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.06.20"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a188ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43.8MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u5e8f\u904d\u5386\u3002")),r.createElement(l.Z,{code:"class Person {\n  children: Person[] = [];\n  dead = false;\n  constructor(public name: string) {}\n}\nclass ThroneInheritance {\n  king = new Person('');\n  nameMap = new Map<string, Person>();\n  constructor(kingName: string) {\n    this.king.name = kingName;\n    this.nameMap.set(kingName, this.king);\n  }\n  birth(parentName: string, childName: string): void {\n    const parent = this.nameMap.get(parentName)!;\n    const child = new Person(childName);\n    this.nameMap.set(childName, child);\n    parent.children.push(child);\n  }\n  death(name: string): void {\n    this.nameMap.get(name)!.dead = true;\n  }\n  getInheritanceOrder(): string[] {\n    return this._getInheritanceOrder(this.king)\n      .filter(v => !v.dead)\n      .map(v => v.name);\n  }\n  private _getInheritanceOrder(person: Person): Person[] {\n    const ans: Person[] = [person];\n    person.children.forEach(child => {\n      ans.push(...this._getInheritanceOrder(child));\n    });\n    return ans;\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(a.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);