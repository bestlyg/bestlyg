(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[85224],{22149:function(e,t,n){"use strict";n.r(t);var l=n(96832),r=n(22131),c=n(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1147-\u6bb5\u5f0f\u56de\u6587"},l.createElement(r.AnchorLink,{to:"#1147-\u6bb5\u5f0f\u56de\u6587","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1147. \u6bb5\u5f0f\u56de\u6587"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/longest-chunked-palindrome-decomposition/"},"1147. \u6bb5\u5f0f\u56de\u6587"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212\u3001\u54c8\u5e0c\u51fd\u6570\u3001\u6eda\u52a8\u54c8\u5e0c",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 text\uff0c\u5728\u786e\u4fdd\u5b83\u6ee1\u8db3\u6bb5\u5f0f\u56de\u6587\u7684\u524d\u63d0\u4e0b\uff0c\u8bf7\u4f60\u8fd4\u56de \u6bb5 \u7684 \u6700\u5927\u6570\u91cf k\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.12"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs \u6bcf\u6b21\u8bfb\u53d6\u4e24\u5934\u6700\u77ed\u76f8\u5339\u914d\u5b57\u7b26\u6570\u3002")),l.createElement(c.Z,{code:"function longestDecomposition(text: string): number {\n  const n = text.length;\n  if (n <= 1) return n;\n  let lidx = 1;\n  let lstr = text[0];\n  let ridx = n - 2;\n  let rstr = text[n - 1];\n  while (ridx > lidx && lstr !== rstr) {\n    lstr += text[lidx++];\n    rstr = text[ridx--] + rstr;\n  }\n  if (ridx <= lidx && lstr !== rstr) return 1;\n  return longestDecomposition(text.substring(lidx, ridx + 1)) + 2;\n}",lang:"typescript"})))}));t["default"]=e=>{var t=l.useContext(r.context),n=t.demos;return l.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:n})}}}]);