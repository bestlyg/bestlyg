(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[35381],{6985:function(e,n,r){"use strict";r.r(n);var t=r(96832),l=r(22131),a=r(89730),i=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"1305-\u4e24\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u6240\u6709\u5143\u7d20"},t.createElement(l.AnchorLink,{to:"#1305-\u4e24\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u6240\u6709\u5143\u7d20","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"1305. \u4e24\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u6240\u6709\u5143\u7d20"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(l.Link,{to:"https://leetcode-cn.com/problems/all-elements-in-two-binary-search-trees/"},"1305. \u4e24\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u6240\u6709\u5143\u7d20"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6392\u5e8f\u3001\u6811",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b \u4e24\u68f5\u6811 \u4e2d\u7684\u6240\u6709\u6574\u6570\u5e76\u6309 \u5347\u5e8f \u6392\u5e8f\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---typescript"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.13"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a204ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a51.6MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5f52\u5e76\u3002")),t.createElement(a.Z,{code:"function getAllElements(root1: TreeNode | null, root2: TreeNode | null): number[] {\n  const inorder = (node: TreeNode | null, queue: number[]): void => {\n    if (node === null) return;\n    inorder(node.left, queue);\n    queue.push(node.val);\n    inorder(node.right, queue);\n  };\n  const queue1: number[] = [];\n  inorder(root1, queue1);\n  const queue2: number[] = [];\n  inorder(root2, queue2);\n  let p1 = 0;\n  const len1 = queue1.length;\n  let p2 = 0;\n  const len2 = queue2.length;\n  const ans: number[] = [];\n  while (p1 < len1 || p2 < len2) {\n    ans.push(p2 >= len2 || queue1[p1] <= queue2[p2] ? queue1[p1++] : queue2[p2++]);\n  }\n  return ans;\n}",lang:"typescript"}),t.createElement("h2",{id:"\u9898\u89e3-2---go"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---go","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - go"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.01"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.4MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ago"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),t.createElement(a.Z,{code:"func getAllElements(root1 *TreeNode, root2 *TreeNode) []int {\n  arr1 := getArr(root1)\n  n1 := len(arr1)\n  arr2 := getArr(root2)\n  n2 := len(arr2)\n  ans := make([]int, n1+n2)\n  var i1, i2 = 0, 0\n  for i := 0; i1 < n1 || i2 < n2; i++ {\n    if i1 != n1 && (i2 == n2 || arr1[i1] < arr2[i2]) {\n      ans[i] = arr1[i1]\n      i1++\n    } else {\n      ans[i] = arr2[i2]\n      i2++\n    }\n  }\n  return ans\n}\nfunc getArr(node *TreeNode) (arr []int) {\n  var dfs func(*TreeNode)\n  dfs = func(node *TreeNode) {\n    if node == nil {\n      return\n    }\n    dfs(node.Left)\n    arr = append(arr, node.Val)\n    dfs(node.Right)\n  }\n  dfs(node)\n  return arr\n}",lang:"go"}),t.createElement("h2",{id:"\u9898\u89e3-3---c"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - c"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.01"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a196ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a56.4MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),t.createElement(a.Z,{code:"int *getAllElements(struct TreeNode *root1, struct TreeNode *root2,\n  int *returnSize) {\n    int n1 = 0, n2 = 0;\n    int *arr1 = (int *)malloc(sizeof(int) * 5005);\n    int *arr2 = (int *)malloc(sizeof(int) * 5005);\n    createArr(arr1, &n1, root1);\n    createArr(arr2, &n2, root2);\n    *returnSize = 0;\n    int *ans = (int *)malloc(sizeof(int) * (n1 + n2));\n    for (int i1 = 0, i2 = 0; i1 < n1 || i2 < n2;) {\n        if (i1 != n1 && (i2 == n2 || arr1[i1] < arr2[i2]))\n            ans[(*returnSize)++] = arr1[i1++];\n        else\n            ans[(*returnSize)++] = arr2[i2++];\n    }\n    free(arr1);\n    free(arr2);\n    return ans;\n}\nvoid createArr(int *arr, int *size, struct TreeNode *node) {\n    if (node == NULL) return;\n    createArr(arr, size, node->left);\n    arr[(*size)++] = node->val;\n    createArr(arr, size, node->right);\n}",lang:"c"})))}));n["default"]=e=>{var n=t.useContext(l.context),r=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(i,{demos:r})}}}]);