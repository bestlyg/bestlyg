(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[3412],{23288:function(e,n,l){"use strict";l.r(n);var t=l(96832),i=l(22131),c=l(89730),d=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"790-\u591a\u7c73\u8bfa\u548c\u6258\u7c73\u8bfa\u5e73\u94fa"},t.createElement(i.AnchorLink,{to:"#790-\u591a\u7c73\u8bfa\u548c\u6258\u7c73\u8bfa\u5e73\u94fa","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"790. \u591a\u7c73\u8bfa\u548c\u6258\u7c73\u8bfa\u5e73\u94fa"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(i.Link,{to:"https://leetcode.cn/problems/domino-and-tromino-tiling/"},"790. \u591a\u7c73\u8bfa\u548c\u6258\u7c73\u8bfa\u5e73\u94fa"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u52a8\u6001\u89c4\u5212",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u6574\u6570 n \uff0c\u8fd4\u56de\u53ef\u4ee5\u5e73\u94fa 2 x n \u7684\u9762\u677f\u7684\u65b9\u6cd5\u7684\u6570\u91cf\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.12"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a5.7MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adp\u3002")),t.createElement(c.Z,{code:"class Solution {\npublic:\n    const int mod = 1e9 + 7;\n    // j = 0 \u5e73\u6574\n    // j = 1 \u4e0a\u7a7a\n    // j = 2 \u4e0b\u7a7a\n    int dp[1005][3] = {0};\n    int numTilings(int n) {\n        dp[1][0] = 1;\n        dp[2][0] = 2;\n        dp[2][1] = 1;\n        dp[2][2] = 1;\n        for (int i = 3; i <= n; i++) {\n            dp[i][0] = (dp[i][0] + dp[i - 1][0]) % mod;\n            dp[i][0] = (dp[i][0] + dp[i - 2][0]) % mod;\n            dp[i][0] = (dp[i][0] + dp[i - 1][1]) % mod;\n            dp[i][0] = (dp[i][0] + dp[i - 1][2]) % mod;\n            dp[i][1] = (dp[i][1] + dp[i - 2][0] + dp[i - 1][2]) % mod;\n            dp[i][2] = (dp[i][2] + dp[i - 2][0] + dp[i - 1][1]) % mod;\n        }\n        return dp[n][0];\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(i.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(d,{demos:l})}}}]);