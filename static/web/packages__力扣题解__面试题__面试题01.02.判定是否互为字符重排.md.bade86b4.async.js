(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[600],{96547:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"\u9762\u8bd5\u9898-0102-\u5224\u5b9a\u662f\u5426\u4e92\u4e3a\u5b57\u7b26\u91cd\u6392"},l.createElement(c.AnchorLink,{to:"#\u9762\u8bd5\u9898-0102-\u5224\u5b9a\u662f\u5426\u4e92\u4e3a\u5b57\u7b26\u91cd\u6392","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9762\u8bd5\u9898 01.02. \u5224\u5b9a\u662f\u5426\u4e92\u4e3a\u5b57\u7b26\u91cd\u6392"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode.cn/problems/check-permutation-lcci/"},"\u9762\u8bd5\u9898 01.02. \u5224\u5b9a\u662f\u5426\u4e92\u4e3a\u5b57\u7b26\u91cd\u6392"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s1 \u548c s2\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u786e\u5b9a\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u91cd\u65b0\u6392\u5217\u540e\uff0c\u80fd\u5426\u53d8\u6210\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.09.27"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(r.Z,{code:"class Solution {\npublic:\n    bool CheckPermutation(string s1, string s2) {\n        if (s1.size() != s2.size()) return false;\n        char list[130] = {0};\n        for (auto &c : s1) list[c]++;\n        for (auto &c : s2) if (list[c]-- == 0) return false;\n        return true;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);