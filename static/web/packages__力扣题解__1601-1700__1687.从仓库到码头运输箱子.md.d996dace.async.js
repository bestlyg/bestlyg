(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[1638],{95978:function(n,e,t){"use strict";t.r(e);var i=t(96832),r=t(22131),c=t(89730),l=i.memo((n=>{n.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"1687-\u4ece\u4ed3\u5e93\u5230\u7801\u5934\u8fd0\u8f93\u7bb1\u5b50"},i.createElement(r.AnchorLink,{to:"#1687-\u4ece\u4ed3\u5e93\u5230\u7801\u5934\u8fd0\u8f93\u7bb1\u5b50","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"1687. \u4ece\u4ed3\u5e93\u5230\u7801\u5934\u8fd0\u8f93\u7bb1\u5b50"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(r.Link,{to:"https://leetcode.cn/problems/delivering-boxes-from-storage-to-ports/"},"1687. \u4ece\u4ed3\u5e93\u5230\u7801\u5934\u8fd0\u8f93\u7bb1\u5b50"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",i.createElement("br",null),"\u6807\u7b7e\uff1a\u7ebf\u6bb5\u6811\u3001\u961f\u5217\u3001\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u5355\u8c03\u961f\u5217\u3001\u5806(\u4f18\u5148\u961f\u5217)",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de\u5c06\u6240\u6709\u7bb1\u5b50\u9001\u5230\u76f8\u5e94\u7801\u5934\u7684 \u6700\u5c11\u884c\u7a0b \u6b21\u6570\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---cpp"},i.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.12.05"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1aInfinityms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1aInfinityMB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u52a8\u6001\u89c4\u5212\uff0c\u80cc\u5305\u6cd5\uff0c\u8d85\u65f6\u3002")),i.createElement(c.Z,{code:'#include <iostream>\n#include <vector>\n// bestlyg\n# define X first\n# define Y second\n# define lb(x) ((x) & (-x))\n# define mem(a,b) memset(a,b,sizeof(a))\n# define debug freopen("r.txt","r",stdin)\n# define pi pair<int,int>\n\n#ifdef DEBUG\n#define log(frm, args...) {\\\n    printf(frm, ##args); \\\n}\n#else\n#define log(frm, args...)\n#endif\ntypedef long long ll;\nusing namespace std;\n\nclass Solution {\npublic:\n    int boxDelivering(vector<vector<int>>& boxes, int portsCount, int maxBoxes, int maxWeight) {\n        int n = boxes.size(), ans = 0x7fffffff;\n        vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0x3f3f3f3f));\n        dp[0][0] = 0;\n        // cnt \u7b2c\u51e0\u6b21\u4ece\u7801\u5934\u62ff\u8d27\n        // box \u603b\u5171\u6709\u51e0\u4e2a\u7bb1\u5b50\n        for (int cnt = 1; cnt <= n; cnt++) {\n            log("cnt = %d\\n", cnt);\n            for (int ibox = n; ibox >= 1; ibox--) {\n                log("=====\\nibox = %d\\n", ibox);\n                int curIdx = ibox - 1, curP = boxes[curIdx][0], curW = boxes[curIdx][1], curCnt = 1, curSum = 2; \n                dp[cnt][ibox] = min(dp[cnt][ibox], dp[cnt - 1][ibox - curCnt] + curSum);\n                while (curIdx - 1 >= 0 && curCnt + 1 <= maxBoxes && curW + boxes[curIdx - 1][1] <= maxWeight) {\n                    log("curIdx = %d, curP = %d, curW = %d, curCnt = %d, curSum = %d\n", \n                        curIdx, curP, curW, curCnt, curSum);\n                    curIdx--;\n                    curW += boxes[curIdx][1];\n                    curCnt++;\n                    if (boxes[curIdx][0] != curP) {\n                        curP = boxes[curIdx][0];\n                        curSum++;\n                    }\n                    dp[cnt][ibox] = min(dp[cnt][ibox], dp[cnt - 1][ibox - curCnt] + curSum);\n                }\n                if (ibox == n && dp[cnt][ibox] != 0x3f3f3f3f) return dp[cnt][ibox];\n            }\n        }\n        return ans;\n\n    }\n};',lang:"cpp"}),i.createElement("h2",{id:"\u9898\u89e3-2---cpp"},i.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---cpp","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - cpp"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.12.05"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a440ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a149.6MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u7edf\u8ba1\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5230\u5f53\u524d\u70b9\u603b\u5171\u7684\u8def\u5f84\u6570\uff0c\u5229\u7528\u5355\u8c03\u961f\u5217\u5feb\u901f\u6c42\u3002")),i.createElement(c.Z,{code:'#include <iostream>\n#include <deque>\n#include <vector>\n// bestlyg\n# define X dpirst\n# define Y second\n# define lb(x) ((x) & (-x))\n# define mem(a,b) memset(a,b,sizeodp(a))\n# define debug dpreopen("r.txt","r",stdin)\n# define pi pair<int,int>\n\n#ifdef DEBUG\n#define log(dprm, args...) {    printf(dprm, ##args); }\n#else\n#define log(dprm, args...)\n#endif\ntypedef long long ll;\nusing namespace std;\n\nclass Solution {\npublic:\n    int boxDelivering(vector<vector<int>>& boxes, int portsCount, int maxBoxes, int maxWeight) {\n        int n = boxes.size();\n        vector<ll> dp(n + 1, 0), sums_w(n + 1, 0), sums_p(n + 1, 0);\n        deque<int> q;\n        q.push_back(0);\n        for (int i = 1; i <= n; i++) {\n            sums_w[i] = sums_w[i - 1] + boxes[i - 1][1];\n            if (i != n) sums_p[i] = sums_p[i - 1] + (boxes[i][0] != boxes[i - 1][0] ? 1 : 0);\n            while (q.size() && (sums_w[i] - sums_w[q.front()] > maxWeight || i - q.front() > maxBoxes)) q.pop_front();\n            if (q.size()) dp[i] = dp[q.front()] + sums_p[i - 1] - sums_p[q.front()] + 2;\n            if (i != n) while (q.size() && dp[q.back()] - sums_p[q.back()] >= dp[i] - sums_p[i]) q.pop_back();\n            q.push_back(i);\n        }\n        return dp[n];\n    }\n};',lang:"cpp"})))}));e["default"]=n=>{var e=i.useContext(r.context),t=e.demos;return i.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),i.createElement(l,{demos:t})}}}]);