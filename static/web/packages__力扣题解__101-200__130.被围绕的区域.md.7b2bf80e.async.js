(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[2329],{10606:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),o=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"130-\u88ab\u56f4\u7ed5\u7684\u533a\u57df"},l.createElement(i.AnchorLink,{to:"#130-\u88ab\u56f4\u7ed5\u7684\u533a\u57df","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/surrounded-regions/"},"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684\u77e9\u9635\uff0c\u5305\u542b 'X' \u548c 'O'\uff08\u5b57\u6bcd O\uff09\u3002\u627e\u5230\u6240\u6709\u88ab 'X' \u56f4\u7ed5\u7684\u533a\u57df\uff0c\u5e76\u5c06\u8fd9\u4e9b\u533a\u57df\u91cc\u6240\u6709\u7684 'O' \u7528 'X' \u586b\u5145\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.8.11"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a132ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4ece\u8fb9\u7f18\u5f00\u59cb\u627e\uff0c\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002")),l.createElement(r.Z,{code:"function solve(board: string[][]): void {\n  const row = board.length;\n  if (row === 0) return;\n  const col = board[0].length;\n  const isEdge = (i: number, j: number): boolean =>\n    i === 0 || j === 0 || i === row - 1 || j === col - 1;\n  const check = (i: number, j: number): void => {\n    const tag = board[i][j];\n    if (tag === 'O') {\n      board[i][j] = 'A';\n      dfs(i, j);\n    }\n  };\n  const dfs = (i: number, j: number): void => {\n    // top\n    if (i !== 0 && !isEdge(i - 1, j) && board[i - 1][j] === 'O') {\n      board[i - 1][j] = 'A';\n      dfs(i - 1, j);\n    }\n    // bottom\n    if (i !== row - 1 && !isEdge(i + 1, j) && board[i + 1][j] === 'O') {\n      board[i + 1][j] = 'A';\n      dfs(i + 1, j);\n    }\n    // left\n    if (j !== 0 && !isEdge(i, j - 1) && board[i][j - 1] === 'O') {\n      board[i][j - 1] = 'A';\n      dfs(i, j - 1);\n    }\n    // right\n    if (j !== col - 1 && !isEdge(i, j + 1) && board[i][j + 1] === 'O') {\n      board[i][j + 1] = 'A';\n      dfs(i, j + 1);\n    }\n  };\n  // top bottom\n  for (let j = 0; j < col; j++) {\n    check(0, j);\n    check(row - 1, j);\n  }\n  // left right\n  for (let i = 0; i < row; i++) {\n    check(i, 0);\n    check(i, col - 1);\n  }\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < col; j++) {\n      const tag = board[i][j];\n      if (tag === 'O') board[i][j] = 'X';\n      else if (tag === 'A') board[i][j] = 'O';\n    }\n  }\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),l.createElement(r.Z,{code:"function solve(board: string[][]): void {\n  const n = board.length;\n  const m = board[0].length;\n  for (let i = 0; i < n; i++) {\n    dfs(i, 0);\n    dfs(i, m - 1);\n  }\n  for (let i = 0; i < m; i++) {\n    dfs(0, i);\n    dfs(n - 1, i);\n  }\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n      if (board[i][j] === 'O') board[i][j] = 'X';\n      if (board[i][j] === 'A') board[i][j] = 'O';\n    }\n  }\n  function dfs(row: number, col: number): void {\n    if (board[row][col] !== 'O') return;\n    board[row][col] = 'A';\n    if (row > 0) dfs(row - 1, col);\n    if (col > 0) dfs(row, col - 1);\n    if (row < n - 1) dfs(row + 1, col);\n    if (col < m - 1) dfs(row, col + 1);\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(o,{demos:t})}}}]);