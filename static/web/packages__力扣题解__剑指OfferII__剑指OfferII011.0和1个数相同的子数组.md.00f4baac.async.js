(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[32353],{54423:function(e,n,t){"use strict";t.r(n);var l=t(96832),a=t(22131),c=t(89730),m=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"\u5251\u6307-offer-ii-011-0-\u548c-1-\u4e2a\u6570\u76f8\u540c\u7684\u5b50\u6570\u7ec4"},l.createElement(a.AnchorLink,{to:"#\u5251\u6307-offer-ii-011-0-\u548c-1-\u4e2a\u6570\u76f8\u540c\u7684\u5b50\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u5251\u6307 Offer II 011. 0 \u548c 1 \u4e2a\u6570\u76f8\u540c\u7684\u5b50\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(a.Link,{to:"https://leetcode-cn.com/problems/A1NYOS/"},"\u5251\u6307 Offer II 011. 0 \u548c 1 \u4e2a\u6570\u76f8\u540c\u7684\u5b50\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u524d\u7f00\u548c",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4 nums , \u627e\u5230\u542b\u6709\u76f8\u540c\u6570\u91cf\u7684 0 \u548c 1 \u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u8be5\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.23"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a116ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a81.7MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u3002")),l.createElement(c.Z,{code:"class Solution {\n   public:\n    int findMaxLength(vector<int>& nums) {\n        int ans = 0, sum = 0;\n        unordered_map<int, int> mmap;\n        mmap[0] = -1;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums[i] == 1 ? 1 : -1;\n            if (mmap.count(sum)) {\n                ans = max(ans, i - mmap[sum]);\n            } else {\n                mmap[sum] = i;\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(a.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(m,{demos:t})}}}]);