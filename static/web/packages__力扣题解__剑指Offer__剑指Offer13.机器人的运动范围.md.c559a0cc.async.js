(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[34476],{46773:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),o=t(89730),c=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"\u5251\u6307-offer-13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"},r.createElement(l.AnchorLink,{to:"#\u5251\u6307-offer-13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/shortest-path-in-binary-matrix/"},"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4\u3001\u77e9\u9635",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a n x n \u7684\u4e8c\u8fdb\u5236\u77e9\u9635 grid \u4e2d\uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u6700\u77ed \u7545\u901a\u8def\u5f84 \u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u8fd4\u56de -1 \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.25"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a92ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43.9MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1abfs\u3002")),r.createElement(o.Z,{code:"function movingCount(m: number, n: number, k: number): number {\n  const queue: [number, number, number][] = [[0, 0, 1]];\n  const format = (row: number, col: number) => `${row}::${col}`;\n  const set = new Set(queue.map(([row, col]) => format(row, col)));\n  let ans = 1;\n  const add = (row: number, col: number, count: number) => {\n    const str = format(row, col);\n    if (set.has(str)) return;\n    set.add(str);\n    const data: [number, number, number] = [row, col, count];\n    let num = 0;\n    while (row) {\n      num += row % 10;\n      row = ~~(row / 10);\n    }\n    while (col) {\n      num += col % 10;\n      col = ~~(col / 10);\n    }\n    if (num > k) return;\n    queue.push(data);\n    ans++;\n  };\n  while (queue.length) {\n    const [row, col, count] = queue.shift()!;\n    if (row) if (row > 0) add(row - 1, col, count + 1);\n    if (col > 0) add(row, col - 1, count + 1);\n    if (row < n - 1) add(row + 1, col, count + 1);\n    if (col < m - 1) add(row, col + 1, count + 1);\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);