(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[15467],{30039:function(n,e,r){"use strict";r.r(e);var t=r(96832),o=r(22131),c=r(89730),l=t.memo((n=>{n.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"417-\u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898"},t.createElement(o.AnchorLink,{to:"#417-\u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"417. \u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(o.Link,{to:"https://leetcode-cn.com/problems/pacific-atlantic-water-flow/"},"417. \u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4\u3001\u77e9\u9635",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de \u7f51\u683c\u5750\u6807 result \u7684 2D \u5217\u8868 \uff0c\u5176\u4e2d result[i] = [ri, ci] \u8868\u793a\u96e8\u6c34\u53ef\u4ee5\u4ece\u5355\u5143\u683c (ri, ci) \u6d41\u5411 \u592a\u5e73\u6d0b\u548c\u5927\u897f\u6d0b \u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.04.27"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a28ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a18MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\uff0c\u4e0a\u5c71\u3002")),t.createElement(c.Z,{code:"int dirs[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nclass Solution {\n   public:\n    int n, m;\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n        n = heights.size(), m = heights[0].size();\n        vector<vector<int>> arr(n, vector(m, 0));\n        for (int row = 0; row < n; row++) {\n            arr[row][0] |= 0b01;\n            arr[row][m - 1] |= 0b10;\n            dfs(row, 0, arr, heights);\n            dfs(row, m - 1, arr, heights);\n        }\n        for (int col = 0; col < m; col++) {\n            arr[0][col] |= 0b01;\n            arr[n - 1][col] |= 0b10;\n            dfs(0, col, arr, heights);\n            dfs(n - 1, col, arr, heights);\n        }\n        vector<vector<int>> ans;\n        for (int row = 0; row < n; row++) {\n            for (int col = 0; col < m; col++) {\n                if (arr[row][col] != 0b11) continue;\n                vector<int> item(2);\n                item[0] = row;\n                item[1] = col;\n                ans.push_back(item);\n            }\n        }\n        return ans;\n    }\n    void dfs(int row, int col, vector<vector<int>>& arr,\n             vector<vector<int>>& heights) {\n        for (int i = 0; i < 4; i++) {\n            int nrow = row + dirs[i][0], ncol = col + dirs[i][1];\n            if (nrow < 0 || ncol < 0 || nrow == n || ncol == m) continue;\n            if (heights[nrow][ncol] < heights[row][col]) continue;\n            if (arr[row][col] == arr[nrow][ncol]) continue;\n            arr[nrow][ncol] |= arr[row][col];\n            dfs(nrow, ncol, arr, heights);\n        }\n    }\n};",lang:"cpp"})))}));e["default"]=n=>{var e=t.useContext(o.context),r=e.demos;return t.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),t.createElement(l,{demos:r})}}}]);