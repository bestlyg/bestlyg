(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[78709],{80358:function(e,n,l){"use strict";l.r(n);var t=l(96832),a=l(22131),c=l(89730),r=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"\u5251\u6307-offer-ii-041-\u6ed1\u52a8\u7a97\u53e3\u7684\u5e73\u5747\u503c"},t.createElement(a.AnchorLink,{to:"#\u5251\u6307-offer-ii-041-\u6ed1\u52a8\u7a97\u53e3\u7684\u5e73\u5747\u503c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u5251\u6307 Offer II 041. \u6ed1\u52a8\u7a97\u53e3\u7684\u5e73\u5747\u503c"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(a.Link,{to:"https://leetcode.cn/problems/qIsx9U/"},"\u5251\u6307 Offer II 041. \u6ed1\u52a8\u7a97\u53e3\u7684\u5e73\u5747\u503c"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",t.createElement("br",null),"\u6807\u7b7e\uff1a\u8bbe\u8ba1\u3001\u961f\u5217\u3001\u6570\u7ec4\u3001\u6570\u636e\u6d41",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u636e\u6d41\u548c\u4e00\u4e2a\u7a97\u53e3\u5927\u5c0f\uff0c\u6839\u636e\u8be5\u6ed1\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u8ba1\u7b97\u6ed1\u52a8\u7a97\u53e3\u91cc\u6240\u6709\u6570\u5b57\u7684\u5e73\u5747\u503c\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.16"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a20ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a13.7MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1aqueue\u3002")),t.createElement(c.Z,{code:"class MovingAverage {\n   public:\n    int size, sum = 0;\n    queue<int> q;\n    MovingAverage(int size) { this->size = size; }\n    double next(int val) {\n        if (q.size() >= size) {\n            sum -= q.front();\n            q.pop();\n        }\n        q.push(val);\n        sum += val;\n        return sum * 1.0 / q.size();\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(a.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(r,{demos:l})}}}]);