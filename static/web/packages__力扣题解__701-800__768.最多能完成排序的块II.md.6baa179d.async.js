(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[28691],{11119:function(e,n,t){"use strict";t.r(n);var l=t(96832),a=t(22131),c=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"768-\u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757-ii"},l.createElement(a.AnchorLink,{to:"#768-\u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757-ii","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"768. \u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757 II"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(a.Link,{to:"https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/"},"768. \u6700\u591a\u80fd\u5b8c\u6210\u6392\u5e8f\u7684\u5757 II"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u6392\u5e8f\u3001\u5355\u8c03\u6808",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u6211\u4eec\u6700\u591a\u80fd\u5c06\u6570\u7ec4\u5206\u6210\u591a\u5c11\u5757\uff1f\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.15"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a8ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a11.8MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5355\u8c03\u6808\uff0c\u6bcf\u6b21\u610f\u5473\u7740\u5de6\u8fb9\u5757\u4e2d\u6240\u6709\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u53f3\u8fb9\u5757\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u5408\u5e76\u3002")),l.createElement(c.Z,{code:"class Solution {\npublic:\n    int maxChunksToSorted(vector<int>& arr) {\n        vector<int> s;\n        for (auto &num : arr) {\n            if (s.empty() || s[s.size() - 1] <= num) {\n                s.push_back(num);\n            } else {\n                int num_max = s[s.size() - 1];\n                while (s.size() && s[s.size() - 1] > num) s.pop_back();\n                s.push_back(num_max);\n            }\n        }\n        return s.size();\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(a.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);