(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[58529],{2605:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1218-\u6700\u957f\u5b9a\u5dee\u5b50\u5e8f\u5217"},l.createElement(r.AnchorLink,{to:"#1218-\u6700\u957f\u5b9a\u5dee\u5b50\u5e8f\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1218. \u6700\u957f\u5b9a\u5dee\u5b50\u5e8f\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/longest-arithmetic-subsequence-of-given-difference/"},"1218. \u6700\u957f\u5b9a\u5dee\u5b50\u5e8f\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 \xa0arr\xa0 \u548c\u4e00\u4e2a\u6574\u6570 \xa0difference\uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de arr\xa0 \u4e2d\u6700\u957f\u7b49\u5dee\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8be5\u5b50\u5e8f\u5217\u4e2d\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u7b49\u4e8e difference \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.05"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u54c8\u5e0c\u5b58\u50a8\u3002")),l.createElement(c.Z,{code:"function longestSubsequence(arr: number[], difference: number): number {\n  let max = 1;\n  const map = new Map<number, number>();\n  for (const num of arr) {\n    const cnt = (map.get(num) ?? 0) + 1;\n    map.set(num + difference, cnt);\n    max = Math.max(max, cnt);\n  }\n  return max;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);