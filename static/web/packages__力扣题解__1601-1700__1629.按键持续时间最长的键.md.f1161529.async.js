(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[7684],{11384:function(e,n,l){"use strict";l.r(n);var t=l(96832),a=l(22131),c=l(89730),r=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"1629-\u6309\u952e\u6301\u7eed\u65f6\u95f4\u6700\u957f\u7684\u952e"},t.createElement(a.AnchorLink,{to:"#1629-\u6309\u952e\u6301\u7eed\u65f6\u95f4\u6700\u957f\u7684\u952e","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"1629. \u6309\u952e\u6301\u7eed\u65f6\u95f4\u6700\u957f\u7684\u952e"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(a.Link,{to:"https://leetcode-cn.com/problems/slowest-key/"},"1629. \u6309\u952e\u6301\u7eed\u65f6\u95f4\u6700\u957f\u7684\u952e"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u5b57\u7b26\u4e32",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u8fd4\u56de\u6309\u952e \u6301\u7eed\u65f6\u95f4\u6700\u957f \u7684\u952e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u952e\uff0c\u5219\u8fd4\u56de \u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u6700\u5927 \u7684\u90a3\u4e2a\u952e\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---c"},t.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.01.09"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a10.5MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\uff0c\u8bb0\u5f55\u6700\u5927\u503c\u3002")),t.createElement(c.Z,{code:"class Solution {\n   public:\n    char slowestKey(vector<int>& releaseTimes, string keysPressed) {\n        int pre = 0, max_v = 0;\n        char max_c;\n        for (int i = 0; i < releaseTimes.size(); i++) {\n            int time = releaseTimes[i] - pre;\n            if (time > max_v || time == max_v && keysPressed[i] > max_c) {\n                max_v = time;\n                max_c = keysPressed[i];\n            }\n            pre = releaseTimes[i];\n        }\n        return max_c;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(a.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(r,{demos:l})}}}]);