(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[45003],{46717:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),a=t(89730),c=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"954-\u4e8c\u500d\u6570\u5bf9\u6570\u7ec4"},r.createElement(l.AnchorLink,{to:"#954-\u4e8c\u500d\u6570\u5bf9\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"954. \u4e8c\u500d\u6570\u5bf9\u6570\u7ec4"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/array-of-doubled-pairs/"},"954. \u4e8c\u500d\u6570\u5bf9\u6570\u7ec4"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6392\u5e8f",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u6574\u6570\u6570\u7ec4 arr\uff0c\u53ea\u6709\u5bf9 arr \u8fdb\u884c\u91cd\u7ec4\u540e\u53ef\u4ee5\u6ee1\u8db3 \u201c\u5bf9\u4e8e\u6bcf\u4e2a 0 <= i < len(arr) / 2\uff0c\u90fd\u6709 arr[2 * i + 1] = 2 _ arr[2 _ i]\u201d \u65f6\uff0c\u8fd4\u56de true\uff1b\u5426\u5219\uff0c\u8fd4\u56de false\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---cpp"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.04.01"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a100ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a56.9MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6392\u5e8f\u540e\u68c0\u67e5\u3002")),r.createElement(a.Z,{code:"class Solution {\n   public:\n    bool canReorderDoubled(vector<int> &arr) {\n        deque<int> q1, q2;\n        unordered_map<int, int> m;\n        sort(arr.begin(), arr.end());\n        for (auto &num : arr) {\n            m[num]++;\n            if (num >= 0 && (q1.empty() || q1.back() != num))\n                q1.push_back(num);\n            else if (num < 0 && (q2.empty() || q2.front() != num))\n                q2.push_front(num);\n        }\n        return check(m, q1) && check(m, q2);\n    }\n    bool check(unordered_map<int, int> &m, deque<int> q) {\n        while (q.size()) {\n            int num = q.front();\n            q.pop_front();\n            if (m[num] == 0) continue;\n            if (m[num * 2] < m[num]) return false;\n            m[num * 2] -= m[num];\n        }\n        return true;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);