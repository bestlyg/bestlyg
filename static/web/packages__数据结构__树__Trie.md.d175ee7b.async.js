(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[56350],{59638:function(e,n,t){"use strict";t.r(n);var r=t(96832),i=t(22131),s=t(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"trie"},r.createElement(i.AnchorLink,{to:"#trie","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"Trie"),r.createElement("p",null,"Trie \u4e5f\u53eb\u505a\u5b57\u5178\u6811\u3001\u524d\u7f00\u6811\uff08Prefix Tree\uff09\u3001\u5355\u8bcd\u67e5\u627e\u6811\uff0cTrie \u641c\u7d22\u5b57\u7b26\u4e32\u7684\u6548\u7387\u4e3b\u8981\u8ddf\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6709\u5173\u3002"),r.createElement("h2",{id:"trie-\u7684\u4f18\u70b9"},r.createElement(i.AnchorLink,{to:"#trie-\u7684\u4f18\u70b9","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"Trie \u7684\u4f18\u70b9"),r.createElement("ul",null,r.createElement("li",null,"\u641c\u7d22\u524d\u7f00\u7684\u6548\u7387\u4e3b\u8981\u8ddf\u524d\u7f00\u7684\u957f\u5ea6\u6709\u5173")),r.createElement("h2",{id:"trie-\u7684\u7f3a\u70b9"},r.createElement(i.AnchorLink,{to:"#trie-\u7684\u7f3a\u70b9","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"Trie \u7684\u7f3a\u70b9"),r.createElement("ul",null,r.createElement("li",null,"\u9700\u8981\u8017\u8d39\u5927\u91cf\u7684\u5185\u5b58\uff0c")),r.createElement("h2",{id:"\u6838\u5fc3\u4ee3\u7801"},r.createElement(i.AnchorLink,{to:"#\u6838\u5fc3\u4ee3\u7801","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),r.createElement(i.Link,{to:"https://gitee.com/bestlyg/bestlyg/tree/master/packages/data-structures/src/tree/trie.ts"},"\u6838\u5fc3\u4ee3\u7801")),r.createElement(s.Z,{code:"export interface ITrie {\n  size: number;\n  empty: boolean;\n  add: (str: string) => void;\n  remove: (str: string) => void;\n  clear: () => void;\n  contains: (str: string) => boolean;\n  starsWith: (str: string) => boolean;\n}\nexport class TrieNode {\n  end = false;\n  children: Map<string, TrieNode> = new Map();\n  constructor(public val: string) {}\n}\nexport class Trie implements ITrie {\n  private _size = 0;\n  get size() {\n    return this._size;\n  }\n  get empty() {\n    return this._size === 0;\n  }\n  private root = new TrieNode('');\n  clear() {\n    this.root = new TrieNode('');\n    this._size = 0;\n  }\n  add(str: string) {\n    return this._add(str);\n  }\n  private _add(str: string, node = this.root) {\n    if (str.length === 0) {\n      this.root.end = true;\n      this._size++;\n      return;\n    }\n    if (str.length === 1) {\n      let endNode = node.children.get(str);\n      if (!endNode) node.children.set(str, (endNode = new TrieNode(str)));\n      if (!endNode.end) {\n        endNode.end = true;\n        this._size++;\n      }\n      return;\n    }\n    const first = str[0];\n    let nextNode = node.children.get(first);\n    if (!nextNode) node.children.set(first, (nextNode = new TrieNode(first)));\n    const nextStr = str.substr(1);\n    this._add(nextStr, nextNode);\n  }\n  contains(str: string) {\n    const endNode = this.findEndNode(str);\n    return endNode ? endNode.end : false;\n  }\n  remove(str: string) {\n    const endNode = this.findEndNode(str);\n    if (endNode && endNode.end) {\n      endNode.end = false;\n      this._size--;\n    }\n  }\n  starsWith(str: string) {\n    return this.findEndNode(str) !== null;\n  }\n  private findEndNode(str: string, node = this.root): TrieNode | null {\n    if (str.length === 0) return this.root;\n    if (str.length === 1) return node.children.get(str) ?? null;\n    const first = str[0];\n    let nextNode = node.children.get(first);\n    if (!nextNode) return null;\n    const nextStr = str.substr(1);\n    return this.findEndNode(nextStr, nextNode);\n  }\n}",lang:"ts"})))}));n["default"]=e=>{var n=r.useContext(i.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);