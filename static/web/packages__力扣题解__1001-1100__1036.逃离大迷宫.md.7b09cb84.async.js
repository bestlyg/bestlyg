(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[50831],{77035:function(e,n,t){"use strict";t.r(n);var r=t(96832),c=t(22131),l=t(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1036-\u9003\u79bb\u5927\u8ff7\u5bab"},r.createElement(c.AnchorLink,{to:"#1036-\u9003\u79bb\u5927\u8ff7\u5bab","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1036. \u9003\u79bb\u5927\u8ff7\u5bab"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(c.Link,{to:"https://leetcode-cn.com/problems/escape-a-large-maze/"},"1036. \u9003\u79bb\u5927\u8ff7\u5bab"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u53ea\u6709\u5728\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u79fb\u52a8\u4ece\u6e90\u65b9\u683c source \u5230\u8fbe\u76ee\u6807\u65b9\u683c target \u65f6\u624d\u8fd4\u56de true\u3002\u5426\u5219\uff0c\u8fd4\u56de false\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.01.11"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a1556ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a59.4MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1abfs,\u5224\u65ad\u662f\u5426\u88ab\u5305\u56f4\u3002")),r.createElement(l.Z,{code:"const format = (row: number, col: number) => `${row}:${col}`;\nconst dirs: number[][] = [\n  [1, 0],\n  [-1, 0],\n  [0, 1],\n  [0, -1],\n];\nconst MAX = 10 ** 6;\nconst MAX_CNT = 200 * 200;\nfunction check(blocked: Set<string>, source: number[], target: number[]): boolean {\n  const set = new Set<string>();\n  const queue: number[][] = [[source[0], source[1]]];\n  let cnt = MAX_CNT;\n  while (queue.length) {\n    const [row, col] = queue.shift()!;\n    for (const [addrow, addcol] of dirs) {\n      const nrow = row + addrow;\n      const ncol = col + addcol;\n      const str = format(nrow, ncol);\n      if (nrow < 0 || nrow >= MAX || ncol < 0 || ncol >= MAX || blocked.has(str) || set.has(str))\n        continue;\n      if (--cnt == 0 || (nrow === target[0] && ncol === target[1])) return true;\n      set.add(str);\n      queue.push([nrow, ncol]);\n    }\n  }\n  return false;\n}\nfunction isEscapePossible(blocked: number[][], source: number[], target: number[]): boolean {\n  if (blocked.length <= 1) return true;\n  const blocked_set = new Set(blocked.map(([row, col]) => format(row, col)));\n  return check(blocked_set, source, target) && check(blocked_set, target, source);\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(c.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:t})}}}]);