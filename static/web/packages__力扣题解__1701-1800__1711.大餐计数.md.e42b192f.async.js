(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[52830],{96757:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1711-\u5927\u9910\u8ba1\u6570"},l.createElement(c.AnchorLink,{to:"#1711-\u5927\u9910\u8ba1\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1711. \u5927\u9910\u8ba1\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode-cn.com/problems/count-good-meals/"},"1711. \u5927\u9910\u8ba1\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 deliciousness \uff0c\u5176\u4e2d deliciousness[i] \u662f\u7b2c i\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b \u9053\u9910\u54c1\u7684\u7f8e\u5473\u7a0b\u5ea6\uff0c\u8fd4\u56de\u4f60\u53ef\u4ee5\u7528\u6570\u7ec4\u4e2d\u7684\u9910\u54c1\u505a\u51fa\u7684\u4e0d\u540c \u5927\u9910 \u7684\u6570\u91cf\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.07"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a304ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a50.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5bf9\u6bcf\u4e2a\u503c\u8fdb\u884c\u67e5\u770b 2 \u7684\u5e42\u53ef\u80fd\u6027\u3002")),l.createElement(r.Z,{code:"function countPairs(deliciousness: number[]): number {\n  const MOD = 10 ** 9 + 7;\n  const LIST_2: number[] = [];\n  for (let i = 1, max = 2 ** 21; i <= max; i <<= 1) LIST_2.push(i);\n  const map: Record<number, number> = {};\n  let ans = 0;\n  for (const num of deliciousness) {\n    for (const num2 of LIST_2) if (num2 >= num) ans = (ans + (map[num2 - num] ?? 0)) % MOD;\n    map[num] = (map[num] ?? 0) + 1;\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);