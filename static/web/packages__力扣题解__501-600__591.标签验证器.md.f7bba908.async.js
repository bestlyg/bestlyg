(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[67443],{76867:function(n,e,t){"use strict";t.r(e);var a=t(96832),i=t(22131),l=t(89730),s=a.memo((n=>{n.demos;return a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h1",{id:"591-\u6807\u7b7e\u9a8c\u8bc1\u5668"},a.createElement(i.AnchorLink,{to:"#591-\u6807\u7b7e\u9a8c\u8bc1\u5668","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"591. \u6807\u7b7e\u9a8c\u8bc1\u5668"),a.createElement("blockquote",null,a.createElement("p",null,"\u94fe\u63a5\uff1a",a.createElement(i.Link,{to:"https://leetcode-cn.com/problems/tag-validator/"},"591. \u6807\u7b7e\u9a8c\u8bc1\u5668"),a.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",a.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u5b57\u7b26\u4e32",a.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u4ee3\u7801\u7247\u6bb5\u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u9a8c\u8bc1\u5668\u6765\u89e3\u6790\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5e76\u8fd4\u56de\u5b83\u662f\u5426\u5408\u6cd5\u3002")),a.createElement("h2",{id:"\u9898\u89e3-1---cpp"},a.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),a.createElement("ul",null,a.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.02"),a.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),a.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.5MB"),a.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),a.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6808\u5b58\u6bcf\u4e00\u5c42\uff0c\u518d\u904d\u5386\u5b57\u7b26\u4e32\u3002")),a.createElement(l.Z,{code:'#ifdef DEBUG\n#define log(fmt, args...) \\\n    { printf(fmt, ##args); }\n#else\n#define log(fmt, args...)\n#endif\nclass Solution {\n   public:\n    int i = 0, n;\n    bool check = true;\n    stack<string> s;\n    string code;\n    bool isValid(string code) {\n        this->code = code;\n        n = code.size();\n        log("n = %d\\n", n);\n        // \u6700\u5916\u5c42\u4e00\u5b9a\u8981\u662ftag\n        if (code[0] != \'<\' || code[n - 1] != \'>\') return false;\n        while (i < n) {\n            // \u68c0\u6d4btag\u5f00\u59cb\n            if (code[i] == \'<\') {\n                // \u68c0\u6d4bCDATA\n                if (i + 1 < n && code[i + 1] == \'!\') {\n                    // CDATA\u4e00\u5b9a\u8981\u5728tag\u91cc\n                    if (s.empty()) return false;\n                    analysisCDATATag();\n                    log("end analysisCDATATag : i = %d\\n", i);\n                    if (!check) return false;\n                } else {\n                    // \u68c0\u6d4btag\n                    analysisTag();\n                    log("end analysisTag : i = %d\\n", i);\n                    // \u5982\u679c\u6808\u7a7a\u4e86\uff0c\u4f46\u68c0\u6d4b\u6ca1\u7ed3\u675f\uff0c\u5c31\u6709\u95ee\u9898\n                    if (!check || s.empty() && i != n) return false;\n                }\n            }\n            // \u76f4\u63a5\u5230\u4e0b\u4e00\u4e2a<\n            while (i < n && code[i] != \'<\') i++;\n        }\n        log("end check");\n        // \u6700\u540e\u770b\u770b\u662f\u4e0d\u662f\u6808\u7a7a\n        return s.empty();\n    }\n    void analysisTag() {\n        // \u5148\u62ff\u5230\u7ed3\u5c3e\u4e0b\u6807\n        int end = i;\n        while (end < n && code[end] != \'>\') end++;\n        // \u6ca1\u7ed3\u5c3e\u5c31\u4e0d\u5bf9\u4e86\n        if (end == n) {\n            check = false;\n            return;\n        }\n        // \u770b\u770b\u662fendTag\u8fd8\u662fstartTag\n        if (i + 1 < n && code[i + 1] == \'/\') {\n            // endTag\u5148\u8fc7\u6ee4\u659c\u7ebf\n            i += 1;\n            string tag = analysisCommonTag(end);\n            // \u8df3\u8dc3\n            i = end + 1;\n            // \u5982\u679ctag\u89e3\u6790\u4e0d\u51fa\u6765\u5c31\u4e0d\u5bf9\u4e86\n            if (tag != "") {\n                log("find end  tag : %s\\n", tag.data());\n                // \u5982\u679cendTag\u89e3\u6790\u51fa\u6765\u4e86\u4f46\u6808\u7a7a\u6216\u6808\u9876\u6ca1\u5339\u914d\u7684\u4e5f\u4e0d\u5bf9\n                if (s.empty() || s.top() != tag) check = false;\n                // \u5bf9\u4e86\u5c31\u51fa\u6808\n                else\n                    s.pop();\n                return;\n            } else\n                check = false;\n        } else {\n            // \u89e3\u6790startTag\n            string tag = analysisCommonTag(end);\n            i = end + 1;\n            if (tag != "") {\n                log("find start tag : %s\\n", tag.data());\n                // \u5bf9\u4e86\u5c31\u5165\u6808\n                s.push(tag);\n                return;\n            } else\n                check = false;\n        }\n    }\n    string analysisCommonTag(int end) {\n        string ans = "";\n        // \u957f\u5ea6 [1, 9]\n        if (end == i + 1 || end - i - 1 > 9) return "";\n        // \u90fd\u662f\u5927\u5199\u5b57\u7b26\n        for (int start = i + 1; start < end; start++) {\n            if (!isupper(code[start])) return "";\n            ans += code[start];\n        }\n        return ans;\n    }\n    string startWith_cdata = "<![CDATA[";\n    string endWith_cdata = "]]>";\n    void analysisCDATATag() {\n        log("anasysisCDATATAG, i = %d\\n", i);\n        // \u5148\u770b\u770b\u80fd\u4e0d\u80fd\u5339\u914d\u5f00\u59cb\u6807\u8bb0\n        int start = i, startMatchCnt = 0;\n        while (start < n && startMatchCnt != startWith_cdata.size()) {\n            if (code[start] == startWith_cdata[startMatchCnt])\n                startMatchCnt++;\n            else\n                break;\n            start++;\n        }\n        // \u5339\u914d\u4e0d\u4e0a\u5c31\u9519\u4e86\n        if (start == n || startMatchCnt != startWith_cdata.size()) {\n            check = false;\n            return;\n        }\n        // \u518d\u770b\u770b\u80fd\u4e0d\u80fd\u5339\u914d\u7ed3\u675f\u6807\u8bb0\n        log("find start = %d\\n", start);\n        int end = start, endMatchCnt = 0;\n        // \u4e00\u76f4\u5faa\u73af\u627e]\u5f00\u5934\u7684\u8fdb\u884c\u5c1d\u8bd5\n        while (true) {\n            endMatchCnt = 0;\n            while (end < n && code[end] != endWith_cdata[0]) end++;\n            while (end < n && endMatchCnt != endWith_cdata.size()) {\n                if (code[end] == endWith_cdata[endMatchCnt])\n                    endMatchCnt++;\n                else\n                    break;\n                end++;\n            }\n            log("end = %d\\n", end);\n            if (end == n || endMatchCnt == endWith_cdata.size()) break;\n        }\n        // \u5339\u914d\u4e0d\u4e0a\u5c31\u9519\u4e86\n        // \u5339\u914d\u4e0a\u5c31\u8df3\u8dc3\u4e86\n        if (end == n) {\n            check = false;\n        } else {\n            log("find cdata tag : start = %d, end = %d\\n", start, end);\n            i = end;\n        }\n    }\n};',lang:"cpp"})))}));e["default"]=n=>{var e=a.useContext(i.context),t=e.demos;return a.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),a.createElement(s,{demos:t})}}}]);