(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[96535],{39308:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"23-\u5408\u5e76-k-\u4e2a\u5347\u5e8f\u94fe\u8868"},l.createElement(i.AnchorLink,{to:"#23-\u5408\u5e76-k-\u4e2a\u5347\u5e8f\u94fe\u8868","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"23. \u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/"},"23. \u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5806\u3001\u94fe\u8868\u3001\u5206\u6cbb\u7b97\u6cd5",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---javascript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.4.26"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a404ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a37.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5faa\u73af\u6570\u7ec4\u8fdb\u884c\u6dfb\u52a0\uff0c\u628a\u6570\u7ec4\u4e24\u4e24\u6dfb\u52a0\uff0c\u6dfb\u52a0\u65f6\u5224\u65ad\u6570\u503c\u5c0f\u4ee5\u53ca\u662f\u5426\u4e3a null\u3002")),l.createElement(r.Z,{code:"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\nvar mergeKLists = function (lists) {\n  if (lists.length === 0) return null;\n  if (lists.length === 1) return lists[0];\n  let resNode;\n  for (const node of lists) {\n    if (node === null) continue;\n    if (resNode === undefined) resNode = node;\n    else resNode = add(resNode, node);\n  }\n  return resNode === undefined ? null : resNode;\n};\nfunction add(node1, node2) {\n  let tempNode1 = node1;\n  let tempNode2 = node2;\n  let resNode;\n  let tempNode3;\n  while (tempNode1 !== null || tempNode2 !== null) {\n    let minNode;\n    if (tempNode1 === null) {\n      minNode = tempNode2;\n      tempNode2 = tempNode2.next;\n    } else if (tempNode2 === null) {\n      minNode = tempNode1;\n      tempNode1 = tempNode1.next;\n    } else if (tempNode1.val < tempNode2.val) {\n      minNode = tempNode1;\n      tempNode1 = tempNode1.next;\n    } else {\n      minNode = tempNode2;\n      tempNode2 = tempNode2.next;\n    }\n    if (resNode === undefined) {\n      tempNode3 = resNode = minNode;\n    } else {\n      tempNode3.next = minNode;\n      tempNode3 = tempNode3.next;\n    }\n  }\n  return resNode;\n}",lang:"javascript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.13"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a220ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5f52\u5e76\u601d\u60f3\u6392\u5e8f\u3002")),l.createElement(r.Z,{code:"function mergeKLists(lists: Array<ListNode | null>): ListNode | null {\n  lists = lists.filter(list => list !== null);\n  const len = lists.length;\n  if (len === 0) return null;\n  const merge = (start: number, end: number): ListNode | null => {\n    console.log(start, end);\n    if (start > end) return null;\n    if (start === end) return lists[start];\n    const mid = (start + end) >> 1;\n    const list1 = merge(start, mid);\n    const list2 = merge(mid + 1, end);\n    if (list1 === null) return list2;\n    if (list2 === null) return list1;\n    const first = new ListNode(0);\n    let temp = first;\n    let p1: ListNode | null = list1;\n    let p2: ListNode | null = list2;\n    while (p1 && p2) {\n      if (p1.val <= p2.val) {\n        temp.next = p1;\n        temp = temp.next;\n        p1 = p1.next;\n      } else {\n        temp.next = p2;\n        temp = temp.next;\n        p2 = p2.next;\n      }\n    }\n    if (p1) temp.next = p1;\n    if (p2) temp.next = p2;\n    return first.next;\n  };\n  return merge(0, len - 1);\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);