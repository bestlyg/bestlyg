(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[74222],{26222:function(e,n,t){"use strict";t.r(n);var i=t(96832),l=t(22131),r=t(89730),c=i.memo((e=>{e.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"6244-\u5b8c\u7f8e\u5206\u5272\u7684\u65b9\u6848\u6570"},i.createElement(l.AnchorLink,{to:"#6244-\u5b8c\u7f8e\u5206\u5272\u7684\u65b9\u6848\u6570","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"6244. \u5b8c\u7f8e\u5206\u5272\u7684\u65b9\u6848\u6570"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(l.Link,{to:"https://leetcode.cn/problems/number-of-beautiful-partitions/"},"6244. \u5b8c\u7f8e\u5206\u5272\u7684\u65b9\u6848\u6570"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",i.createElement("br",null),"\u6807\u7b7e\uff1a",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6bcf\u4e2a\u5b57\u7b26\u662f\u6570\u5b57 '1' \u5230 '9' \uff0c\u518d\u7ed9\u4f60\u4e24\u4e2a\u6574\u6570 k \u548c minLength \u3002\u8bf7\u4f60\u8fd4\u56de s \u7684 \u5b8c\u7f8e \u5206\u5272\u6570\u76ee\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8bf7\u8fd4\u56de\u7b54\u6848\u5bf9 109 + 7 \u53d6\u4f59 \u540e\u7684\u7ed3\u679c\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---cpp"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.20"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a32ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a30.4MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adp[i][j]\u8868\u793a\u603b\u5171\u5206\u6210i\u7ec4\u603b\u5171\u5b57\u7b26\u6709j\u4e2a\u7684\u5408\u7406\u65b9\u6848\u6570\u3002")),i.createElement(r.Z,{code:"class Solution {\npublic:\n    string s;\n    int n;\n    const int mod = 1e9 + 7;\n    bool isPrime(int i) {\n        return s[i] == '2' || s[i] == '3' || s[i] == '5' || s[i] == '7';\n    }\n    bool canPart(int i) {\n        return i == 0 || i == n || !isPrime(i - 1) && isPrime(i);\n    }\n    int beautifulPartitions(string s, int k, int minLength) {\n        this->s = s;\n        n = s.size();\n        if (!isPrime(0) || isPrime(n - 1) || k * minLength > n) return false;\n        vector<vector<int>> dp(k + 1, vector<int>(n + 1, 0));\n        dp[0][0] = 1;\n        for (int i = 1; i <= k; i++) { \n            int sum = 0;\n            for (int j = i * minLength; j + (k - i) * minLength <= n; j++) {\n                if (canPart(j - minLength)) sum = (sum + dp[i - 1][j - minLength]) % mod;\n                if (canPart(j)) dp[i][j] = sum;\n            }\n        }\n        return dp[k][n];\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=i.useContext(l.context),t=n.demos;return i.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),i.createElement(c,{demos:t})}}}]);