(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[24685],{39753:function(e,t,n){"use strict";n.r(t);var l=n(96832),i=n(22131),a=n(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1184-\u516c\u4ea4\u7ad9\u95f4\u7684\u8ddd\u79bb"},l.createElement(i.AnchorLink,{to:"#1184-\u516c\u4ea4\u7ad9\u95f4\u7684\u8ddd\u79bb","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1184. \u516c\u4ea4\u7ad9\u95f4\u7684\u8ddd\u79bb"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/distance-between-bus-stops/"},"1184. \u516c\u4ea4\u7ad9\u95f4\u7684\u8ddd\u79bb"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u4e58\u5ba2\u4ece\u51fa\u53d1\u70b9 start \u5230\u76ee\u7684\u5730 destination \u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.29"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.6MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(a.Z,{code:"class Solution {\n   public:\n    int comp(vector<int>& distance, int start, int destination, int f) {\n        int sum = 0;\n        while (start != destination) {\n            if (f == 1) sum += distance[start];\n            start += f;\n            if (start == distance.size())\n                start = 0;\n            else if (start == -1)\n                start = distance.size() - 1;\n            if (f == -1) sum += distance[start];\n        }\n        return sum;\n    }\n    int distanceBetweenBusStops(vector<int>& distance, int start,\n                                int destination) {\n        return min(comp(distance, start, destination, 1),\n                   comp(distance, start, destination, -1));\n    }\n};",lang:"cpp"}),l.createElement("h2",{id:"\u9898\u89e3-2---rust"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---rust","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - rust"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.24"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(a.Z,{code:"impl Solution {\n    pub fn distance_between_bus_stops(distance: Vec<i32>, start: i32, destination: i32) -> i32 {\n        let n = distance.len() as i32;\n        let (mut sum1, mut sum2) = (0, 0);\n        let (mut cur1, mut cur2) = (start, destination);\n        let mut i = start;\n        while i != destination {\n            sum1 += distance[i as usize];\n            i = (i + 1) % n;\n        }\n        i = destination;\n        while i != start {\n            sum2 += distance[i as usize];\n            i = (i + 1) % n;\n        }\n        sum1.min(sum2)\n    }\n}",lang:"rust"})))}));t["default"]=e=>{var t=l.useContext(i.context),n=t.demos;return l.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:n})}}}]);