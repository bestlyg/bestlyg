(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[95706],{88781:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),c=t(89730),o=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"685-\u5197\u4f59\u8fde\u63a5-ii"},l.createElement(i.AnchorLink,{to:"#685-\u5197\u4f59\u8fde\u63a5-ii","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"685. \u5197\u4f59\u8fde\u63a5 II"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/redundant-connection-ii/"},"685. \u5197\u4f59\u8fde\u63a5 II"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6\u3001\u56fe",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u6709\u6839\u6811\u6307\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6709\u5411\u56fe\u3002\u8fd4\u56de\u4e00\u6761\u80fd\u5220\u9664\u7684\u8fb9\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u56fe\u662f\u6709 N \u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\u3002\u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u6700\u540e\u51fa\u73b0\u5728\u7ed9\u5b9a\u4e8c\u7ef4\u6570\u7ec4\u7684\u7b54\u6848\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.17"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a92ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/redundant-connection-ii/solution/rong-yu-lian-jie-ii-by-leetcode-solution/"},"\u53c2\u8003\u8fde\u63a5"),"\u3002")),l.createElement(c.Z,{code:"class UnionFind {\n  ancestor: number[];\n  constructor(n: number) {\n    this.ancestor = new Array(n).fill(0).map((_, i) => i);\n  }\n  find(index: number): number {\n    return index === this.ancestor[index]\n      ? index\n      : (this.ancestor[index] = this.find(this.ancestor[index]));\n  }\n  union(u: number, v: number): void {\n    this.ancestor[this.find(u)] = this.find(v);\n  }\n}\nfunction findRedundantDirectedConnection(edges: number[][]): number[] {\n  const nodeCount = edges.length;\n  const uf = new UnionFind(nodeCount + 1);\n  const parent: number[] = new Array(nodeCount + 1).fill(0).map((_, i) => i);\n  let conflict = -1;\n  let cycle = -1;\n  for (let i = 0; i < nodeCount; i++) {\n    const [node1, node2] = edges[i];\n    if (parent[node2] !== node2) {\n      conflict = i;\n    } else {\n      parent[node2] = node1;\n      if (uf.find(node1) === uf.find(node2)) {\n        cycle = i;\n      } else {\n        uf.union(node1, node2);\n      }\n    }\n  }\n  if (conflict < 0) {\n    return [edges[cycle][0], edges[cycle][1]];\n  } else {\n    const [edge1, edge2] = edges[conflict];\n    return cycle >= 0 ? [parent[edge2], edge2] : [edge1, edge2];\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(o,{demos:t})}}}]);