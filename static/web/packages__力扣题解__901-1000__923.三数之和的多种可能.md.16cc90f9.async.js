(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[37143],{76004:function(n,e,t){"use strict";t.r(e);var m=t(96832),l=t(22131),u=t(89730),i=m.memo((n=>{n.demos;return m.createElement(m.Fragment,null,m.createElement("div",{className:"markdown"},m.createElement("h1",{id:"923-\u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd"},m.createElement(l.AnchorLink,{to:"#923-\u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd","aria-hidden":"true",tabIndex:-1},m.createElement("span",{className:"icon icon-link"})),"923. \u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd"),m.createElement("blockquote",null,m.createElement("p",null,"\u94fe\u63a5\uff1a",m.createElement(l.Link,{to:"https://leetcode-cn.com/problems/3sum-with-multiplicity/"},"923. \u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd"),m.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",m.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488\u3001\u8ba1\u6570\u3001\u6392\u5e8f",m.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 \xa0arr\xa0\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 \xa0target\xa0 \u4f5c\u4e3a\u76ee\u6807\u503c\uff0c\u8fd4\u56de\u6ee1\u8db3 i < j < k \u4e14 \xa0arr[i] + arr[j] + arr[k] == target\xa0 \u7684\u5143\u7ec4 \xa0i, j, k\xa0 \u7684\u6570\u91cf\u3002")),m.createElement("h2",{id:"\u9898\u89e3-1---c"},m.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},m.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),m.createElement("ul",null,m.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.07"),m.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a12ms"),m.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a10.6MB"),m.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),m.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5408\u5e76\u91cd\u590d\u5143\u7d20\uff0c\u901a\u8fc7\u53cc\u6307\u9488\u67e5\u627e\u7b2c\u4e09\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002")),m.createElement(u.Z,{code:"class Solution {\n   public:\n    static const int mod = 1e9 + 7;\n    // \u4e09\u4e2a\u6570\u4e00\u6837\u65f6\uff0c \u4ecen\u4e2a\u6570\u4e2d\u6392\u5217\u7ec4\u54083\u4e2a\n    int comp1(int num) { return (1 + num) * num / 2; }\n    // \u4e24\u4e2a\u6570\u4e00\u6837\u65f6\uff0c \u4ecen\u4e2a\u6570\u4e2d\u6392\u5217\u7ec4\u54082\u4e2a\n    int comp2(int num) {\n        int ans = 0;\n        for (int i = 1, n = num; i <= n; i++, num--)\n            ans = (ans + num * i) % mod;\n        return ans;\n    }\n    int threeSumMulti(vector<int> &arr, int target) {\n        map<int, int> m;\n        for (auto &num : arr) m[num]++;\n        vector<int> list;\n        for (auto &item : m) list.push_back(item.first);\n        int ans = 0, n = list.size();\n        for (int i = 0; i < n; i++) {\n            int num1 = list[i];\n            for (int j = i; j < n; j++) {\n                int num2 = list[j], num3 = target - num2 - num1, sum;\n                if (num3 < num2) break;\n                if (num1 == num2 && num1 == num3) {\n                    sum = comp2(m[num1] - 2);\n                } else if (num1 == num2 && num1 != num3) {\n                    sum = comp1(m[num1] - 1) * m[num3];\n                } else if (num1 != num2 && num2 == num3) {\n                    sum = m[num1] * comp1(m[num2] - 1);\n                } else {\n                    sum = m[num1] * m[num2] * m[num3];\n                }\n                ans = (ans + sum) % mod;\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));e["default"]=n=>{var e=m.useContext(l.context),t=e.demos;return m.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),m.createElement(i,{demos:t})}}}]);