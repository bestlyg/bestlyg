(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[44839],{47765:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),r=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"741-\u6458\u6a31\u6843"},l.createElement(c.AnchorLink,{to:"#741-\u6458\u6a31\u6843","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"741. \u6458\u6a31\u6843"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode.cn/problems/cherry-pickup/"},"741. \u6458\u6a31\u6843"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u77e9\u9635",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u4f60\u7684\u4efb\u52a1\u662f\u5728\u9075\u5b88\u4e0b\u5217\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u6458\u5230\u6700\u591a\u6a31\u6843\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.11"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a34.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e24\u4e2a\u4eba\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u8def\u5f84\u4e2d\u5171\u6709\u591a\u5c11\u4e2a\u6a31\u6843,dp[i][j][k]\u8868\u793a\u603b\u5171 i \u6b65\u7684\u65f6\u5019\u7b2c\u4e00\u4e2a\u4eba x \u5728 j \u7b2c\u4e8c\u4e2a\u4eba x \u5728 k,\u6b64\u65f6\u6700\u5927\u7684\u6a31\u6843\u6570\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    int cherryPickup(vector<vector<int>>& grid) {\n        int n = grid.size(), max_step = n * 2 - 1;\n        vector<vector<vector<int>>> dp(\n            max_step, vector<vector<int>>(n, vector<int>(n, INT_MIN)));\n        dp[0][0][0] = grid[0][0];\n        for (int step = 1; step < max_step; step++) {\n            int minCell = max(step - n + 1, 0), maxCell = min(n - 1, step);\n            for (\n                // x1\u6700\u5c11\u8d700\u683c,\u5982\u679cstep\u5df2\u7ecf\u8d85\u8fc7n,\u90a3x1\u6700\u5c11\u4e5f\u5f97n\u683c\n                int x1 = minCell;\n                //  x1\u6700\u591a\u8d70\u5230\u7b2cn-1\u683c\n                x1 <= maxCell; x1++) {\n                int y1 = step - x1;\n                if (grid[x1][y1] == -1) continue;\n                for (int x2 = minCell; x2 <= maxCell; x2++) {\n                    int y2 = step - x2;\n                    if (grid[x2][y2] == -1) continue;\n                    int cnt = dp[step - 1][x1][x2]; // \u90fd\u5411\u53f3\u8d70\u4e00\u6b65\n                    if (x1) cnt = max(cnt, dp[step - 1][x1 - 1][x2]); // x1\u5411\u4e0b\u8d70\u4e00\u6b65\n                    if (x2) cnt = max(cnt, dp[step - 1][x1][x2 - 1]); // x2\u5411\u4e0b\u8d70\u4e00\u6b65\n                    if (x1 && x2) cnt = max(cnt, dp[step - 1][x1 - 1][x2 - 1]); // \u90fd\u5411\u4e0b\u8d70\u4e00\u6b65\n                    cnt += grid[x1][y1];\n                    if (x1 != x2) cnt += grid[x2][y2];\n                    dp[step][x1][x2] = cnt;\n                }\n            }\n        }\n        return max(0, dp[max_step - 1][n - 1][n - 1]);\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);