(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[59906],{19857:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),o=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"968-\u76d1\u63a7\u4e8c\u53c9\u6811"},l.createElement(r.AnchorLink,{to:"#968-\u76d1\u63a7\u4e8c\u53c9\u6811","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"968. \u76d1\u63a7\u4e8c\u53c9\u6811"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/binary-tree-cameras/"},"968. \u76d1\u63a7\u4e8c\u53c9\u6811"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u5728\u6811\u7684\u8282\u70b9\u4e0a\u5b89\u88c5\u6444\u50cf\u5934\u3002\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u6444\u5f71\u5934\u90fd\u53ef\u4ee5\u76d1\u89c6\u5176\u7236\u5bf9\u8c61\u3001\u81ea\u8eab\u53ca\u5176\u76f4\u63a5\u5b50\u5bf9\u8c61\u3002\u8ba1\u7b97\u76d1\u63a7\u6811\u7684\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6444\u50cf\u5934\u6570\u91cf\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.22"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/binary-tree-cameras/solution/jian-kong-er-cha-shu-by-leetcode-solution/"},"\u53c2\u8003\u8fde\u63a5"),"\u3002")),l.createElement(o.Z,{code:"function minCameraCover(root: TreeNode | null): number {\n  return dfs(root)[1];\n  /**\n   * @return\n   * \u72b6\u6001 a\uff1aroot \u5fc5\u987b\u653e\u7f6e\u6444\u50cf\u5934\u7684\u60c5\u51b5\u4e0b\uff0c\u8986\u76d6\u6574\u68f5\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\u3002\n   * \u72b6\u6001 b\uff1a\u8986\u76d6\u6574\u68f5\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\uff0c\u65e0\u8bba root \u662f\u5426\u653e\u7f6e\u6444\u50cf\u5934\u3002\n   * \u72b6\u6001 c\uff1a\u8986\u76d6\u4e24\u68f5\u5b50\u6811\u9700\u8981\u7684\u6444\u50cf\u5934\u6570\u76ee\uff0c\u65e0\u8bba\u8282\u70b9 root \u672c\u8eab\u662f\u5426\u88ab\u76d1\u63a7\u5230\u3002\n   */\n  function dfs(root: TreeNode | null): [number, number, number] {\n    if (root === null) return [Infinity, 0, 0];\n    const [la, lb, lc] = dfs(root.left);\n    const [ra, rb, rc] = dfs(root.right);\n    const a = lc + rc + 1;\n    return [a, Math.min(a, la + rb, ra + lb), Math.min(a, lb + rb)];\n  }\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.04.04"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a140ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a48.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u5b58\u5728\u6444\u50cf\u5934\u548c\u7236\u8282\u70b9\u5b58\u5728\u6444\u50cf\u5934\u7684\u60c5\u51b5\u3002")),l.createElement(o.Z,{code:"/**\n *    dp[0][0] \u7236\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u90fd\u4e0d\u5b58\u5728\u6444\u50cf\u5934\n *    dp[1][0] \u7236\u8282\u70b9\u5b58\u5728\u6444\u50cf\u5934\uff0c\u5f53\u524d\u8282\u70b9\u4e0d\u5b58\u5728\n *    dp[0][1] \u7236\u8282\u70b9\u4e0d\u5b58\u5728\u6444\u50cf\u5934\uff0c\u5f53\u524d\u8282\u70b9\u5b58\u5728\n *    dp[1][1] \u7236\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u90fd\u5b58\u5728\u6444\u50cf\u5934\n */\nfunction minCameraCover(root: TreeNode | null): number {\n  const getArr = (): number[][] => new Array(2).fill(0).map(_ => new Array(2).fill(0));\n  const dp: number[][] = getArr();\n  const dfs = (node: TreeNode | null, dp: number[][]): void => {\n    if (!node) {\n      // \u5982\u679c\u8282\u70b9\u662fnull\n      dp[1][0] = dp[0][0] = 0;\n      dp[0][1] = dp[1][1] = Infinity; // null\u8282\u70b9\u4e0d\u5b58\u5728\u6444\u50cf\u5934\n    } else if (!node.left && !node.right) {\n      // \u5982\u679c\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\n      dp[0][0] = Infinity; // \u4e0d\u5b58\u5728\u6b64\u79cd\u60c5\u51b5\uff0c\u53f6\u5b50\u8282\u70b9\u548c\u7236\u8282\u70b9\u5fc5\u987b\u6709\u4e00\u4e2a\u6709\u6444\u50cf\u5934\n      dp[1][1] = dp[0][1] = 1;\n      dp[1][0] = 0;\n    } else {\n      const left: number[][] = getArr();\n      const right: number[][] = getArr();\n      dfs(node.left, left);\n      dfs(node.right, right);\n      dp[0][0] = Math.min(\n        left[0][1] + right[0][0],\n        left[0][0] + right[0][1],\n        left[0][1] + right[0][1]\n      ); // \u5982\u679c\u7236\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u90fd\u4e0d\u5b58\u5728\u6444\u50cf\u5934\uff0c\u5219\u5b50\u8282\u70b9\u6700\u5c11\u5b58\u5728\u4e00\u4e2a\u6444\u50cf\u5934\n      dp[1][0] = Math.min(left[0][0] + right[0][0], dp[0][0]); // \u5982\u679c\u7236\u8282\u70b9\u5b58\u5728\u6444\u50cf\u5934\uff0c\u5f53\u524d\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5219\u5b50\u8282\u70b9\u53ef\u4ee5\u5b58\u5728\u4efb\u610f\u60c5\u51b5\n      dp[1][1] = dp[0][1] =\n        1 +\n        Math.min(\n          left[1][0] + right[1][0],\n          left[1][1] + right[1][0],\n          left[1][0] + right[1][1],\n          left[1][1] + right[1][1]\n        ); // \u5982\u679c\u7236\u8282\u70b9\u4e0d\u5b58\u5728\u6444\u50cf\u5934\uff0c\u5f53\u524d\u8282\u70b9\u5b58\u5728\uff0c\u5219\u5b50\u8282\u70b9\u53ef\u5b58\u5728\u4efb\u610f\u60c5\u51b5\uff0c\u7531\u4e8e\u5f53\u524d\u8282\u70b9\u5b58\u5728\uff0c\u5219\u9700\u589e1\n    }\n  };\n  dfs(root, dp);\n  return Math.min(dp[0][1], dp[0][0]);\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);