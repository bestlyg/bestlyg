(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[79063],{71592:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"46-\u5168\u6392\u5217"},l.createElement(r.AnchorLink,{to:"#46-\u5168\u6392\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"46. \u5168\u6392\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/permutations/"},"46. \u5168\u6392\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u56de\u6eaf\u7b97\u6cd5",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a \u6ca1\u6709\u91cd\u590d \u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u5176\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---javascript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.4.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a37.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u901a\u8fc7\u9012\u5f52\u5bf9\u6bcf\u5c42\u5224\u65ad\u540e\u538b\u6808\u3002")),l.createElement(c.Z,{code:"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar permute = function (nums) {\n  const len = nums.length;\n  if (len === 1) return [nums];\n  const res = [];\n  for (let i = 0; i < len; i++) {\n    const newNums = permute(nums.filter((_, index) => index !== i));\n    for (const newNum of newNums) res.push([nums[i]].concat(newNum));\n  }\n  return res;\n};",lang:"javascript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.21"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a88ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5168\u6392\u5217\u3002")),l.createElement(c.Z,{code:"function permute(nums: number[]): number[][] {\n  const ans: number[][] = [];\n  find();\n  return ans;\n  function find(list = nums, queue: number[] = []): void {\n    if (list.length === 0) {\n      ans.push(queue.slice());\n      return;\n    }\n    for (let i = 0, l = list.length; i < l; i++) {\n      queue.push(list[i]);\n      find([...list.slice(0, i), ...list.slice(i + 1)], queue);\n      queue.pop();\n    }\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);