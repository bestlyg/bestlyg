(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[5452],{14791:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"565-\u6570\u7ec4\u5d4c\u5957"},l.createElement(r.AnchorLink,{to:"#565-\u6570\u7ec4\u5d4c\u5957","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"565. \u6570\u7ec4\u5d4c\u5957"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode.cn/problems/array-nesting/"},"565. \u6570\u7ec4\u5d4c\u5957"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u957f\u5ea6\u4e3a N \u7684\u6570\u7ec4 A\uff0c\u5305\u542b 0 \u5230 N - 1 \u7684\u6240\u6709\u6574\u6570\u3002\u627e\u5230\u6700\u5927\u7684\u96c6\u5408 S \u5e76\u8fd4\u56de\u5176\u5927\u5c0f\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.07.17"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a364ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a167.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\uff0c\u8bb0\u5f55\u73af\u5927\u5c0f\u3002")),l.createElement(i.Z,{code:"class Solution {\n   public:\n    int arrayNesting(vector<int> &nums) {\n        int ans = 0, n = nums.size();\n        vector<int> m(n, -1);\n        for (int i = 0; i < n; i++) {\n            if (m[i] != -1) continue;\n            unordered_set<int> s;\n            int res = dfs(nums, m, s, i);\n            ans = max(ans, res);\n            for (auto &idx : s) m[idx] = res;\n        }\n        return ans;\n    }\n    int dfs(vector<int> &nums, vector<int> &m, unordered_set<int> &s, int idx) {\n        if (m[idx] != -1) return m[idx];\n        if (s.count(idx)) return 0;\n        s.insert(idx);\n        return dfs(nums, m, s, nums[idx]) + 1;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);