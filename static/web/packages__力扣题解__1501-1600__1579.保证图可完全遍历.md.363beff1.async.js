(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[25427],{14233:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),s=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1579-\u4fdd\u8bc1\u56fe\u53ef\u5b8c\u5168\u904d\u5386"},l.createElement(i.AnchorLink,{to:"#1579-\u4fdd\u8bc1\u56fe\u53ef\u5b8c\u5168\u904d\u5386","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1579. \u4fdd\u8bc1\u56fe\u53ef\u5b8c\u5168\u904d\u5386"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable/"},"1579. \u4fdd\u8bc1\u56fe\u53ef\u5b8c\u5168\u904d\u5386"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5e76\u67e5\u96c6",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 edges \uff0c\u5176\u4e2d edges[i] = [typei, ui, vi]\xa0 \u8868\u793a\u8282\u70b9 ui \u548c vi \u4e4b\u95f4\u5b58\u5728\u7c7b\u578b\u4e3a typei \u7684\u53cc\u5411\u8fb9\u3002\u8bf7\u4f60\u5728\u4fdd\u8bc1\u56fe\u4ecd\u80fd\u591f\u88ab Alice \u548c Bob \u5b8c\u5168\u904d\u5386\u7684\u524d\u63d0\u4e0b\uff0c\u627e\u51fa\u53ef\u4ee5\u5220\u9664\u7684\u6700\u5927\u8fb9\u6570\u3002\u5982\u679c\u4ece\u4efb\u4f55\u8282\u70b9\u5f00\u59cb\uff0cAlice \u548c Bob \u90fd\u53ef\u4ee5\u5230\u8fbe\u6240\u6709\u5176\u4ed6\u8282\u70b9\uff0c\u5219\u8ba4\u4e3a\u56fe\u662f\u53ef\u4ee5\u5b8c\u5168\u904d\u5386\u7684\u3002\u8fd4\u56de\u53ef\u4ee5\u5220\u9664\u7684\u6700\u5927\u8fb9\u6570\uff0c\u5982\u679c Alice \u548c Bob \u65e0\u6cd5\u5b8c\u5168\u904d\u5386\u56fe\uff0c\u5219\u8fd4\u56de -1 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.1.27"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a312ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a70.6MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),l.createElement(s.Z,{code:"class UnionFind {\n  elements: number[];\n  constructor(public size: number) {\n    this.elements = new Array(size).fill(0).map((_, i) => i);\n  }\n  same(v1: number, v2: number): boolean {\n    return this.find(v1) === this.find(v2);\n  }\n  find(v: number): number {\n    return v === this.elements[v] ? v : (this.elements[v] = this.find(this.elements[v]));\n  }\n  union(v1: number, v2: number): void {\n    const e1 = this.find(v1);\n    const e2 = this.find(v2);\n    if (e1 !== e2) {\n      this.elements[e1] = e2;\n      this.size--;\n    }\n  }\n}\nfunction maxNumEdgesToRemove(n: number, edges: number[][]): number {\n  let ans = 0;\n  const uf1 = new UnionFind(n);\n  const uf2 = new UnionFind(n);\n  edges.sort(([type1], [type2]) => (type1 === 3 ? -1 : 0));\n  for (let [type, u, v] of edges) {\n    u--;\n    v--;\n    if (type === 1) {\n      if (uf1.same(u, v)) ans++;\n      else uf1.union(u, v);\n    } else if (type === 2) {\n      if (uf2.same(u, v)) ans++;\n      else uf2.union(u, v);\n    } else {\n      if (uf1.same(u, v) && uf2.same(u, v)) ans++;\n      uf1.union(u, v);\n      uf2.union(u, v);\n    }\n  }\n  if (uf1.size !== 1 || uf2.size !== 1) return -1;\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);