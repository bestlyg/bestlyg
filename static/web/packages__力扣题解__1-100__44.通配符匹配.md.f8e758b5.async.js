(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[32574],{98283:function(e,n,t){"use strict";t.r(n);var l=t(96832),c=t(22131),r=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"44-\u901a\u914d\u7b26\u5339\u914d"},l.createElement(c.AnchorLink,{to:"#44-\u901a\u914d\u7b26\u5339\u914d","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"44. \u901a\u914d\u7b26\u5339\u914d"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode-cn.com/problems/wildcard-matching/"},"44. \u901a\u914d\u7b26\u5339\u914d"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u7b97\u6cd5",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 (s) \u548c\u4e00\u4e2a\u5b57\u7b26\u6a21\u5f0f (p) \uff0c\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301 '?' \u548c '*' \u7684\u901a\u914d\u7b26\u5339\u914d\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.7.5"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a172ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a49.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5982\u679c\u662f?\u6216\u8005\u5b57\u6bcd\uff0c\u5219\u5339\u914d\u524d\u4e00\u4e2a\uff0c\u5982\u679c\u662f*\u5219\u5224\u65ad\u524d\u4e00\u4e2a\u662f\u5426\u80fd\u5339\u914d\u3002")),l.createElement(r.Z,{code:"function isMatch(s: string, p: string): boolean {\n  const sLen = s.length;\n  const pLen = p.length;\n  const dp = new Array(sLen + 1).fill(0).map(_ => new Array(pLen + 1).fill(false));\n  dp[0][0] = true;\n  for (let i = 1; i <= pLen; i++) {\n    dp[0][i] = p[i - 1] === '*' && dp[0][i - 1];\n  }\n  for (let i = 1; i <= sLen; i++) {\n    for (let j = 1; j <= pLen; j++) {\n      const cP = p[j - 1];\n      if (cP === '?' || s[i - 1] === cP) {\n        dp[i][j] = dp[i - 1][j - 1];\n      } else if (cP === '*' && (dp[i - 1][j] || dp[i][j - 1])) {\n        dp[i][j] = true;\n      }\n    }\n  }\n  return dp[sLen][pLen];\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(c.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);