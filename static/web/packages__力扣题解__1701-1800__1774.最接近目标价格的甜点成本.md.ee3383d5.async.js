(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[29394],{96843:function(e,t,n){"use strict";n.r(t);var l=n(96832),c=n(22131),s=n(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1774-\u6700\u63a5\u8fd1\u76ee\u6807\u4ef7\u683c\u7684\u751c\u70b9\u6210\u672c"},l.createElement(c.AnchorLink,{to:"#1774-\u6700\u63a5\u8fd1\u76ee\u6807\u4ef7\u683c\u7684\u751c\u70b9\u6210\u672c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1774. \u6700\u63a5\u8fd1\u76ee\u6807\u4ef7\u683c\u7684\u751c\u70b9\u6210\u672c"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(c.Link,{to:"https://leetcode.cn/problems/closest-dessert-cost"},"1774. \u6700\u63a5\u8fd1\u76ee\u6807\u4ef7\u683c\u7684\u751c\u70b9\u6210\u672c"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u6700\u63a5\u8fd1 target \u7684\u751c\u70b9\u6210\u672c\u3002\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8fd4\u56de \u6210\u672c\u76f8\u5bf9\u8f83\u4f4e \u7684\u4e00\u79cd\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(c.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.12.04"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a76ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a9.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),l.createElement(s.Z,{code:"class Solution {\npublic:\n    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {\n        int ans = baseCosts[0], n = toppingCosts.size();\n        function<void(int, int)> dfs = [&](int cur, int idx) {\n            if (abs(cur - target) < abs(ans - target) || abs(cur - target) == abs(ans - target) && cur < ans) ans = cur;\n            if (idx == n) return;\n            dfs(cur, idx + 1);\n            dfs(cur + toppingCosts[idx], idx + 1);\n            dfs(cur + toppingCosts[idx] * 2, idx + 1);\n        };\n        for (auto &cost : baseCosts) dfs(cost, 0);\n        return ans;\n    }\n};",lang:"cpp"})))}));t["default"]=e=>{var t=l.useContext(c.context),n=t.demos;return l.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:n})}}}]);