(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[2574],{60460:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),s=t(89730),i=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"641-\u8bbe\u8ba1\u5faa\u73af\u53cc\u7aef\u961f\u5217"},l.createElement(r.AnchorLink,{to:"#641-\u8bbe\u8ba1\u5faa\u73af\u53cc\u7aef\u961f\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"641. \u8bbe\u8ba1\u5faa\u73af\u53cc\u7aef\u961f\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/design-circular-deque/"},"641. \u8bbe\u8ba1\u5faa\u73af\u53cc\u7aef\u961f\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8bbe\u8ba1\u3001\u961f\u5217",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bbe\u8ba1\u5b9e\u73b0\u53cc\u7aef\u961f\u5217\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.3.14"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a160ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a46.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6839\u636e\u9898 622 \u5b8c\u5584\u3002")),l.createElement(s.Z,{code:"class MyCircularDeque {\n  private arr: number[];\n  private head = 0;\n  private rear = 0;\n  private count = 0;\n  constructor(private k: number) {\n    this.arr = new Array(k);\n  }\n  isEmpty(): boolean {\n    return this.count === 0;\n  }\n  isFull(): boolean {\n    return this.count === this.k;\n  }\n  insertFront(value: number): boolean {\n    if (this.isFull()) return false;\n    this.head = this.head === 0 ? this.k - 1 : this.head - 1;\n    this.arr[this.head] = value;\n    this.count++;\n    return true;\n  }\n  insertLast(value: number): boolean {\n    if (this.isFull()) return false;\n    this.arr[this.rear] = value;\n    this.rear = (this.rear + 1) % this.k;\n    this.count++;\n    return true;\n  }\n  deleteFront(): boolean {\n    if (this.isEmpty()) return false;\n    this.head = (this.head + 1) % this.k;\n    this.count--;\n    return true;\n  }\n  deleteLast(): boolean {\n    if (this.isEmpty()) return false;\n    this.rear = this.rear === 0 ? this.k - 1 : this.rear - 1;\n    this.count--;\n    return true;\n  }\n  getFront(): number {\n    if (this.isEmpty()) return -1;\n    return this.arr[this.head];\n  }\n\n  getRear(): number {\n    if (this.isEmpty()) return -1;\n    return this.arr[this.rear === 0 ? this.k - 1 : this.rear - 1];\n  }\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---c"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.03"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a20ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a16.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u53cc\u6307\u9488\u3002")),l.createElement(s.Z,{code:"class MyCircularDeque {\n   public:\n    int head, tail, *list, n;\n    MyCircularDeque(int k) : head(0), tail(0), n(k + 1) {\n        list = ((int *)malloc(sizeof(int) * n));\n    }\n    ~MyCircularDeque() { free(list); }\n\n    bool insertLast(int value) {\n        if (isFull()) return 0;\n        list[tail] = value;\n        tail = (tail + 1) % n;\n        return 1;\n    }\n    bool insertFront(int value) {\n        if (isFull()) return 0;\n        head = head == 0 ? n - 1 : head - 1;\n        list[head] = value;\n        return 1;\n    }\n    bool deleteLast() {\n        if (isEmpty()) return 0;\n        tail = tail == 0 ? n - 1 : tail - 1;\n        return 1;\n    }\n    bool deleteFront() {\n        if (isEmpty()) return 0;\n        head = (head + 1) % n;\n        return 1;\n    }\n    int getFront() {\n        if (isEmpty()) return -1;\n        return list[head];\n    }\n    int getRear() {\n        if (isEmpty()) return -1;\n        return list[tail == 0 ? n - 1 : tail - 1];\n    }\n    bool isEmpty() { return head == tail; }\n    bool isFull() { return (tail + 1) % n == head; }\n};",lang:"cpp"}),l.createElement("h2",{id:"\u9898\u89e3-3---rust"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-3---rust","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - rust"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.15"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5faa\u73af\u961f\u5217\u3002")),l.createElement(s.Z,{code:"struct MyCircularDeque {\n    list: Vec<i32>,\n    first: usize,\n    last: usize,\n    len: usize,\n}\nimpl MyCircularDeque {\n    fn new(k: i32) -> Self {\n        let len = (k + 1) as usize;\n        let mut list = Vec::with_capacity(len);\n        for _ in 0..len {\n            list.push(0);\n        }\n        MyCircularDeque {\n            list,\n            first: 0,\n            last: 0,\n            len,\n        }\n    }\n    fn insert_front(&mut self, value: i32) -> bool {\n        if self.is_full() {\n            false\n        } else {\n            self.first = self.get_prev(self.first);\n            self.list[self.first] = value;\n            true\n        }\n    }\n    fn insert_last(&mut self, value: i32) -> bool {\n        if self.is_full() {\n            false\n        } else {\n            self.list[self.last] = value;\n            self.last = self.get_next(self.last);\n            true\n        }\n    }\n    fn delete_front(&mut self) -> bool {\n        if self.is_empty() {\n            false\n        } else {\n            self.first = self.get_next(self.first);\n            true\n        }\n    }\n    fn delete_last(&mut self) -> bool {\n        if self.is_empty() {\n            false\n        } else {\n            self.last = self.get_prev(self.last);\n            true\n        }\n    }\n    fn get_front(&self) -> i32 {\n        if self.is_empty() {\n            -1\n        } else {\n            self.list[self.first]\n        }\n    }\n    fn get_rear(&self) -> i32 {\n        if self.is_empty() {\n            -1\n        } else {\n            self.list[self.get_prev(self.last)]\n        }\n    }\n    fn is_empty(&self) -> bool {\n        self.first == self.last\n    }\n    fn is_full(&self) -> bool {\n        self.get_next(self.last) == self.first\n    }\n    fn get_prev(&self, cur: usize) -> usize {\n        if cur == 0 {\n            self.len - 1\n        } else {\n            cur - 1\n        }\n    }\n    fn get_next(&self, cur: usize) -> usize {\n        (cur + 1) % self.len\n    }\n}",lang:"rust"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(i,{demos:t})}}}]);