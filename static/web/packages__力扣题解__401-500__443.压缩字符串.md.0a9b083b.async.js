(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[66374],{53520:function(e,n,t){"use strict";t.r(n);var c=t(96832),l=t(22131),r=t(89730),o=c.memo((e=>{e.demos;return c.createElement(c.Fragment,null,c.createElement("div",{className:"markdown"},c.createElement("h1",{id:"443-\u538b\u7f29\u5b57\u7b26\u4e32"},c.createElement(l.AnchorLink,{to:"#443-\u538b\u7f29\u5b57\u7b26\u4e32","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"443. \u538b\u7f29\u5b57\u7b26\u4e32"),c.createElement("blockquote",null,c.createElement("p",null,"\u94fe\u63a5\uff1a",c.createElement(l.Link,{to:"https://leetcode-cn.com/problems/string-compression/"},"443. \u538b\u7f29\u5b57\u7b26\u4e32"),c.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",c.createElement("br",null),"\u6807\u7b7e\uff1a\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32",c.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 chars \uff0c\u8bf7\u5728 \u4fee\u6539\u5b8c\u8f93\u5165\u6570\u7ec4\u540e \uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002")),c.createElement("h2",{id:"\u9898\u89e3-1---typescript"},c.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),c.createElement("ul",null,c.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.08.21"),c.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),c.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.2MB"),c.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),c.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u53cc\u6307\u9488\u3002")),c.createElement(r.Z,{code:"function compress(chars: string[]): number {\n  let pos = 0;\n  const n = chars.length;\n  for (let i = 0; i < n; ) {\n    const c = chars[i];\n    let count = 1;\n    while (i + count < n && chars[i + count] === c) count++;\n    i += count;\n    chars[pos++] = c;\n    if (count > 1) {\n      let countStr = '';\n      while (count) {\n        countStr = (count % 10) + countStr;\n        count = ~~(count / 10);\n      }\n      for (const c of countStr) chars[pos++] = c;\n    }\n  }\n  return pos;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=c.useContext(l.context),t=n.demos;return c.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),c.createElement(o,{demos:t})}}}]);