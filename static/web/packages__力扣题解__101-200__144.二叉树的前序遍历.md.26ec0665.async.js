(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[20279],{17978:function(e,t,n){"use strict";n.r(t);var r=n(96832),l=n(22131),a=n(89730),o=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"144-\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"},r.createElement(l.AnchorLink,{to:"#144-\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/"},"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u6811",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5b83\u7684\u524d\u5e8f\u904d\u5386\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---java"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---java","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - java"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a37.8MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u3002")),r.createElement(a.Z,{code:"class Solution {\n\tpublic List<Integer> preorderTraversal(TreeNode root) {\n\t\tList<Integer> list = new LinkedList<Integer>();\n\t\tif (root == null)\n\t\t\treturn list;\n\t\tpreorder(root, list);\n\t\treturn list;\n\t}\n\n\tpublic void preorder(TreeNode node, List<Integer> list) {\n\t\tlist.add(node.val);\n\t\tif (node.left != null)\n\t\t\tpreorder(node.left,list);\n\t\tif (node.right != null)\n\t\t\tpreorder(node.right,list);\n\t}\n}",lang:"java"}),r.createElement("h2",{id:"\u9898\u89e3-2---java"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-2---java","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - java"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.2.21"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a1ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a38.2MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajava"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8fed\u4ee3\u3002")),r.createElement(a.Z,{code:"class Solution {\n\tpublic List<Integer> preorderTraversal(TreeNode root) {\n\t\tList<Integer> list = new LinkedList<Integer>();\n\t\tif (root == null)\n\t\t\treturn list;\n\t\tStack<TreeNode> stack = new Stack<TreeNode>();\n\t\tstack.push(root);\n\t\twhile (!stack.isEmpty()) {\n\t\t\tTreeNode node = stack.pop();\n\t\t\tlist.add(node.val);\n\t\t\tif(node.right!=null)stack.push(node.right);\n\t\t\tif(node.left!=null)stack.push(node.left);\n\t\t}\n\t\treturn list;\n\t}\n}",lang:"java"}),r.createElement("h2",{id:"\u9898\u89e3-3---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-3---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 3 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.10.27"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a84ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.2MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u3002")),r.createElement(a.Z,{code:"function preorderTraversal(root: TreeNode | null): number[] {\n  const ans: number[] = [];\n  preorder(root);\n  return ans;\n  function preorder(root: TreeNode | null) {\n    if (root === null) return;\n    ans.push(root.val);\n    preorder(root.left);\n    preorder(root.right);\n  }\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-4---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-4---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 4 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.10.27"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.3mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u8fed\u4ee3\u3002")),r.createElement(a.Z,{code:"function preorderTraversal(root: TreeNode | null): number[] {\n  const ans: number[] = [];\n  if (root === null) return ans;\n  const stack: TreeNode[] = [root];\n  while (stack.length !== 0) {\n    const node = stack.pop()!;\n    ans.push(node.val);\n    node.right && stack.push(node.right);\n    node.left && stack.push(node.left);\n  }\n  return ans;\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-5---c"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-5---c","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 5 - c"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.27"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a5.7mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u9012\u5f52\u3002")),r.createElement(a.Z,{code:"// \u5148\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\uff0c\u518d\u9012\u5f52\u5de6\uff0c\u518d\u9012\u5f52\u53f3\nvoid preorder(struct TreeNode *root, int *arr, int *idx){\n    if (!root) return ;\n    arr[(*idx)++] = root->val;\n    preorder(root->left, arr, idx);\n    preorder(root->right, arr, idx);\n}\nint* preorderTraversal(struct TreeNode* root, int* returnSize){\n    int *arr = (int *)malloc(sizeof(int) * 100);\n    *returnSize = 0;\n    preorder(root, arr, returnSize);\n    return arr;\n}",lang:"c"})))}));t["default"]=e=>{var t=r.useContext(l.context),n=t.demos;return r.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(o,{demos:n})}}}]);