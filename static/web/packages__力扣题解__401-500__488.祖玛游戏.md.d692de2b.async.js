(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[51096],{89662:function(n,e,t){"use strict";t.r(e);var r=t(96832),l=t(22131),a=t(89730),c=r.memo((n=>{n.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"488-\u7956\u739b\u6e38\u620f"},r.createElement(l.AnchorLink,{to:"#488-\u7956\u739b\u6e38\u620f","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"488. \u7956\u739b\u6e38\u620f"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/zuma-game/"},"488. \u7956\u739b\u6e38\u620f"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u56de\u6eaf",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 board \uff0c\u8868\u793a\u684c\u9762\u4e0a\u6700\u5f00\u59cb\u7684\u90a3\u6392\u7403\u3002\u53e6\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 hand \uff0c\u8868\u793a\u624b\u91cc\u7684\u5f69\u7403\u3002\u8bf7\u4f60\u6309\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u79fb\u9664\u6389\u684c\u4e0a\u6240\u6709\u7403\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de\u6240\u9700\u7684 \u6700\u5c11 \u7403\u6570\u3002\u5982\u679c\u4e0d\u80fd\u79fb\u9664\u684c\u4e0a\u6240\u6709\u7684\u7403\uff0c\u8fd4\u56de -1 \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.09"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a800ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a64.7MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(a.Z,{code:"function format(board: string): string {\n  let flag = false;\n  let n = board.length;\n  do {\n    flag = false;\n    for (let i = 0; i < n - 1; i++) {\n      const ball = board[i];\n      let end = i;\n      let cnt = 1;\n      while (end < n - 1 && ball === board[end + 1]) {\n        end++;\n        cnt++;\n      }\n      if (cnt < 3) {\n        i = end;\n        continue;\n      }\n      board = board.substring(0, i) + board.substring(end + 1);\n      n = board.length;\n      flag = true;\n    }\n  } while (flag);\n  return board;\n}\nfunction findMinStep(board: string, hand: string): number {\n  const cache: Record<string, number> = {};\n  const map: Record<string, number> = { R: 0, Y: 0, B: 0, G: 0, W: 0 };\n  for (const ball of hand) map[ball]++;\n  return dfs(board, 0, map);\n  function dfs(board: string, cnt: number, map: Record<string, number>): number {\n    if (cache[board]) return cache[board];\n    if (board === '') return cnt;\n    const n = board.length;\n    const list = Object.entries(map)\n      .filter(([, v]) => v > 0)\n      .map(([k]) => k);\n    let ans = Infinity;\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < list.length; j++) {\n        const ball = list[j];\n        map[ball]--;\n        const nextBoard = board.substring(0, i) + ball + board.substring(i);\n        const res = dfs(format(nextBoard), cnt + 1, map);\n        if (res !== -1) ans = Math.min(ans, res);\n        map[ball]++;\n      }\n    }\n    return (cache[board] = ans === Infinity ? -1 : ans);\n  }\n}",lang:"typescript"})))}));e["default"]=n=>{var e=r.useContext(l.context),t=e.demos;return r.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);