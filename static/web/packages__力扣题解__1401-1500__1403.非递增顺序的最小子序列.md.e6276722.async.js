(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[41140],{98183:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),u=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1403-\u975e\u9012\u589e\u987a\u5e8f\u7684\u6700\u5c0f\u5b50\u5e8f\u5217"},l.createElement(r.AnchorLink,{to:"#1403-\u975e\u9012\u589e\u987a\u5e8f\u7684\u6700\u5c0f\u5b50\u5e8f\u5217","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1403. \u975e\u9012\u589e\u987a\u5e8f\u7684\u6700\u5c0f\u5b50\u5e8f\u5217"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode.cn/problems/minimum-subsequence-in-non-increasing-order/"},"1403. \u975e\u9012\u589e\u987a\u5e8f\u7684\u6700\u5c0f\u5b50\u5e8f\u5217"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u548c \u4e25\u683c \u5927\u4e8e\u672a\u5305\u542b\u5728\u8be5\u5b50\u5e8f\u5217\u4e2d\u7684\u5404\u5143\u7d20\u4e4b\u548c\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---rust"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---rust","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - rust"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.08.04"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a2.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1arust"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6392\u5e8f\u540e\uff0c\u4ece\u540e\u5f80\u524d\u53d6\u503c\u3002")),l.createElement(u.Z,{code:"impl Solution {\n    pub fn min_subsequence(nums: Vec<i32>) -> Vec<i32> {\n        let mut nums = nums;\n        nums.sort();\n        let sum: i32 = nums.iter().sum();\n        let mut cur = 0;\n        let mut i = nums.len() - 1;\n        let mut ans = Vec::new();\n        while cur * 2 <= sum {\n            cur += nums[i];\n            ans.push(nums[i]);\n            i -= 1;\n        }\n        ans\n    }\n}",lang:"rust"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);