(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[78575],{29577:function(n,i,e){"use strict";e.r(i);var t=e(96832),o=e(22131),d=e(89730),r=t.memo((n=>{n.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"959-\u7531\u659c\u6760\u5212\u5206\u533a\u57df"},t.createElement(o.AnchorLink,{to:"#959-\u7531\u659c\u6760\u5212\u5206\u533a\u57df","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"959. \u7531\u659c\u6760\u5212\u5206\u533a\u57df"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(o.Link,{to:"https://leetcode-cn.com/problems/regions-cut-by-slashes/"},"959. \u7531\u659c\u6760\u5212\u5206\u533a\u57df"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6\u3001\u56fe",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u5728\u7531 1 x 1 \u65b9\u683c\u7ec4\u6210\u7684 N x N \u7f51\u683c grid \u4e2d\uff0c\u6bcf\u4e2a 1 x 1 \u65b9\u5757\u7531 /\u3001\\ \u6216\u7a7a\u683c\u6784\u6210\u3002\u8fd9\u4e9b\u5b57\u7b26\u4f1a\u5c06\u65b9\u5757\u5212\u5206\u4e3a\u4e00\u4e9b\u5171\u8fb9\u7684\u533a\u57df\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---c"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.04"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.6MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),t.createElement(d.Z,{code:"typedef struct unionfind\n{\n    int *father, len, size;\n} UnionFind;\nUnionFind *unionfind_create(int len)\n{\n    UnionFind *uf = (UnionFind *)malloc(sizeof(UnionFind));\n    uf->size = uf->len = len;\n    uf->father = (int *)malloc(sizeof(int) * len);\n    for (int i = 0; i < len; i++)\n        uf->father[i] = i;\n    return uf;\n}\nvoid unionfind_free(UnionFind *uf)\n{\n    free(uf->father);\n    free(uf);\n}\nint unionfind_find(UnionFind *uf, int data)\n{\n    return uf->father[data] = uf->father[data] == data ? data : unionfind_find(uf, uf->father[data]);\n}\nvoid unionfind_union(UnionFind *uf, int data1, int data2)\n{\n    int p1 = unionfind_find(uf, data1), p2 = unionfind_find(uf, data2);\n    if (p1 == p2) return ;\n    uf->size--;\n    uf->father[p1] = p2;\n}\n#define BLOCK 4\nint get_idx(int row, int col, int n) {\n    return row * n * BLOCK + col * BLOCK;\n}\nint regionsBySlashes(char ** grid, int gridSize){\n    UnionFind *uf = unionfind_create(gridSize * gridSize * BLOCK);\n    for (int row = 0; row < gridSize; row++) {\n        for (int col = 0; col < gridSize; col++) {\n            char ch = grid[row][col];\n            int idx1 = get_idx(row, col, gridSize), idx2 = idx1 + 1, idx3 = idx1 + 2, idx4 = idx1 + 3;\n            if (ch == ' ') {\n                unionfind_union(uf, idx1, idx2);\n                unionfind_union(uf, idx1, idx3);\n                unionfind_union(uf, idx1, idx4);\n            } else if (ch == '/') {\n                unionfind_union(uf, idx1, idx2);\n                unionfind_union(uf, idx3, idx4);\n            } else {\n                unionfind_union(uf, idx1, idx4);\n                unionfind_union(uf, idx2, idx3);\n            }\n            //if (row > 0) unionfind_union(uf, idx1, get_idx(row - 1, col, gridSize) + 2);\n            //if (col > 0) unionfind_union(uf, idx2, get_idx(row, col - 1, gridSize) + 3);\n            if (col < gridSize - 1) unionfind_union(uf, idx4, get_idx(row, col + 1, gridSize) + 1);\n            if (row < gridSize - 1) unionfind_union(uf, idx3, get_idx(row + 1, col, gridSize));\n        }\n    }\n    return uf->size;\n}",lang:"c"})))}));i["default"]=n=>{var i=t.useContext(o.context),e=i.demos;return t.useEffect((()=>{var i;null!==n&&void 0!==n&&null!==(i=n.location)&&void 0!==i&&i.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),t.createElement(r,{demos:e})}}}]);