(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[35330],{2066:function(e,n,t){"use strict";t.r(n);var r=t(96832),i=t(22131),l=t(89730),a=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1409-\u67e5\u8be2\u5e26\u952e\u7684\u6392\u5217"},r.createElement(i.AnchorLink,{to:"#1409-\u67e5\u8be2\u5e26\u952e\u7684\u6392\u5217","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1409. \u67e5\u8be2\u5e26\u952e\u7684\u6392\u5217"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(i.Link,{to:"https://leetcode-cn.com/problems/queries-on-a-permutation-with-key/"},"1409. \u67e5\u8be2\u5e26\u952e\u7684\u6392\u5217"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6811\u72b6\u6570\u7ec4\u3001\u6570\u7ec4\u3001\u6a21\u62df",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5f85\u67e5\u6570\u7ec4 queries \uff0c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e3a 1 \u5230 m \u4e4b\u95f4\u7684\u6b63\u6574\u6570\u3002 \u8bf7\u4f60\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u5f85\u67e5\u6570\u7ec4 queries \u7684\u67e5\u8be2\u7ed3\u679c\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.14"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a92ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.3MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u94fe\u8868\u3002")),r.createElement(l.Z,{code:"class Data {\n  next: Data | null;\n  idx: number;\n  val: number = -1;\n}\nfunction processQueries(queries: number[], m: number): number[] {\n  const root = new Data();\n  let p = root;\n  for (let i = 1; i <= m; i++) {\n    const item = new Data();\n    item.idx = i - 1;\n    item.val = i;\n    p.next = item;\n    p = item;\n  }\n  const ans: number[] = [];\n  for (const query of queries) {\n    p = root;\n    while (p.next!.val !== query) {\n      p = p.next!;\n      p.idx++;\n    }\n    const node = p.next!;\n    p.next = node.next;\n    node.next = root.next;\n    root.next = node;\n    ans.push(node.idx);\n    node.idx = 0;\n  }\n  return ans;\n}",lang:"typescript"}),r.createElement("h2",{id:"\u9898\u89e3-2---typescript"},r.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.11.14"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a96ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a40.3mb"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6811\u72b6\u6570\u7ec4\u3002")),r.createElement(l.Z,{code:"class FenwickTree {\n  arr: number[];\n  constructor(private n: number) {\n    this.arr = new Array(n + 1).fill(0);\n  }\n  add(idx: number, num: number): void {\n    while (idx <= this.n) {\n      this.arr[idx] += num;\n      idx += this.lowbit(idx);\n    }\n  }\n  at(idx: number): number {\n    return this.query(idx) - this.query(idx - 1);\n  }\n  query(idx: number): number {\n    let sum = 0;\n    while (idx) {\n      sum += this.arr[idx];\n      idx -= this.lowbit(idx);\n    }\n    return sum;\n  }\n  private lowbit(num: number) {\n    return num & -num;\n  }\n}\nfunction processQueries(queries: number[], m: number): number[] {\n  const n = queries.length;\n  const tree = new FenwickTree(n + m);\n  const idxList = new Array(m + 1).fill(0).map((_, i) => n + i);\n  const ans: number[] = [];\n  for (let i = 1; i <= m; i++) tree.add(i + n, 1);\n  for (let i = 0; i < n; i++) {\n    const query = queries[i];\n    const idx = idxList[query];\n    const cnt = tree.query(idx);\n    ans.push(cnt - 1);\n    tree.add(idx, -1);\n    tree.add(n - i, 1);\n    idxList[query] = n - i;\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(i.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(a,{demos:t})}}}]);