(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[50478],{979:function(e,n,t){"use strict";t.r(n);var r=t(96832),o=t(22131),l=t(89730),i=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"675-\u4e3a\u9ad8\u5c14\u592b\u6bd4\u8d5b\u780d\u6811"},r.createElement(o.AnchorLink,{to:"#675-\u4e3a\u9ad8\u5c14\u592b\u6bd4\u8d5b\u780d\u6811","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"675. \u4e3a\u9ad8\u5c14\u592b\u6bd4\u8d5b\u780d\u6811"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(o.Link,{to:"https://leetcode.cn/problems/cut-off-trees-for-golf-event/"},"675. \u4e3a\u9ad8\u5c14\u592b\u6bd4\u8d5b\u780d\u6811"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5806(\u4f18\u5148\u961f\u5217)",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u4f60\u5c06\u4ece (0, 0) \u70b9\u5f00\u59cb\u5de5\u4f5c\uff0c\u8fd4\u56de\u4f60\u780d\u5b8c\u6240\u6709\u6811\u9700\u8981\u8d70\u7684\u6700\u5c0f\u6b65\u6570\u3002 \u5982\u679c\u4f60\u65e0\u6cd5\u780d\u5b8c\u6240\u6709\u7684\u6811\uff0c\u8fd4\u56de -1 \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---cpp"},r.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.23"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a760ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a97.5MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1abfs, \u6bcf\u6b21\u4ece\u5f53\u524d\u503c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u76ee\u6807\u3002")),r.createElement(l.Z,{code:"int dirs[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nclass Solution {\n   public:\n    typedef pair<int, int> node;\n    int rowLen, colLen;\n    int cutOffTree(vector<vector<int>>& forest) {\n        rowLen = forest.size(), colLen = forest[0].size();\n        vector<int> list;\n        for (int row = 0; row < rowLen; row++) {\n            for (int col = 0; col < colLen; col++) {\n                if (forest[row][col] > 1) list.emplace_back(forest[row][col]);\n            }\n        }\n        sort(list.begin(), list.end(),\n             [&](int a, int b) -> bool { return a < b; });\n        int ans = 0;\n        node prev = make_pair(0, 0);\n        for (int i = 0; i < list.size(); i++) {\n            int step = findNext(forest, prev, list[i]);\n            if (step == -1) return -1;\n            ans += step;\n        }\n        return ans;\n    }\n    int findNext(vector<vector<int>>& forest, node& start, int target) {\n        int step = 0, size = 1;\n        queue<node> q;\n        vector<vector<bool>> used(rowLen, vector(colLen, false));\n        used[start.first][start.second] = true;\n        q.push(start);\n        while (q.size()) {\n            node item = q.front();\n            q.pop();\n            if (forest[item.first][item.second] == target) {\n                start.first = item.first;\n                start.second = item.second;\n                return step;\n            }\n            for (int i = 0; i < 4; i++) {\n                int nrow = item.first + dirs[i][0],\n                    ncol = item.second + dirs[i][1];\n                if (nrow < 0 || nrow == rowLen || ncol < 0 || ncol == colLen ||\n                    forest[nrow][ncol] == 0 || used[nrow][ncol])\n                    continue;\n                q.push(make_pair(nrow, ncol));\n                used[nrow][ncol] = true;\n            }\n            if (--size == 0) {\n                size = q.size();\n                step++;\n            }\n        }\n        return -1;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=r.useContext(o.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(i,{demos:t})}}}]);