(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[9854],{92340:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"2055-\u8721\u70db\u4e4b\u95f4\u7684\u76d8\u5b50"},l.createElement(i.AnchorLink,{to:"#2055-\u8721\u70db\u4e4b\u95f4\u7684\u76d8\u5b50","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"2055. \u8721\u70db\u4e4b\u95f4\u7684\u76d8\u5b50"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/plates-between-candles/"},"2055. \u8721\u70db\u4e4b\u95f4\u7684\u76d8\u5b50"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u3001\u4e8c\u5206\u67e5\u627e\u3001\u524d\u7f00\u548c",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 answer \uff0c\u5176\u4e2d answer[i] \u662f\u7b2c i \u4e2a\u67e5\u8be2\u7684\u7b54\u6848\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---c"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.08"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a380ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a135.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\uff0c\u4e8c\u5206\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    typedef pair<int, int> node;\n    vector<node> list;\n    int n;\n    vector<int> platesBetweenCandles(string s, vector<vector<int>>& queries) {\n        n = s.size();\n        int prev = 0;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '|') list.push_back(make_pair(i, prev));\n            if (s[i] == '*') prev++;\n        }\n        vector<int> ans;\n        ans.reserve(queries.size());\n        for (auto& query : queries) {\n            int l = bs_l(query[0]), r = bs_r(query[1]), res;\n            if (l == list.size() || r == -1 || list[l].first > query[1] ||\n                l == r)\n                res = 0;\n            else\n                res = list[r].second - list[l].second;\n            ans.push_back(res);\n        }\n\n        return ans;\n    }\n    int bs_l(int idx) {\n        int l = 0, r = list.size(), m;\n        while (l < r) {\n            m = (l + r) >> 1;\n            if (list[m].first >= idx)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n    int bs_r(int idx) {\n        int l = -1, r = list.size() - 1, m;\n        while (l < r) {\n            m = (l + r + 1) >> 1;\n            if (list[m].first <= idx)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n};",lang:"cpp"}),l.createElement("h2",{id:"\u9898\u89e3-2---c"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c++"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.08"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a364ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a138.9MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\uff0c\u904d\u5386\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u524d\u540e\u8721\u70db\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    typedef pair<int, int> node;\n    vector<int> platesBetweenCandles(string s, vector<vector<int>>& queries) {\n        int n = s.size(), prev = 0;\n        vector<node> list;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '|') list.push_back(make_pair(i, prev));\n            if (s[i] == '*') prev++;\n        }\n        vector<int> find_l(n), find_r(n);\n        for (int i = 0, start = 0; i < n; i++) {\n            find_l[i] = start;\n            if (start < list.size() && i == list[start].first) start++;\n        }\n        for (int i = n - 1, start = list.size() - 1; i >= 0; i--) {\n            find_r[i] = start;\n            if (start > -1 && i == list[start].first) start--;\n        }\n        vector<int> ans;\n        ans.reserve(queries.size());\n        for (auto& query : queries) {\n            int l = find_l[query[0]], r = find_r[query[1]], res;\n            if (l == list.size() || r == -1 || list[l].first > query[1] ||\n                l == r)\n                res = 0;\n            else\n                res = list[r].second - list[l].second;\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);