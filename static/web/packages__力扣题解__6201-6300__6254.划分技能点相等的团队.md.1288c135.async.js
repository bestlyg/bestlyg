(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[50913],{22219:function(e,n,l){"use strict";l.r(n);var t=l(96832),i=l(22131),r=l(89730),a=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"6254-\u5212\u5206\u6280\u80fd\u70b9\u76f8\u7b49\u7684\u56e2\u961f"},t.createElement(i.AnchorLink,{to:"#6254-\u5212\u5206\u6280\u80fd\u70b9\u76f8\u7b49\u7684\u56e2\u961f","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"6254. \u5212\u5206\u6280\u80fd\u70b9\u76f8\u7b49\u7684\u56e2\u961f"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(i.Link,{to:"https://leetcode.cn/problems/divide-players-into-teams-of-equal-skill/"},"6254. \u5212\u5206\u6280\u80fd\u70b9\u76f8\u7b49\u7684\u56e2\u961f"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 skill \uff0c\u6570\u7ec4\u957f\u5ea6\u4e3a \u5076\u6570 n \uff0c\u5176\u4e2d skill[i] \u8868\u793a\u7b2c i \u4e2a\u73a9\u5bb6\u7684\u6280\u80fd\u70b9\u3002\u5c06\u6240\u6709\u73a9\u5bb6\u5206\u6210 n / 2 \u4e2a 2 \u4eba\u56e2\u961f\uff0c\u4f7f\u6bcf\u4e00\u4e2a\u56e2\u961f\u7684\u6280\u80fd\u70b9\u4e4b\u548c \u76f8\u7b49 \u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.12.04"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a72ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a51.3MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6392\u5e8f\u540e\u8d2a\u5fc3\u5224\u65ad\u3002")),t.createElement(r.Z,{code:'#include <iostream>\n#include <vector>\n// bestlyg\n# define X first\n# define Y second\n# define lb(x) ((x) & (-x))\n# define mem(a,b) memset(a,b,sizeof(a))\n# define debug freopen("r.txt","r",stdin)\n# define pi pair<int,int>\n\n#ifdef DEBUG\n#define log(frm, args...) {    printf(frm, ##args); }\n#else\n#define log(frm, args...)\n#endif\ntypedef long long ll;\n\nusing namespace std;\n\nclass Solution {\npublic:\n    long long dividePlayers(vector<int>& skill) {\n        int n = skill.size();\n        sort(skill.begin(), skill.end());\n        int sum = skill[0] + skill[n - 1];\n        long long ans = 0;\n        for (int i = 0; i < n / 2; i++) {\n            if (skill[i] + skill[n - 1 - i] != sum) return -1;\n            ans += skill[i] * skill[n - 1 - i];\n        }\n        return ans;\n    }\n};',lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(i.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(a,{demos:l})}}}]);