(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[66821],{51667:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),o=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1074-\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf"},l.createElement(r.AnchorLink,{to:"#1074-\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1074. \u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/number-of-submatrices-that-sum-to-target/"},"1074. \u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u6ed1\u52a8\u7a97\u53e3",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u51fa\u77e9\u9635 matrix \u548c\u76ee\u6807\u503c target\uff0c\u8fd4\u56de\u5143\u7d20\u603b\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u975e\u7a7a\u5b50\u77e9\u9635\u7684\u6570\u91cf\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.29"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a500ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u66b4\u529b\u5faa\u73af\u3002")),l.createElement(o.Z,{code:"function numSubmatrixSumTarget(matrix: number[][], target: number): number {\n  const rowLen = matrix.length;\n  const colLen = matrix[0].length;\n  const prefixSumList: number[][] = new Array(rowLen + 1)\n    .fill(0)\n    .map(_ => new Array(colLen + 1).fill(0));\n  for (let row = 0; row < rowLen; row++) {\n    for (let col = 0; col < colLen; col++) {\n      prefixSumList[row + 1][col + 1] =\n        prefixSumList[row + 1][col] +\n        prefixSumList[row][col + 1] -\n        prefixSumList[row][col] +\n        matrix[row][col];\n    }\n  }\n  let ans = 0;\n  for (let endRow = 0; endRow < rowLen; endRow++) {\n    for (let endCol = 0; endCol < colLen; endCol++) {\n      for (let startRow = 0; startRow <= endRow; startRow++) {\n        for (let startCol = 0; startCol <= endCol; startCol++) {\n          if (\n            prefixSumList[endRow + 1][endCol + 1] -\n              prefixSumList[endRow + 1][startCol] -\n              prefixSumList[startRow][endCol + 1] +\n              prefixSumList[startRow][startCol] ===\n            target\n          ) {\n            ans++;\n          }\n        }\n      }\n    }\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);