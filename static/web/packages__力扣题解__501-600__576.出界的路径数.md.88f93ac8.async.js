(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[29859],{85496:function(e,n,t){"use strict";t.r(n);var l=t(96832),o=t(22131),r=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"576-\u51fa\u754c\u7684\u8def\u5f84\u6570"},l.createElement(o.AnchorLink,{to:"#576-\u51fa\u754c\u7684\u8def\u5f84\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"576. \u51fa\u754c\u7684\u8def\u5f84\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(o.Link,{to:"https://leetcode-cn.com/problems/out-of-boundary-paths/"},"576. \u51fa\u754c\u7684\u8def\u5f84\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e94\u4e2a\u6574\u6570 m\u3001n\u3001maxMove\u3001startRow \u4ee5\u53ca startColumn \uff0c\u627e\u51fa\u5e76\u8fd4\u56de\u53ef\u4ee5\u5c06\u7403\u79fb\u51fa\u8fb9\u754c\u7684\u8def\u5f84\u6570\u91cf\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.08.15"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a120ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a43.6MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adp[i][j][k]=\u7b2c i \u6b65\u65f6\uff0c[j][k]\u5750\u6807\u7684\u6700\u5927\u6570\u91cf\u3002")),l.createElement(r.Z,{code:"function findPaths(\n  m: number,\n  n: number,\n  maxMove: number,\n  startRow: number,\n  startColumn: number\n): number {\n  const mod = 10 ** 9 + 7;\n  const directions: [number, number][] = [\n    [0, 1],\n    [1, 0],\n    [-1, 0],\n    [0, -1],\n  ];\n  const dp = new Array(maxMove + 1)\n    .fill(0)\n    .map(_ => new Array(m).fill(0).map(_ => new Array(n).fill(0)));\n  dp[0][startRow][startColumn] = 1;\n  let ans = 0;\n  for (let i = 0; i < maxMove; i++) {\n    for (let j = 0; j < m; j++) {\n      for (let k = 0; k < n; k++) {\n        const cnt = dp[i][j][k];\n        if (cnt <= 0) continue;\n        for (const [moveRow, moveCol] of directions) {\n          const row = j + moveRow;\n          const col = k + moveCol;\n          if (row >= 0 && row < m && col >= 0 && col < n) {\n            dp[i + 1][row][col] = (dp[i + 1][row][col] + cnt) % mod;\n          } else {\n            ans = (ans + cnt) % mod;\n          }\n        }\n      }\n    }\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(o.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);