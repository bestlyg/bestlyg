(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[37964],{62221:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),i=t(89730),s=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"816-\u6a21\u7cca\u5750\u6807"},r.createElement(l.AnchorLink,{to:"#816-\u6a21\u7cca\u5750\u6807","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"816. \u6a21\u7cca\u5750\u6807"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode.cn/problems/ambiguous-coordinates/"},"816. \u6a21\u7cca\u5750\u6807"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u56de\u6eaf",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---cpp"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.07"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a8ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a10MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u7ec4\u5408\u3002")),r.createElement(i.Z,{code:"class Solution {\npublic:\n    vector<string> ambiguousCoordinates(string s) {\n        vector<string> ans;\n        int n = s.size();\n        for (int i = 2; i < n - 1; i++) {\n            for (auto &l : comp(s.substr(1, i - 1))) {\n                for (auto &r: comp(s.substr(i, s.size() - 1 - i))) {\n                    ans.push_back(\"(\" + l + \", \" + r + \")\");\n                }\n            }\n        }\n        return ans;\n    }\n    vector<string> comp(string str) {\n        vector<string> list;\n        int f = check1(str);\n        if (f) list.push_back(str);\n        if (str.size() > 1) {\n            for (int i = 1; i < str.size(); i++) {\n                string next = str.substr(0, i) + \".\" + str.substr(i);\n                int f = check2(next, i);\n                if (f) list.push_back(next);\n            }\n        }\n        return list;\n    }\n    bool check1(string &str) {\n        if (str[0] == '0' && str.size() != 1) return false;\n        return true;\n    }\n    bool check2(string &str, int idx) {\n        // \u5f00\u5934\u4e0d\u80fd\u662f0\uff0c\u9664\u975e\u53ea\u67090\n        if (str[0] == '0' && idx != 1) return false;\n        // \u7ed3\u5c3e\u4e0d\u80fd\u662f0\n        if (str.back() == '0') return false;\n        // \u5c0f\u6570\u4e0d\u80fd\u51680\n        int f = true;\n        for (int i = idx + 1; i < str.size(); i++) {\n            if (str[i] != '0') {\n                f = false;\n                break;\n            }\n        }\n        if (f) return false;\n        return true;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(s,{demos:t})}}}]);