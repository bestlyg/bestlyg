(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[2045],{11944:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),o=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1738-\u627e\u51fa\u7b2c-k-\u5927\u7684\u5f02\u6216\u5750\u6807\u503c"},l.createElement(r.AnchorLink,{to:"#1738-\u627e\u51fa\u7b2c-k-\u5927\u7684\u5f02\u6216\u5750\u6807\u503c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1738. \u627e\u51fa\u7b2c K \u5927\u7684\u5f02\u6216\u5750\u6807\u503c"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/find-kth-largest-xor-coordinate-value/"},"1738. \u627e\u51fa\u7b2c K \u5927\u7684\u5f02\u6216\u5750\u6807\u503c"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u627e\u51fa matrix \u7684\u6240\u6709\u5750\u6807\u4e2d\u7b2c k \u5927\u7684\u503c\uff08k \u7684\u503c\u4ece 1 \u5f00\u59cb\u8ba1\u6570\uff09\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.19"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a736ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a105.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u524d\u7f00\u548c\u3002")),l.createElement(c.Z,{code:"function kthLargestValue(matrix: number[][], k: number): number {\n  const rowLen = matrix.length;\n  const colLen = matrix[0].length;\n  const prefixSumList: number[][] = new Array(rowLen + 1)\n    .fill(0)\n    .map(_ => new Array(colLen + 1).fill(0));\n  const list: number[] = [];\n  for (let row = 1; row <= rowLen; row++) {\n    for (let col = 1; col <= colLen; col++) {\n      list.push(\n        (prefixSumList[row][col] =\n          prefixSumList[row - 1][col] ^\n          prefixSumList[row][col - 1] ^\n          prefixSumList[row - 1][col - 1] ^\n          matrix[row - 1][col - 1])\n      );\n    }\n  }\n  return list.sort((a, b) => b - a)[k - 1];\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(o,{demos:t})}}}]);