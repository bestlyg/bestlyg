(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[82990],{39103:function(e,r,n){"use strict";n.r(r);var t=n(96832),l=n(22131),c=n(89730),o=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"1008-\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811"},t.createElement(l.AnchorLink,{to:"#1008-\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"1008. \u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(l.Link,{to:"https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal/"},"1008. \u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6808\u3001\u6811\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u6570\u7ec4\u3001\u4e8c\u53c9\u6811\u3001\u5355\u8c03\u6808",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u4e0e\u7ed9\u5b9a\u524d\u5e8f\u904d\u5386 preorder \u76f8\u5339\u914d\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\u7684\u6839\u7ed3\u70b9\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---typescript"},t.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.08.07"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a72ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.6MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u83b7\u53d6\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u6784\u9020\u3002")),t.createElement(c.Z,{code:"function bstFromPreorder(preorder: number[]): TreeNode | null {\n  const n = preorder.length;\n  if (n === 0) return null;\n  const mid = preorder[0];\n  let i = 1;\n  while (i < n && preorder[i] < mid) i++;\n  return new TreeNode(\n    mid,\n    bstFromPreorder(preorder.slice(1, i)),\n    bstFromPreorder(preorder.slice(i))\n  );\n}",lang:"typescript"})))}));r["default"]=e=>{var r=t.useContext(l.context),n=r.demos;return t.useEffect((()=>{var r;null!==e&&void 0!==e&&null!==(r=e.location)&&void 0!==r&&r.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(o,{demos:n})}}}]);