(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[49701],{89078:function(n,e,i){"use strict";i.r(e);var m=i(96832),t=i(22131),l=i(89730),a=m.memo((n=>{n.demos;return m.createElement(m.Fragment,null,m.createElement("div",{className:"markdown"},m.createElement("h1",{id:"689-\u4e09\u4e2a\u65e0\u91cd\u53e0\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c"},m.createElement(t.AnchorLink,{to:"#689-\u4e09\u4e2a\u65e0\u91cd\u53e0\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c","aria-hidden":"true",tabIndex:-1},m.createElement("span",{className:"icon icon-link"})),"689. \u4e09\u4e2a\u65e0\u91cd\u53e0\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c"),m.createElement("blockquote",null,m.createElement("p",null,"\u94fe\u63a5\uff1a",m.createElement(t.Link,{to:"https://leetcode-cn.com/problems/maximum-sum-of-3-non-overlapping-subarrays/"},"689. \u4e09\u4e2a\u65e0\u91cd\u53e0\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c"),m.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",m.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212",m.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u627e\u51fa\u4e09\u4e2a\u957f\u5ea6\u4e3a k \u3001\u4e92\u4e0d\u91cd\u53e0\u3001\u4e14 3 * k \u9879\u7684\u548c\u6700\u5927\u7684\u5b50\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e09\u4e2a\u5b50\u6570\u7ec4\u3002")),m.createElement("h2",{id:"\u9898\u89e3-1---typescript"},m.createElement(t.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},m.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),m.createElement("ul",null,m.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.08"),m.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),m.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42mb"),m.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),m.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6ed1\u52a8\u7a97\u53e3\uff0c\u8bb0\u5f55\u6bcf\u6b21\u7684\u6700\u5927\u503c\u6bd4\u8f83\u3002")),m.createElement(l.Z,{code:"function maxSumOfThreeSubarrays(nums: number[], k: number): number[] {\n  const n = nums.length;\n  let sum1 = 0,\n    max1 = 0,\n    idx1 = 0;\n  let sum2 = 0,\n    max2 = 0,\n    idx2 = 0,\n    idx2_1 = 0,\n    idx2_2 = 0;\n  let sum3 = 0,\n    max3 = 0,\n    idx3 = 0;\n  let idx = 0;\n  idx1 = idx;\n  for (let i = idx, end = idx + k; i < end; i++, idx++) max1 = sum1 += nums[i];\n  idx2_2 = idx2 = idx;\n  for (let i = idx, end = idx + k; i < end; i++, idx++) max2 = max1 + (sum2 += nums[i]);\n  idx3 = idx;\n  for (let i = idx, end = idx + k; i < end; i++, idx++) max3 = max2 + (sum3 += nums[i]);\n  const ans = [idx1, idx2, idx3];\n  for (; idx < n; idx++) {\n    sum1 = sum1 + nums[idx - 2 * k] - nums[idx - 3 * k];\n    sum2 = sum2 + nums[idx - 1 * k] - nums[idx - 2 * k];\n    sum3 = sum3 + nums[idx - 0 * k] - nums[idx - 1 * k];\n    if (max1 < sum1) {\n      max1 = sum1;\n      idx1 = idx - 3 * k + 1;\n    }\n    if (max2 < max1 + sum2) {\n      max2 = max1 + sum2;\n      idx2 = idx - 2 * k + 1;\n      idx2_1 = idx1;\n      idx2_2 = idx2;\n    }\n    if (max3 < max2 + sum3) {\n      max3 = max2 + sum3;\n      idx3 = idx - 1 * k + 1;\n      ans[0] = idx2_1;\n      ans[1] = idx2_2;\n      ans[2] = idx3;\n    }\n  }\n  return ans;\n}",lang:"typescript"})))}));e["default"]=n=>{var e=m.useContext(t.context),i=e.demos;return m.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&t.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),m.createElement(a,{demos:i})}}}]);