(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[62979],{20961:function(e,n,t){"use strict";t.r(n);var c=t(96832),l=t(22131),s=t(89730),a=c.memo((e=>{e.demos;return c.createElement(c.Fragment,null,c.createElement("div",{className:"markdown"},c.createElement("h1",{id:"460-lfu-\u7f13\u5b58"},c.createElement(l.AnchorLink,{to:"#460-lfu-\u7f13\u5b58","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"460. LFU \u7f13\u5b58"),c.createElement("blockquote",null,c.createElement("p",null,"\u94fe\u63a5\uff1a",c.createElement(l.Link,{to:"https://leetcode-cn.com/problems/lfu-cache/"},"460. LFU \u7f13\u5b58"),c.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",c.createElement("br",null),"\u6807\u7b7e\uff1a\u8bbe\u8ba1",c.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u4e3a \u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff08LFU\uff09\u7f13\u5b58\u7b97\u6cd5\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u3002\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1aget \u548c put\u3002")),c.createElement("h2",{id:"\u9898\u89e3-1---javascript"},c.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---javascript","aria-hidden":"true",tabIndex:-1},c.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - javascript"),c.createElement("ul",null,c.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.4.9"),c.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a1136ms"),c.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a78.2MB"),c.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"),c.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u4f7f\u7528 Node \u50a8\u5b58\u6b21\u6570\u548c\u503c\uff0c\u8fdb\u884c\u5224\u65ad\uff0c\u96be\u70b9\u6ca1\u6709\u5c31\u662f\u7ec6\u8282\u9700\u8981\u8003\u8651\u3002")),c.createElement(s.Z,{code:"class Node {\n  count = 0;\n  value;\n  constructor(value) {\n    this.value = value;\n  }\n}\nclass LFUCache {\n  _capacity;\n  _cache = new Map();\n  newest = [];\n  constructor(capacity) {\n    this._capacity = capacity;\n  }\n  get(key) {\n    // console.log('====GET-' + key);\n    // console.log(this._cache);\n    if (this._capacity === 0 || !this._cache.has(key)) return -1;\n    const node = this._cache.get(key);\n    node.count++;\n    this.setNewest(key);\n    return node.value;\n  }\n  setNewest(key) {\n    if (this.newest[this.newest.length - 1] === key) return;\n    this.newest = this.newest.filter(v => v !== key);\n    this.newest.push(key);\n  }\n  getMinKey() {\n    const arr = [];\n    let minValue = Number.MAX_VALUE;\n    for (let [_, node] of this._cache) {\n      if (node.count < minValue) {\n        minValue = node.count;\n      }\n    }\n    for (let [key, node] of this._cache) {\n      if (node.count === minValue) arr.push(key);\n    }\n    return arr;\n  }\n  put(key, value) {\n    // console.log('====PUT-' + key + '-' + value);\n    // console.log(key, value);\n    if (this._capacity === 0) return;\n    if (this._cache.has(key)) {\n      const node = this._cache.get(key);\n      node.value = value;\n      node.count++;\n      this.setNewest(key);\n      return;\n    }\n    const node = new Node(value);\n    if (this._cache.size < this._capacity) {\n      this._cache.set(key, node);\n      this.setNewest(key);\n      return;\n    }\n    const mins = this.getMinKey();\n    if (mins.length === 1) {\n      this._cache.delete(mins[0]);\n      this._cache.set(key, node);\n      this.setNewest(key);\n      return;\n    }\n    // console.log('mins:' + mins);\n    // console.log('newest:' + this.newest);\n    for (let item of this.newest) {\n      if (mins.includes(item)) {\n        this._cache.delete(item);\n        this._cache.set(key, node);\n        this.setNewest(key);\n        return;\n      }\n    }\n  }\n}",lang:"javascript"})))}));n["default"]=e=>{var n=c.useContext(l.context),t=n.demos;return c.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),c.createElement(a,{demos:t})}}}]);