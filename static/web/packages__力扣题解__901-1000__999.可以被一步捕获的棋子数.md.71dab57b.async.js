(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[83198],{33025:function(e,n,l){"use strict";l.r(n);var t=l(96832),o=l(22131),r=l(89730),c=t.memo((e=>{e.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"999-\u53ef\u4ee5\u88ab\u4e00\u6b65\u6355\u83b7\u7684\u68cb\u5b50\u6570"},t.createElement(o.AnchorLink,{to:"#999-\u53ef\u4ee5\u88ab\u4e00\u6b65\u6355\u83b7\u7684\u68cb\u5b50\u6570","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"999. \u53ef\u4ee5\u88ab\u4e00\u6b65\u6355\u83b7\u7684\u68cb\u5b50\u6570"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(o.Link,{to:"https://leetcode-cn.com/problems/available-captures-for-rook/"},"999. \u53ef\u4ee5\u88ab\u4e00\u6b65\u6355\u83b7\u7684\u68cb\u5b50\u6570"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u77e9\u9635\u3001\u6a21\u62df",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u4f60\u73b0\u5728\u53ef\u4ee5\u63a7\u5236\u8f66\u79fb\u52a8\u4e00\u6b21\uff0c\u8bf7\u4f60\u7edf\u8ba1\u6709\u591a\u5c11\u654c\u65b9\u7684\u5352\u5904\u4e8e\u4f60\u7684\u6355\u83b7\u8303\u56f4\u5185\uff08\u5373\uff0c\u53ef\u4ee5\u88ab\u4e00\u6b65\u6355\u83b7\u7684\u68cb\u5b50\u6570\uff09\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---cpp"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.03.26"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.6MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u65b9\u5411\u6570\u7ec4\u3002")),t.createElement(r.Z,{code:"class Solution {\n   public:\n    int numRookCaptures(vector<vector<char>>& board) {\n        int row = -1, col = -1;\n        for (int i = 0; i < 8 && row == -1; i++) {\n            for (int j = 0; j < 8 && col == -1; j++) {\n                if (board[i][j] == 'R') {\n                    row = i;\n                    col = j;\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < 4; i++) {\n            int nrow = row + dirs[i][0], ncol = col + dirs[i][1];\n            while (nrow >= 0 && nrow < 8 && ncol >= 0 && ncol < 8 &&\n                   board[nrow][ncol] == '.') {\n                nrow += dirs[i][0];\n                ncol += dirs[i][1];\n            }\n            if (nrow < 0 || nrow == 8 || ncol < 0 || ncol == 8 ||\n                board[nrow][ncol] != 'p')\n                continue;\n            ans++;\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=t.useContext(o.context),l=n.demos;return t.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),t.createElement(c,{demos:l})}}}]);