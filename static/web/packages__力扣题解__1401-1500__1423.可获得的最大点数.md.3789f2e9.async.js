(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[30922],{30905:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),c=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1423-\u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570"},l.createElement(r.AnchorLink,{to:"#1423-\u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1423. \u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/maximum-points-you-can-obtain-from-cards/"},"1423. \u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6ed1\u52a8\u7a97\u53e3\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 cardPoints \u548c\u6574\u6570 k\uff0c\u8bf7\u4f60\u8fd4\u56de\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.2.6"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a46.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5229\u7528\u6ed1\u52a8\u7a97\u53e3\u51cf\u5c11\u6b21\u6570\u5224\u65ad\u3002")),l.createElement(c.Z,{code:"function maxScore(cardPoints: number[], k: number): number {\n  const len = cardPoints.length;\n  let rightNum = 0;\n  let num = cardPoints.slice(0, k).reduce((total, cur) => total + cur, 0);\n  let max = num;\n  while (rightNum < k) {\n    max = Math.max(\n      max,\n      (num = num - cardPoints[k - rightNum - 1] + cardPoints[len - rightNum - 1])\n    );\n    rightNum++;\n  }\n  return max;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);