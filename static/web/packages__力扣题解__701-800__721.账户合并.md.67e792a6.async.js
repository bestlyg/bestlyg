(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[65852],{17590:function(e,n,t){"use strict";t.r(n);var i=t(96832),l=t(22131),s=t(89730),a=i.memo((e=>{e.demos;return i.createElement(i.Fragment,null,i.createElement("div",{className:"markdown"},i.createElement("h1",{id:"721-\u8d26\u6237\u5408\u5e76"},i.createElement(l.AnchorLink,{to:"#721-\u8d26\u6237\u5408\u5e76","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"721. \u8d26\u6237\u5408\u5e76"),i.createElement("blockquote",null,i.createElement("p",null,"\u94fe\u63a5\uff1a",i.createElement(l.Link,{to:"https://leetcode-cn.com/problems/accounts-merge/"},"721. \u8d26\u6237\u5408\u5e76"),i.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",i.createElement("br",null),"\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6",i.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5217\u8868 accounts\uff0c\u5408\u5e76\u8d26\u6237\u540e\uff0c\u6309\u4ee5\u4e0b\u683c\u5f0f\u8fd4\u56de\u8d26\u6237\uff1a\u6bcf\u4e2a\u8d26\u6237\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u540d\u79f0\uff0c\u5176\u4f59\u5143\u7d20\u662f\u6309\u5b57\u7b26 ASCII \u987a\u5e8f\u6392\u5217\u7684\u90ae\u7bb1\u5730\u5740\u3002\u8d26\u6237\u672c\u8eab\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u3002")),i.createElement("h2",{id:"\u9898\u89e3-1---typescript"},i.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},i.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),i.createElement("ul",null,i.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.01"),i.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a272ms"),i.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a53.2MB"),i.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),i.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),i.createElement(s.Z,{code:"class UnionFind {\n  elements: number[];\n  constructor(public size: number) {\n    this.elements = new Array(size).fill(0).map((_, i) => i);\n  }\n  same(v1: number, v2: number): boolean {\n    return this.find(v1) === this.find(v2);\n  }\n  find(v: number): number {\n    return v === this.elements[v] ? v : (this.elements[v] = this.find(this.elements[v]));\n  }\n  union(v1: number, v2: number): void {\n    const e1 = this.find(v1);\n    const e2 = this.find(v2);\n    if (e1 !== e2) {\n      this.elements[e1] = e2;\n      this.size--;\n    }\n  }\n}\nfunction accountsMerge(accounts: string[][]): string[][] {\n  const indexMap = new Map<string | number, number | string>();\n  const nameMap = new Map<string, string>();\n  let size = 0;\n  for (const [name, ...emails] of accounts)\n    emails.forEach(email => {\n      if (!indexMap.has(email)) {\n        indexMap.set(email, size);\n        indexMap.set(size, email);\n        size++;\n      }\n      nameMap.set(email, name);\n    });\n  const uf = new UnionFind(size);\n  for (const [, ...emails] of accounts) {\n    for (let i = 1, l = emails.length; i < l; i++) {\n      uf.union(indexMap.get(emails[i]) as number, indexMap.get(emails[i - 1]) as number);\n    }\n  }\n  const cache = new Map<number, number[]>();\n  for (let i = 0; i < size; i++) {\n    const index = uf.find(i);\n    let list = cache.get(index);\n    if (!list) cache.set(index, (list = []));\n    list.push(i);\n  }\n  const emailSort = (email1: string, email2: string): number => {\n    let i = 0;\n    const len = Math.min(email1.length, email2.length);\n    while (i < len) {\n      if (email1[i] === email2[i]) i++;\n      else return email1.codePointAt(i)! - email2.codePointAt(i)!;\n    }\n    return email1[i] === undefined ? -1 : 1;\n  };\n  const ans: string[][] = [];\n  for (const [k, v] of cache.entries()) {\n    ans.push([\n      nameMap.get(indexMap.get(k) as string) as string,\n      ...v.map(i => indexMap.get(i) as string).sort(emailSort),\n    ]);\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=i.useContext(l.context),t=n.demos;return i.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),i.createElement(a,{demos:t})}}}]);