(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[40668],{96148:function(e,n,t){"use strict";t.r(n);var l=t(96832),a=t(22131),r=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1743-\u4ece\u76f8\u90bb\u5143\u7d20\u5bf9\u8fd8\u539f\u6570\u7ec4"},l.createElement(a.AnchorLink,{to:"#1743-\u4ece\u76f8\u90bb\u5143\u7d20\u5bf9\u8fd8\u539f\u6570\u7ec4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1743. \u4ece\u76f8\u90bb\u5143\u7d20\u5bf9\u8fd8\u539f\u6570\u7ec4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(a.Link,{to:"https://leetcode-cn.com/problems/restore-the-array-from-adjacent-pairs/"},"1743. \u4ece\u76f8\u90bb\u5143\u7d20\u5bf9\u8fd8\u539f\u6570\u7ec4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u5b58\u5728\u4e00\u4e2a\u7531 n \u4e2a\u4e0d\u540c\u5143\u7d20\u7ec4\u6210\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u8fd4\u56de \u539f\u59cb\u6570\u7ec4 nums \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.07.25"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a332ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a88.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1amap \u50a8\u5b58\u4e00\u4e2a\u6570\u4e24\u8fb9\u7684\u503c\u3002")),l.createElement(r.Z,{code:"function restoreArray(adjacentPairs: number[][]): number[] {\n  const map = new Map<number, number[]>();\n  for (const [n1, n2] of adjacentPairs) {\n    let l1 = map.get(n1);\n    if (!l1) map.set(n1, (l1 = []));\n    let l2 = map.get(n2);\n    if (!l2) map.set(n2, (l2 = []));\n    l1.push(n2);\n    l2.push(n1);\n  }\n  const ans: number[] = [];\n  for (const [n, l] of map.entries())\n    if (l.length === 1) {\n      ans.push(n);\n      break;\n    }\n  ans.push(map.get(ans[ans.length - 1])![0]);\n  while (map.get(ans[ans.length - 1])!.length !== 1) {\n    const last = ans[ans.length - 1];\n    const list = map.get(last)!;\n    const prev = ans[ans.length - 2];\n    const next = list[0] === prev ? list[1] : list[0];\n    ans.push(next);\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(a.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);