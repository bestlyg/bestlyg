(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[13506],{12615:function(e,n,t){"use strict";t.r(n);var r=t(96832),l=t(22131),a=t(89730),c=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"1175-\u8d28\u6570\u6392\u5217"},r.createElement(l.AnchorLink,{to:"#1175-\u8d28\u6570\u6392\u5217","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"1175. \u8d28\u6570\u6392\u5217"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(l.Link,{to:"https://leetcode-cn.com/problems/prime-arrangements/"},"1175. \u8d28\u6570\u6392\u5217"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",r.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u5b66",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u5e2e\u5fd9\u7ed9\u4ece 1 \u5230 n \u7684\u6570\u8bbe\u8ba1\u6392\u5217\u65b9\u6848\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u300c\u8d28\u6570\u300d\u90fd\u5e94\u8be5\u88ab\u653e\u5728\u300c\u8d28\u6570\u7d22\u5f15\u300d\uff08\u7d22\u5f15\u4ece 1 \u5f00\u59cb\uff09\u4e0a\uff1b\u4f60\u9700\u8981\u8fd4\u56de\u53ef\u80fd\u7684\u65b9\u6848\u603b\u6570\u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(l.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.04"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a88ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.5MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u7b97\u51fa\u8d28\u6570\u4f4d\u7f6e\u8fdb\u884c\u9636\u4e58\u3002")),r.createElement(a.Z,{code:"function numPrimeArrangements(n: number): number {\n  const MOD = BigInt(10 ** 9 + 7);\n  const cnt = count(n);\n  return Number((factorial(cnt) * factorial(n - cnt)) % MOD);\n  function count(n: number): number {\n    const arr: boolean[] = new Array(n + 1).fill(true);\n    arr[0] = arr[1] = false;\n    for (let i = 2; i <= n; i++) {\n      if (!arr[i]) continue;\n      for (let j = 2; i * j <= n; j++) arr[i * j] = false;\n    }\n    return arr.filter(Boolean).length;\n  }\n  function factorial(n: number): bigint {\n    let ans = 1n;\n    for (let i = 2n; i <= n; i++) ans = (ans * i) % MOD;\n    return ans;\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(l.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(c,{demos:t})}}}]);