(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[70651],{6220:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"437-\u8def\u5f84\u603b\u548c-iii"},l.createElement(r.AnchorLink,{to:"#437-\u8def\u5f84\u603b\u548c-iii","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"437. \u8def\u5f84\u603b\u548c III"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/decode-ways-ii/"},"437. \u8def\u5f84\u603b\u548c III"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u6570\u5b57\u548c '*' \u5b57\u7b26\u7ec4\u6210\uff0c\u8fd4\u56de \u89e3\u7801 \u8be5\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5 \u6570\u76ee \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.09.28"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a152ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a52.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),l.createElement(i.Z,{code:"function pathSum(root: TreeNode | null, targetSum: number): number {\n  if (root === null) return 0;\n  let ans = 0;\n  dfs(root);\n  return ans;\n  function dfs(node: TreeNode | null, list: number[] = []) {\n    if (node === null) return;\n    const newList = list.map(v => v + node.val);\n    newList.push(node.val);\n    newList.forEach(v => {\n      if (v === targetSum) ans++;\n    });\n    dfs(node.left, newList);\n    dfs(node.right, newList);\n  }\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-2---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.09.28"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a88ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a42.6mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),l.createElement(i.Z,{code:"function pathSum(root: TreeNode | null, targetSum: number): number {\n  if (root === null) return 0;\n  let ans = 0;\n  dfs(root);\n  return ans;\n  function dfs(node: TreeNode | null, list: number[] = []) {\n    if (node === null) return;\n    const val = node.val;\n    const len = list.length;\n    if (val === targetSum) ans++;\n    for (let i = 0; i < len; i++) {\n      list[i] += val;\n      if (list[i] === targetSum) ans++;\n    }\n    list.push(val);\n    dfs(node.left, list);\n    dfs(node.right, list);\n    list.pop();\n    for (let i = 0; i < len; i++) {\n      list[i] -= val;\n    }\n  }\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);