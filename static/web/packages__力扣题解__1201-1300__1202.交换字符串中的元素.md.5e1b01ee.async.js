(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[70183],{69756:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),s=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1202-\u4ea4\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20"},l.createElement(i.AnchorLink,{to:"#1202-\u4ea4\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1202. \u4ea4\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/smallest-string-with-swaps/"},"1202. \u4ea4\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5e76\u67e5\u96c6\u3001\u6570\u7ec4",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s,\u8fd4\u56de\u5728\u7ecf\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\u540e\uff0cs \u53ef\u4ee5\u53d8\u6210\u7684\u6309\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.05.01"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a236ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a67.1MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5e76\u67e5\u96c6\u3002")),l.createElement(s.Z,{code:"class UnionFind {\n  elements: number[];\n  constructor(public size: number) {\n    this.elements = new Array(size).fill(0).map((_, i) => i);\n  }\n  same(v1: number, v2: number): boolean {\n    return this.find(v1) === this.find(v2);\n  }\n  find(v: number): number {\n    return v === this.elements[v] ? v : (this.elements[v] = this.find(this.elements[v]));\n  }\n  union(v1: number, v2: number): void {\n    const e1 = this.find(v1);\n    const e2 = this.find(v2);\n    if (e1 !== e2) {\n      this.elements[e1] = e2;\n      this.size--;\n    }\n  }\n}\nfunction smallestStringWithSwaps(s: string, pairs: number[][]): string {\n  const len = s.length;\n  const uf = new UnionFind(len);\n  pairs.forEach(([i1, i2]) => uf.union(i1, i2));\n  const map: Record<number, number[]> = {};\n  for (let i = 0; i < len; i++) {\n    const index = uf.find(i);\n    let list = map[index];\n    if (!list) list = map[index] = [];\n    list.push(i);\n  }\n  const lists = Object.values(map);\n  const cache = s.split('');\n  let ans = s.split('');\n  for (const list of lists) {\n    const sorted = list.slice().sort((i1, i2) => s[i1].codePointAt(0)! - s[i2].codePointAt(0)!);\n    for (let i = 0, l = list.length; i < l; i++) {\n      ans[list[i]] = cache[sorted[i]];\n    }\n  }\n  return ans.join('');\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);