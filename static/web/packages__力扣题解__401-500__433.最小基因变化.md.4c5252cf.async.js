(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[97811],{74735:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"433-\u6700\u5c0f\u57fa\u56e0\u53d8\u5316"},l.createElement(r.AnchorLink,{to:"#433-\u6700\u5c0f\u57fa\u56e0\u53d8\u5316","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/minimum-genetic-mutation/"},"433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e24\u4e2a\u57fa\u56e0\u5e8f\u5217 start \u548c end \uff0c\u4ee5\u53ca\u4e00\u4e2a\u57fa\u56e0\u5e93 bank \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u80fd\u591f\u4f7f \xa0start \u53d8\u5316\u4e3a end \u6240\u9700\u7684\u6700\u5c11\u53d8\u5316\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u5b8c\u6210\u6b64\u57fa\u56e0\u53d8\u5316\uff0c\u8fd4\u56de -1 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.07"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.4MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1abfs\u3002")),l.createElement(i.Z,{code:"class Solution {\npublic:\n    int minMutation(string start, string end, vector<string>& bank) {\n        unordered_set<string> s;\n        for (auto &v : bank) s.insert(v);\n        queue<string> q;\n        q.push(start);\n        int level = 0, size = 1;\n        while (q.size()) {\n            string cur = q.front(); q.pop();\n            if (cur == end) return level;\n            for (auto &s : next(s, cur)) q.push(s);\n            if (--size == 0) { size = q.size(); level++; }\n        }\n        return -1;\n    }\n    char list[4] = {'A', 'C', 'G', 'T'};\n    vector<string> next(unordered_set<string> &s, string &str) {\n        vector<string> ans;\n        for (int i = 0; i < 8; i++) {\n            for (int j = 0; j < 4; j++) {\n                if (str[i] == list[j]) continue;\n                string next = str;\n                next[i] = list[j];\n                if (s.count(next)) {\n                    ans.emplace_back(next);\n                    s.erase(next);\n                }\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);