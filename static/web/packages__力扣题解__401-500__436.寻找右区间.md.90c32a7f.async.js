(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[7154],{58731:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),a=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"436-\u5bfb\u627e\u53f3\u533a\u95f4"},l.createElement(i.AnchorLink,{to:"#436-\u5bfb\u627e\u53f3\u533a\u95f4","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"436. \u5bfb\u627e\u53f3\u533a\u95f4"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode.cn/problems/find-right-interval/"},"436. \u5bfb\u627e\u53f3\u533a\u95f4"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u4e00\u4e2a\u7531\u6bcf\u4e2a\u533a\u95f4 i \u7684 \u53f3\u4fa7\u533a\u95f4 \u7684\u6700\u5c0f\u8d77\u59cb\u4f4d\u7f6e\u7ec4\u6210\u7684\u6570\u7ec4\u3002\u5982\u679c\u67d0\u4e2a\u533a\u95f4 i \u4e0d\u5b58\u5728\u5bf9\u5e94\u7684 \u53f3\u4fa7\u533a\u95f4 \uff0c\u5219\u4e0b\u6807 i \u5904\u7684\u503c\u8bbe\u4e3a -1 \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.05.20"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a60ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a23.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1abs\u3002")),l.createElement(r.Z,{code:"class Solution {\n   public:\n    vector<int> findRightInterval(vector<vector<int>> &intervals) {\n        int n = intervals.size();\n        vector<int> ans(n, -1);\n        vector<int> list(n);\n        for (int i = 0; i < n; i++) list[i] = i;\n        sort(list.begin(), list.end(), [&](int &a, int &b) -> bool {\n            if (intervals[a][0] == intervals[b][0])\n                return intervals[a][1] < intervals[b][1];\n            return intervals[a][0] < intervals[b][0];\n        });\n        for (int i = 0; i < n; i++)\n            ans[i] = bs(intervals, list, intervals[i][1]);\n        return ans;\n    }\n    int bs(vector<vector<int>> &intervals, vector<int> &list, int num) {\n        int l = 0, r = intervals.size(), m;\n        while (l < r) {\n            m = (l + r) >> 1;\n            if (intervals[list[m]][0] >= num)\n                r = m;\n            else\n                l = m + 1;\n        }\n        if (r == intervals.size()) return -1;\n        return list[l];\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(a,{demos:t})}}}]);