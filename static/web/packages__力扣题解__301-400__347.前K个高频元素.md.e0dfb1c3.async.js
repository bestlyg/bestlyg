(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[2736],{30359:function(e,n,t){"use strict";t.r(n);var l=t(96832),r=t(22131),i=t(89730),s=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"347-\u524d-k-\u4e2a\u9ad8\u9891\u5143\u7d20"},l.createElement(r.AnchorLink,{to:"#347-\u524d-k-\u4e2a\u9ad8\u9891\u5143\u7d20","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(r.Link,{to:"https://leetcode-cn.com/problems/top-k-frequent-elements/"},"347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5806\u3001\u54c8\u5e0c\u8868",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u524d k \u9ad8\u7684\u5143\u7d20\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(r.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.7"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a108ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a41.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6784\u9020\u5806\u8fdb\u884c\u904d\u5386\u3002")),l.createElement(i.Z,{code:"class Frequent {\n  count = 1;\n  constructor(public num: number) {}\n}\nclass Heap<T> {\n  get size(): number {\n    return this._elemenets.length;\n  }\n  constructor(private _elemenets: T[], private compare: (e1: T, e2: T) => number) {\n    this.heapify();\n  }\n  heapify(): void {\n    for (let i = (this.size >> 1) - 1; i >= 0; i--) {\n      this.siftDown(i);\n    }\n  }\n  remove(): T {\n    const root = this._elemenets[0];\n    this._elemenets[0] = this._elemenets.pop() as T;\n    this.siftDown(0);\n    return root;\n  }\n  siftDown(index: number) {\n    const element = this._elemenets[index];\n    const half = this.size >> 1;\n    while (index < half) {\n      let childIndex = (index << 1) + 1;\n      let child = this._elemenets[childIndex];\n      const rightIndex = childIndex + 1;\n      if (rightIndex < this.size && this.compare(this._elemenets[rightIndex], child) > 0) {\n        child = this._elemenets[(childIndex = rightIndex)];\n      }\n      if (this.compare(element, child) >= 0) break;\n      this._elemenets[index] = child;\n      index = childIndex;\n    }\n    this._elemenets[index] = element;\n  }\n}\nfunction topKFrequent(nums: number[], k: number): number[] {\n  const frequents: Record<number, Frequent> = {};\n  for (const num of nums) {\n    if (frequents[num]) frequents[num].count++;\n    else frequents[num] = new Frequent(num);\n  }\n  const heap = new Heap(Object.values(frequents), (e1, e2) => e1.count - e2.count);\n  const ans: number[] = [];\n  while (k-- !== 0) {\n    ans.push(heap.remove().num);\n  }\n  return ans;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=l.useContext(r.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(s,{demos:t})}}}]);