(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[75948],{26657:function(n,e,t){"use strict";t.r(e);var r=t(96832),i=t(22131),l=t(89730),a=r.memo((n=>{n.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"306-\u7d2f\u52a0\u6570"},r.createElement(i.AnchorLink,{to:"#306-\u7d2f\u52a0\u6570","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"306. \u7d2f\u52a0\u6570"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(i.Link,{to:"https://leetcode-cn.com/problems/additive-number/"},"306. \u7d2f\u52a0\u6570"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u56de\u6eaf",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b\u6570\u5b57 '0'-'9' \u7684\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u7ed9\u5b9a\u8f93\u5165\u662f\u5426\u662f \u7d2f\u52a0\u6570 \u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---c"},r.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---c","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - c++"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.01.10"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a4ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),r.createElement(l.Z,{code:'class Solution {\n   public:\n    bool isAdditiveNumber(string num) {\n        string prev1 = "", prev2 = "";\n        for (int end1 = 0; end1 < num.size(); end1++) {\n            prev1 += num[end1];\n            prev2 = "";\n            for (int end2 = end1 + 1; end2 < num.size(); end2++) {\n                prev2 += num[end2];\n                if (dfs(num, end2 + 1, 1, prev1, prev2)) return 1;\n                if (end2 == end1 + 1 && num[end2] == \'0\') break;\n            }\n            if (end1 == 0 && num[end1] == \'0\') break;\n        }\n        return 0;\n    }\n    string add(string s1, string s2) {\n        string ans = "";\n        int i1 = s1.size() - 1, i2 = s2.size() - 1, tag = 0;\n        while (i1 >= 0 || i2 >= 0) {\n            int num = (i1 < 0 ? 0 : s1[i1--] - \'0\') +\n                      (i2 < 0 ? 0 : s2[i2--] - \'0\') + tag;\n            if (num >= 10) {\n                num -= 10;\n                tag = 1;\n            } else\n                tag = 0;\n            ans = to_string(num) + ans;\n        }\n        if (tag) ans = "1" + ans;\n        return ans;\n    }\n    int dfs(string& num, int start, int init, string prev1, string prev2) {\n        if (start == num.size()) return !init;\n        string next = "";\n        for (int i = start; i < num.size(); i++) {\n            next += num[i];\n            if (next == add(prev1, prev2))\n                return dfs(num, i + 1, 0, prev2, next);\n            if (i == start && num[i] == \'0\') break;\n        }\n        return 0;\n    }\n};',lang:"cpp"})))}));e["default"]=n=>{var e=r.useContext(i.context),t=e.demos;return r.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),r.createElement(a,{demos:t})}}}]);