(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[63577],{5180:function(e,n,t){"use strict";t.r(n);var r=t(96832),a=t(22131),l=t(89730),m=r.memo((e=>{e.demos;return r.createElement(r.Fragment,null,r.createElement("div",{className:"markdown"},r.createElement("h1",{id:"166-\u5206\u6570\u5230\u5c0f\u6570"},r.createElement(a.AnchorLink,{to:"#166-\u5206\u6570\u5230\u5c0f\u6570","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"166. \u5206\u6570\u5230\u5c0f\u6570"),r.createElement("blockquote",null,r.createElement("p",null,"\u94fe\u63a5\uff1a",r.createElement(a.Link,{to:"https://leetcode-cn.com/problems/fraction-to-recurring-decimal/"},"166. \u5206\u6570\u5230\u5c0f\u6570"),r.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",r.createElement("br",null),"\u6807\u7b7e\uff1a\u54c8\u5e0c\u8868\u3001\u6570\u5b66\u3001\u5b57\u7b26\u4e32",r.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50 numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5 \u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570 \u3002")),r.createElement("h2",{id:"\u9898\u89e3-1---typescript"},r.createElement(a.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},r.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),r.createElement("ul",null,r.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.10.04"),r.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a72ms"),r.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.6MB"),r.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),r.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u957f\u9664\u6cd5\uff0c\u50a8\u5b58\u4f59\u6570\u3002")),r.createElement(l.Z,{code:"function fractionToDecimal(numerator: number, denominator: number): string {\n  let flag = '';\n  if (numerator * denominator < 0) flag = '-';\n  numerator = Math.abs(numerator);\n  denominator = Math.abs(denominator);\n  const integer = `${flag}${Math.floor(numerator / denominator)}`;\n  let mod = numerator % denominator;\n  if (mod === 0) return `${integer}`;\n  const map: Record<number, [number, number]> = {};\n  let decimal = '';\n  numerator = mod;\n  while (true) {\n    numerator *= 10;\n    const num = ~~(numerator / denominator);\n    mod = numerator % denominator;\n    if (map[mod] !== undefined && map[mod][0] === num) break;\n    decimal += num;\n    map[mod] = [num, decimal.length - 1];\n    if (mod === 0) break;\n    numerator = mod;\n  }\n  if (mod === 0) return `${integer}.${decimal}`;\n  const [, idx] = map[mod];\n  if (idx === 0) return `${integer}.(${decimal})`;\n  return `${integer}.${decimal.substr(0, idx)}(${decimal.substr(idx)})`;\n}",lang:"typescript"})))}));n["default"]=e=>{var n=r.useContext(a.context),t=n.demos;return r.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&a.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),r.createElement(m,{demos:t})}}}]);