(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[63187],{67172:function(n,e,r){"use strict";r.r(e);var t=r(96832),o=r(22131),l=r(89730),c=t.memo((n=>{n.demos;return t.createElement(t.Fragment,null,t.createElement("div",{className:"markdown"},t.createElement("h1",{id:"79-\u5355\u8bcd\u641c\u7d22"},t.createElement(o.AnchorLink,{to:"#79-\u5355\u8bcd\u641c\u7d22","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"79. \u5355\u8bcd\u641c\u7d22"),t.createElement("blockquote",null,t.createElement("p",null,"\u94fe\u63a5\uff1a",t.createElement(o.Link,{to:"https://leetcode-cn.com/problems/word-search/"},"79. \u5355\u8bcd\u641c\u7d22"),t.createElement("br",null),"\u96be\u5ea6\uff1a\u4e2d\u7b49",t.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u56de\u6eaf\u7b97\u6cd5",t.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c\u548c\u4e00\u4e2a\u5355\u8bcd\uff0c\u627e\u51fa\u8be5\u5355\u8bcd\u662f\u5426\u5b58\u5728\u4e8e\u7f51\u683c\u4e2d\u3002")),t.createElement("h2",{id:"\u9898\u89e3-1---typescript"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2020.9.13"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a168ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a44.1MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002")),t.createElement(l.Z,{code:"function exist(board: string[][], word: string): boolean {\n  const rowLen = board.length;\n  const colLen = board[0].length;\n  const used = new Set<string>();\n  const format = (row: number, col: number) => `${row}:${col}`;\n  const startArr = getStarStArr(word[0]);\n  if (startArr.length === 0) return false;\n  return find(word, startArr);\n  function find(word: string, startArr: [number, number][] = []): boolean {\n    if (word.length === 1) {\n      for (const [row, col] of startArr) {\n        if (board[row][col] === word && !used.has(format(row, col))) return true;\n      }\n      return false;\n    }\n    const nextWord = word.substr(1);\n    for (const [row, col] of startArr) {\n      const formatName = format(row, col);\n      if (used.has(formatName)) continue;\n      used.add(formatName);\n      const arr = findNext(row, col, nextWord[0]);\n      if (arr.length === 0) {\n      } else if (find(nextWord, arr)) return true;\n      used.delete(formatName);\n    }\n    return false;\n  }\n  function getStarStArr(char: string): [number, number][] {\n    const ans: [number, number][] = [];\n    for (let i = 0; i < rowLen; i++)\n      for (let j = 0; j < colLen; j++) {\n        board[i][j] === char && ans.push([i, j]);\n      }\n    return ans;\n  }\n  function findNext(row: number, col: number, char: string): [number, number][] {\n    const ans: [number, number][] = [];\n    row !== 0 && board[row - 1][col] === char && ans.push([row - 1, col]);\n    col !== 0 && board[row][col - 1] === char && ans.push([row, col - 1]);\n    row !== rowLen - 1 && board[row + 1][col] === char && ans.push([row + 1, col]);\n    col !== colLen - 1 && board[row][col + 1] === char && ans.push([row, col + 1]);\n    return ans;\n  }\n}",lang:"typescript"}),t.createElement("h2",{id:"\u9898\u89e3-2---c"},t.createElement(o.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},t.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c++"),t.createElement("ul",null,t.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.02.18"),t.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a144ms"),t.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a7.8MB"),t.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac++"),t.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adfs\u3002")),t.createElement(l.Z,{code:"int dirs[4][2] = {\n    {0, 1},\n    {0, -1},\n    {1, 0},\n    {-1, 0},\n};\nclass Solution {\n   public:\n    int n, m, check[10][10] = {0};\n    bool dfs(vector<vector<char>>& board, string& s, int idx, int row,\n             int col) {\n        if (idx == s.size() - 1) return board[row][col] == s[idx];\n        if (s[idx] != board[row][col]) return 0;\n        check[row][col] = 1;\n        int res = 0;\n        for (int i = 0; i < 4; i++) {\n            int nrow = row + dirs[i][0], ncol = col + dirs[i][1];\n            if (nrow < 0 || nrow >= n || ncol < 0 || ncol >= m ||\n                check[nrow][ncol])\n                continue;\n            if (dfs(board, s, idx + 1, nrow, ncol)) {\n                res = 1;\n                break;\n            }\n        }\n        check[row][col] = 0;\n        return res;\n    }\n    bool exist(vector<vector<char>>& board, string word) {\n        n = board.size();\n        m = board[0].size();\n        for (int row = 0; row < n; row++) {\n            for (int col = 0; col < m; col++) {\n                if (dfs(board, word, 0, row, col)) return 1;\n            }\n        }\n        return 0;\n    }\n};",lang:"cpp"})))}));e["default"]=n=>{var e=t.useContext(o.context),r=e.demos;return t.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),t.createElement(c,{demos:r})}}}]);