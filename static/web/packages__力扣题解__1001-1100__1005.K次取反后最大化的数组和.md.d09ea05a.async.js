(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[33388],{57301:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),m=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1005-k-\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c"},l.createElement(i.AnchorLink,{to:"#1005-k-\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1005. K \u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode-cn.com/problems/maximize-sum-of-array-after-k-negations/"},"1005. K \u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8fd4\u56de\u6570\u7ec4 \u53ef\u80fd\u7684\u6700\u5927\u548c\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---typescript"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---typescript","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - typescript"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.03"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a80ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a39.5MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u6392\u5e8f\u3002")),l.createElement(m.Z,{code:"function largestSumAfterKNegations(nums: number[], k: number): number {\n  const n = nums.length;\n  nums.sort((a, b) => a - b);\n  for (let i = 0; i < n && nums[i] < 0 && k > 0; i++) {\n    nums[i] *= -1;\n    k--;\n  }\n  const sum = nums.reduce((total, num) => total + num, 0);\n  if ((k & 1) === 0) return sum;\n  return sum - 2 * Math.min(...nums);\n}",lang:"typescript"}),l.createElement("h2",{id:"\u9898\u89e3-2---c"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-2---c","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 2 - c"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2021.12.03"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a5.7mb"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1ac"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u904d\u5386\u3002")),l.createElement(m.Z,{code:"int comp(const void *a, const void *b) {\n    return *(int *)a - *(int *)b;\n}\nint largestSumAfterKNegations(int* nums, int numsSize, int k){\n    qsort(nums, numsSize, sizeof(int), comp);\n    for (int i = 0; i < numsSize && nums[i] < 0 && k > 0; i++) {\n      nums[i] *= -1;\n      k--;\n    }\n    int sum = 0, min = 10000;\n    for (int i = 0; i < numsSize; i++) {\n        sum += nums[i];\n        if (min > nums[i]) min = nums[i];\n    }\n    if ((k & 1) == 0) return sum;\n    return sum - 2 * min;\n}",lang:"c"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);