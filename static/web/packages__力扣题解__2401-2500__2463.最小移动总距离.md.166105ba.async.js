(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[56081],{33875:function(e,n,t){"use strict";t.r(n);var l=t(96832),o=t(22131),i=t(89730),r=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"2463-\u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb"},l.createElement(o.AnchorLink,{to:"#2463-\u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"2463. \u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(o.Link,{to:"https://leetcode.cn/problems/minimum-total-distance-traveled/"},"2463. \u6700\u5c0f\u79fb\u52a8\u603b\u8ddd\u79bb"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u56f0\u96be",l.createElement("br",null),"\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u6392\u5e8f",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u8bf7\u4f60\u8fd4\u56de\u6240\u6709\u673a\u5668\u4eba\u79fb\u52a8\u7684\u6700\u5c0f\u603b\u8ddd\u79bb\u3002\u6d4b\u8bd5\u6570\u636e\u4fdd\u8bc1\u6240\u6709\u673a\u5668\u4eba\u90fd\u53ef\u4ee5\u88ab\u7ef4\u4fee\u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(o.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.10"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a40ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a8.2MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1adp[i][j] = \u5f53\u53ea\u6709i\u4e2a\u5de5\u5382\uff0cj\u4e2a\u673a\u5668\u4eba\u65f6\u7684\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\u3002")),l.createElement(i.Z,{code:"class Solution {\npublic:\n    const int MAX = 105;\n    long long minimumTotalDistance(vector<int>& robot, vector<vector<int>>& factory) {\n        sort(robot.begin(), robot.end());\n        sort(factory.begin(), factory.end(), [](auto &a, auto &b){ return a[0] < b[0]; });\n        int n = factory.size(), m = robot.size();\n        // dp[i][j] = \u5f53\u53ea\u6709i\u4e2a\u5de5\u5382\uff0cj\u4e2a\u673a\u5668\u4eba\u65f6\u7684\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\n        long long dp[MAX][MAX];\n        memset(dp, 0x3f, sizeof(long long) * MAX * MAX);\n        for (int i = 0; i <= n; i++) dp[i][0] = 0;\n        for (int i = 1; i <= n; i++) {\n            auto &f = factory[i - 1];\n            for (int j = 1; j <= m; j++) {\n                // \u5f53\u524d\u5de5\u5382\u4e0d\u505a\u64cd\u4f5c\u7684\u65f6\u5019 \u7b49\u4e8e \u524d\u4e00\u4e2a\u5de5\u5382\n                dp[i][j] = dp[i - 1][j];\n                long long sum = 0;\n                for (int k = j; k >= max(1, j - f[1] + 1); k--) {\n                    sum += abs(robot[k - 1] - f[0]);\n                    dp[i][j] = min(dp[i][j], sum + dp[i - 1][k - 1]);\n                }\n                // for (int k = 1; k <= min(j, f[1]); k++) {\n                //     sum += abs(robot[j - k] - f[0]);\n                //     dp[i][j] = min(dp[i][j], sum + dp[i - 1][j - k]);\n                // }\n            }\n        }\n        return dp[n][m];\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(o.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&o.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(r,{demos:t})}}}]);