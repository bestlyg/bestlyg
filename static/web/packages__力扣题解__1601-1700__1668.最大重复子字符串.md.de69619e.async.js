(self["webpackChunkblog"]=self["webpackChunkblog"]||[]).push([[4690],{48745:function(e,n,t){"use strict";t.r(n);var l=t(96832),i=t(22131),r=t(89730),c=l.memo((e=>{e.demos;return l.createElement(l.Fragment,null,l.createElement("div",{className:"markdown"},l.createElement("h1",{id:"1668-\u6700\u5927\u91cd\u590d\u5b50\u5b57\u7b26\u4e32"},l.createElement(i.AnchorLink,{to:"#1668-\u6700\u5927\u91cd\u590d\u5b50\u5b57\u7b26\u4e32","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"1668. \u6700\u5927\u91cd\u590d\u5b50\u5b57\u7b26\u4e32"),l.createElement("blockquote",null,l.createElement("p",null,"\u94fe\u63a5\uff1a",l.createElement(i.Link,{to:"https://leetcode.cn/problems/maximum-repeating-substring/"},"1668. \u6700\u5927\u91cd\u590d\u5b50\u5b57\u7b26\u4e32"),l.createElement("br",null),"\u96be\u5ea6\uff1a\u7b80\u5355",l.createElement("br",null),"\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u5b57\u7b26\u4e32\u5339\u914d",l.createElement("br",null),"\u7b80\u4ecb\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 sequence \u548c word \uff0c\u8bf7\u4f60\u8fd4\u56de \u6700\u5927\u91cd\u590d\u503c k \u3002")),l.createElement("h2",{id:"\u9898\u89e3-1---cpp"},l.createElement(i.AnchorLink,{to:"#\u9898\u89e3-1---cpp","aria-hidden":"true",tabIndex:-1},l.createElement("span",{className:"icon icon-link"})),"\u9898\u89e3 1 - cpp"),l.createElement("ul",null,l.createElement("li",null,"\u7f16\u8f91\u65f6\u95f4\uff1a2022.11.03"),l.createElement("li",null,"\u6267\u884c\u7528\u65f6\uff1a0ms"),l.createElement("li",null,"\u5185\u5b58\u6d88\u8017\uff1a6.3MB"),l.createElement("li",null,"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"),l.createElement("li",null,"\u89e3\u6cd5\u4ecb\u7ecd\uff1a\u5b57\u7b26\u4e32\u67e5\u627e\u5b50\u4e32\uff0c\u901a\u8fc7kmp\u5feb\u901f\u67e5\u627e\u5b50\u4e32\u3002")),l.createElement(r.Z,{code:"class Solution {\npublic:\n    vector<int> getNext(string &word) {\n        int n = word.size();\n        vector<int> next(n, -1);\n        for (int i = 1, j = -1; i < n; i++) {\n            while (j != -1 && word[j + 1] != word[i]) j = next[j];\n            if (word[j + 1] == word[i]) j++;\n            next[i] = j;\n        }\n        return next;\n    }\n    int maxRepeating(string sequence, string word) {\n        int n = sequence.size(), ans = 0;\n        vector<int> next = getNext(word), list(n, 0);\n        for (int i = 0, j = -1; i < n; i++) {\n            while (j != -1 && word[j + 1] != sequence[i]) j = next[j];\n            if (word[j + 1] == sequence[i]) j++;\n            if (j == word.size() - 1) {\n                list[i] = (i >= word.size() ? list[i - word.size()] : 0)+ 1;\n                ans = max(ans, list[i]);\n                j = next[j];\n            }\n        }\n        return ans;\n    }\n};",lang:"cpp"})))}));n["default"]=e=>{var n=l.useContext(i.context),t=n.demos;return l.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.createElement(c,{demos:t})}}}]);