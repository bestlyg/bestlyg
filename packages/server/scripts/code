from sortedcontainers import SortedList
class MovieRentingSystem:
    def __init__(self, n: int, entries: List[List[int]]):
        self.prices = defaultdict(lambda: defaultdict(int))
        self.movies = defaultdict(SortedList)
        for shop, movie, price in entries:
            self.prices[shop][movie] = price
            self.movies[movie].add((price, shop))
        self.rented = SortedList()
    def search(self, movie: int) -> List[int]:
        return list(map(lambda v: v[1], self.movies[movie][:5]))
    def rent(self, shop: int, movie: int) -> None:
        price = self.prices[shop][movie]
        self.rented.add((price, shop, movie))
        self.movies[movie].remove((price, shop))
    def drop(self, shop: int, movie: int) -> None:
        price = self.prices[shop][movie]
        self.movies[movie].add((price, shop))
        self.rented.remove((price, shop, movie))
    def report(self) -> List[List[int]]:
        return list(map(lambda v: list(v[1:]), self.rented[:5]))