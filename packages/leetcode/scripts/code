class Solution:
    def minimumDifference(self, nums: List[int]) -> int:
        n = len(nums)

        prev_arr = [0] * n
        prev_sum = 0
        q = []
        for i in range(n // 3 * 2):
            heappush(q, -nums[i])
            prev_sum += nums[i]
            if len(q) > n // 3: prev_sum -= -heappop(q)
            prev_arr[i] = prev_sum

        next_arr = [0] * n
        next_sum = 0
        q = []
        for i in range(n - 1, n // 3 - 1, -1):
            heappush(q, nums[i])
            next_sum += nums[i]
            if len(q) > n // 3: next_sum -= heappop(q)
            next_arr[i] = next_sum
        return min(
            prev_arr[i] - next_arr[i + 1]
            for i in range(n // 3 - 1, n // 3 * 2)
        )