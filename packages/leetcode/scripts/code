from sortedcontainers import SortedDict
class Solution:
    def eatenApples(self, apples: List[int], days: List[int]) -> int:
        res = 0
        day = 1
        expiredDict = SortedDict()
        while day <= len(apples) or len(expiredDict):
            while len(expiredDict) and -expiredDict.peekitem()[0] <= day:
                expiredDict.popitem()
            if day <= len(apples) and days[day - 1] != 0:
                time, cnt = -(days[day - 1] + day), apples[day - 1]
                if not time in expiredDict: expiredDict[time] = 0
                expiredDict[time] += cnt
            if len(expiredDict):
                item = expiredDict.popitem()
                res += 1
                if item[1] != 1:
                    expiredDict[item[0]] = item[1] - 1
            day += 1
        return res