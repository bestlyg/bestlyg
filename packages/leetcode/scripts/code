
def get_primes2(n: int) -> List[bool]:
    n += 1
    primes = [True for _ in range(n)]
    primes[0] = primes[1] = False
    for i in range(2, n):
        if primes[i]:
            j = 2
            while i * j < n:
                primes[i*j] = False
                j += 1
    return primes
primes = get_primes2(4 * 10 ** 6 + 1)
class Solution:
    def diagonalPrime(self, nums: List[List[int]]) -> int:
        res = 0
        n = len(nums)
        for i in range(n):
            if primes[nums[i][i]]: res = max(res, nums[i][i])
            if primes[nums[i][n - 1 - i]]: res = max(res, nums[i][n - 1 - i])
        return res