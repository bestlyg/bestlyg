class Solution:
    def findBall(self, grid: List[List[int]]) -> List[int]:
        n = len(grid)
        m = len(grid[0])
        def in_board(i: int, j: int): return 0 <= i < n and 0 <= j < m
        # -1 = left, 1 = right
        def run(i: int, j: int, f: int, used: Set[Tuple[int, int]]) -> int:
            if (i, j) in used: return -1
            used.add((i, j))
            if i == n: return j
            if not in_board(i, j): return -1
            g = grid[i][j]
            if g == 1 and f == 1: return run(i, j + 1, -1, used)
            if g == -1 and f == -1: return run(i, j - 1, 1, used)
            if in_board(i + 1, j): return run(i + 1, j, grid[i + 1][j], used)
            if i + 1 == n: return j
            return -1
        return [run(0, j, grid[0][j], set()) for j in range(m)]