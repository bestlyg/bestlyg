class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        counter = list(Counter(candidates).items())
        res = []
        cur = 0
        arr = []
        def dfs(i: int):
            nonlocal cur, arr
            if cur == target:
                res.append(list(arr))
                return
            if i == len(counter): return
            dfs(i + 1)
            val, max_cnt = counter[i]
            for c in range(1, max_cnt + 1):
                if cur + val * c > target: break
                arr += [val] * c
                cur += val * c
                dfs(i + 1)
                cur -= val * c
                arr = arr[:-c]
        dfs(0)
        return res