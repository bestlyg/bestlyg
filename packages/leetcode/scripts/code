class Solution:
    def closestMeetingNode(self, edges: List[int], node1: int, node2: int) -> int:
        n = len(edges)
        darr1 = [-1] * n
        d = 0
        p = node1
        while p != -1 and darr1[p] == -1:
            darr1[p] = d
            p = edges[p]
            d += 1
        darr2 = [-1] * n
        d = 0
        p = node2
        res = inf
        resVal = inf
        while p != -1 and darr2[p] == -1:
            darr2[p] = d
            if darr1[p] != -1 and darr2[p] != -1:
                newVal = max(darr1[p], darr2[p])
                if newVal < resVal:
                    resVal = newVal
                    res = p
                elif newVal == resVal:
                    res = min(res, p)
            p = edges[p]
            d += 1
        return res if res != inf else -1