class Solution:
    def maxCollectedFruits(self, fruits: List[List[int]]) -> int:
        n = len(fruits)
        mid_val = 0
        for i in range(n):
            mid_val += fruits[i][i]
            fruits[i][i] = 0
        @cache
        def dfs1(i: int, j: int) -> int:
            if i == n - 1:
                if j == n - 1: return 0
                return -inf
            res = dfs1(i + 1, j)
            if j > n // 2:
                res = max(res, dfs1(i + 1, j - 1))
            if j < n - 1:
                res = max(res, dfs1(i + 1, j + 1))
            return res + fruits[i][j]
        @cache
        def dfs2(i: int, j: int) -> int:
            if j == n - 1:
                if i == n - 1: return 0
                return -inf
            res = dfs2(i, j + 1)
            if i > n // 2:
                res = max(res, dfs2(i - 1, j + 1))
            if i < n - 1:
                res = max(res, dfs2(i + 1, j + 1))
            return res + fruits[i][j]

        return mid_val + dfs1(0, n - 1) + dfs2(n - 1, 0)