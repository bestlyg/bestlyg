class Solution:
    def latestTimeCatchTheBus(self, buses: List[int], passengers: List[int], capacity: int) -> int:
        buses.sort()
        passengers.sort()
        bus_len = len(buses)
        pas_len = len(passengers)
        # print('buses', buses)
        # print('passengers', passengers)

        cur_pre = 0
        pre_arr = [cur_pre] * pas_len
        for pas_idx in range(pas_len):
            if passengers[pas_idx - 1] != passengers[pas_idx] - 1:
                cur_pre = passengers[pas_idx] - 1
            pre_arr[pas_idx] = cur_pre
        # print('pre_arr', pre_arr)
                
        res = 0
        pas_idx = 0
        pas_cnt = 0
        for bus_idx in range(bus_len):
            # print(f'===> bidx = {bus_idx}, pidx = {pas_idx}, res = {res}, pcnt = {pas_cnt}')
            while pas_idx < pas_len and passengers[pas_idx] <= buses[bus_idx] and pas_cnt < capacity:
                if pas_cnt + 1 == capacity:
                    res = pre_arr[pas_idx]
                pas_cnt += 1
                pas_idx += 1
            # print(f'bidx = {bus_idx}, pidx = {pas_idx}, res = {res}, pcnt = {pas_cnt}')
            if pas_cnt < capacity:
                # print("IN")
                if pas_idx > 0 and passengers[pas_idx - 1] != buses[bus_idx] or pas_idx == 0:
                    res = buses[bus_idx]
                elif pas_idx > 0:
                    res = pre_arr[pas_idx - 1]
            pas_cnt -= min(capacity, pas_cnt)
        return res