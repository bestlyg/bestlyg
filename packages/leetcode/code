class Solution:
    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:
        nodes = [[] for _ in range(n + 1)]
        for t in times: nodes[t[0]].append(t)
        q = [(0, k)]
        used = { k: 0 }
        used2 = set([k])
        while q:
            t, node = heappop(q)
            used2.add(node)
            if len(used2) == n: return t
            for time in nodes[node]:
                _, child, time_offset = time
                next_time = time_offset + t
                if child not in used or next_time < used[child]:
                    used[child] = next_time
                    heappush(q, (next_time, child))
        return -1