{
    "id": "199",
    "name": "199.二叉树的右视图",
    "url": "https://leetcode.cn/problems/binary-tree-right-side-view",
    "desc": "给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。",
    "solutions": [
        {
            "date": "2020-04-22",
            "time": 112,
            "memory": 34.3,
            "script": "javascript",
            "desc": "层序遍历当前层遍历完后压栈最后一个元素。",
            "code": "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar rightSideView = function (root) {\n  if (root === null) return [];\n  const res = [root.val];\n  const queue = [root];\n  let levelSize = 1;\n  while (queue.length !== 0) {\n    const node = queue.shift();\n    // console.log(\"===================\");\n    // console.log(node);\n    if (node.left !== null) queue.push(node.left);\n    if (node.right !== null) queue.push(node.right);\n    if (--levelSize === 0 && queue.length !== 0) {\n      // console.log(\"in\");\n      levelSize = queue.length;\n      res.push(queue[levelSize - 1].val);\n    }\n  }\n  return res;\n};"
        }
    ],
    "tagList": [
        "树",
        "深度优先搜索",
        "广度优先搜索",
        "二叉树"
    ],
    "level": "Medium"
}