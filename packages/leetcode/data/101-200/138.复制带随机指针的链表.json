{
  "name": "138. 复制带随机指针的链表",
  "url": "https://leetcode-cn.com/problems/copy-list-with-random-pointer/",
  "difficulty": "中等",
  "tag": ["哈希表", "链表"],
  "desc": "给你一个长度为 n 的链表，每个节点包含一个额外增加的随机指针 random ，该指针可以指向链表中的任何节点或空节点。返回复制链表的头节点。",
  "solutions": [
    {
      "date": 1615651200000,
      "time": 96,
      "memory": 39.5,
      "script": "typescript",
      "desc": "先克隆一份再进行拆除。",
      "code": "function copyRandomList(head: Node | null): Node | null {\n  if (head === null) return null;\n  let p: Node | null = head;\n  while (p !== null) {\n    p.next = new Node(p.val, p.next, p.random);\n    p = p.next.next;\n  }\n  p = head.next;\n  while (p) {\n    if (p.random) p.random = p.random!.next;\n    p = p.next?.next ?? null;\n  }\n  const newHead: Node | null = head.next;\n  p = head;\n  while (p) {\n    const q: Node = p.next!;\n    p.next = q.next;\n    q.next = q.next?.next ?? null;\n    p = p.next;\n  }\n  return newHead;\n}"
    },
    {
      "date": 1626883200000,
      "time": 104,
      "memory": 39.7,
      "script": "typescript",
      "desc": "节点复制。",
      "code": "function copyRandomList(head: Node | null): Node | null {\n  if (head === null) return null;\n  let p: Node | null = head;\n  while (p) {\n    const next = p.next;\n    const newNode = new Node(p.val, next);\n    p.next = newNode;\n    p = next;\n  }\n  p = head;\n  while (p) {\n    const newNode = p.next;\n    newNode!.random = p.random?.next ?? null;\n    p = p.next!.next;\n  }\n  p = head;\n  const ans = head.next;\n  while (p) {\n    const next = p.next?.next ?? null;\n    const newNode = p.next!;\n    newNode.next = next?.next ?? null;\n    p.next = next;\n    p = next;\n  }\n  return ans;\n}"
    }
  ]
}
