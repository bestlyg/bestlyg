{
    "id": "121",
    "name": "121.买卖股票的最佳时机",
    "url": "https://leetcode.cn/problems/best-time-to-buy-and-sell-stock",
    "desc": "给定一个数组 prices ，它的第  i 个元素  prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。",
    "solutions": [
        {
            "date": "2022-03-14",
            "time": 100,
            "memory": 91,
            "script": "cpp",
            "desc": "考虑到只能交易一次，每遍历到一个值与前面的最小值进行比较。",
            "code": "class Solution {\n   public:\n    int maxProfit(vector<int> &prices) {\n        int nmin = prices[0], ans = 0;\n        for (int i = 1; i < prices.size(); i++) {\n            ans = max(ans, prices[i] - nmin);\n            nmin = min(nmin, prices[i]);\n        }\n        return ans;\n    }\n};"
        },
        {
            "script": "python",
            "time": 224,
            "memory": 25.9,
            "desc": "同上。",
            "code": "class Solution:\n            def maxProfit(self, prices: List[int]) -> int:\n                prev = prices[0]\n                res = 0\n                for i in range(1, len(prices)):\n                    res = max(res, prices[i] - prev)\n                    prev = min(prev, prices[i])\n                return res\n",
            "date": "2023-10-01"
        }
    ],
    "tagList": ["数组", "动态规划"],
    "level": "Easy"
}
