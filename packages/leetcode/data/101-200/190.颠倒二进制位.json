{
    "id": "190",
    "name": "190.颠倒二进制位",
    "url": "https://leetcode.cn/problems/reverse-bits",
    "difficulty": "简单",
    "tag": [
        "位运算",
        "分治"
    ],
    "desc": "颠倒给定的 32 位无符号整数的二进制位。",
    "solutions": [
        {
            "date": 1616947200000,
            "time": 156,
            "memory": 39.5,
            "script": "typescript",
            "desc": "拆分二进制进行倒置。",
            "code": "function reverseBits(n: number): number {\n  const bits = n.toString(2).split('');\n  while (bits.length < 32) bits.unshift('0');\n  return parseInt(bits.reverse().join(''), 2);\n}"
        },
        {
            "date": 1616947200000,
            "time": 96,
            "memory": 36.5,
            "script": "typescript",
            "desc": "或运算进行逐一赋值。",
            "code": "function reverseBits(n: number): number {\n  let ans = 0;\n  for (let i = 0; i < 32 && n !== 0; i++) {\n    ans |= (n & 1) << (31 - i);\n    n >>= 1;\n  }\n  return ans >>> 0;\n}"
        },
        {
            "date": 1627574400000,
            "time": 88,
            "memory": 39.6,
            "script": "typescript",
            "desc": "二进制逐位倒序赋值。",
            "code": "function reverseBits(n: number): number {\n  let ans = 0;\n  for (let i = 0; i < 32 && n > 0; i++) {\n    ans |= (n & 1) << (31 - i);\n    n >>>= 1;\n  }\n  return ans >>> 0;\n}"
        }
    ]
}