{
  "name": "135. 分发糖果",
  "url": "https://leetcode-cn.com/problems/candy/",
  "difficulty": "困难",
  "tag": ["贪心"],
  "desc": "老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。那么这样下来，老师至少需要准备多少颗糖果呢？。",
  "solutions": [
    {
      "date": 1608739200000,
      "time": 88,
      "memory": 43.2,
      "script": "typescript",
      "desc": "两次遍历取最大值。",
      "code": "function candy(ratings: number[]): number {\n  const left: number[] = [];\n  const len = ratings.length;\n  for (let i = 0; i < len; i++) {\n    if (i === 0 || ratings[i - 1] >= ratings[i]) {\n      left[i] = 1;\n    } else {\n      left[i] = left[i - 1] + 1;\n    }\n  }\n  let right = 1;\n  let ans = 0;\n  for (let i = len - 1; i >= 0; i--) {\n    if (i === len - 1 || ratings[i + 1] >= ratings[i]) {\n      right = 1;\n    } else {\n      right++;\n    }\n    ans += Math.max(right, left[i]);\n  }\n  return ans;\n}"
    },
    {
      "date": 1626796800000,
      "time": 104,
      "memory": 42.7,
      "script": "typescript",
      "desc": "从左往右遍历一遍，从右往左遍历一遍，取最大值。",
      "code": "function candy(ratings: number[]): number {\n  const n = ratings.length;\n  const l = new Array(n).fill(1);\n  const r = new Array(n).fill(1);\n  for (let i = 1; i < n; i++) {\n    if (ratings[i] > ratings[i - 1]) l[i] = l[i - 1] + 1;\n  }\n  for (let i = n - 2; i >= 0; i--) {\n    if (ratings[i] > ratings[i + 1]) r[i] = r[i + 1] + 1;\n  }\n  let ans = 0;\n  for (let i = 0; i < n; i++) ans += Math.max(l[i], r[i]);\n  return ans;\n}"
    }
  ]
}
