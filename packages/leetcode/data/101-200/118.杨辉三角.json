{
    "id": "118",
    "name": "118.杨辉三角",
    "url": "https://leetcode.cn/problems/pascals-triangle",
    "desc": "给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。",
    "solutions": [
        {
            "date": "2020-12-06",
            "time": 88,
            "memory": 40.1,
            "script": "typescript",
            "desc": "迭代遍历。",
            "code": "function generate(numRows: number): number[][] {\n  if (numRows === 0) return [];\n  const ans: number[][] = [[1]];\n  for (let i = 2; i <= numRows; i++) {\n    const last = ans[ans.length - 1];\n    const arr = [];\n    for (let j = 0, l = last.length - 1; j < l; j++) {\n      arr.push(last[j] + last[j + 1]);\n    }\n    arr.unshift(1);\n    arr.push(1);\n    ans.push(arr);\n  }\n  return ans;\n}"
        },
        {
            "date": "2021-12-21",
            "time": 0,
            "memory": 6.3,
            "script": "cpp",
            "desc": "从后往前遍历。",
            "code": "class Solution {\n   public:\n    vector<vector<int>> generate(int numRows) {\n        vector<vector<int>> ans(numRows, vector<int>());\n        ans[0].push_back(1);\n        for (int i = 1; i < numRows; i++) {\n            ans[i].push_back(1);\n            for (int j = 1; j < i; j++) {\n                ans[i].push_back(ans[i - 1][j] + ans[i - 1][j - 1]);\n            }\n            ans[i].push_back(1);\n        }\n        return ans;\n    }\n};"
        }
    ],
    "tagList": [
        "数组",
        "动态规划"
    ],
    "level": "Easy"
}