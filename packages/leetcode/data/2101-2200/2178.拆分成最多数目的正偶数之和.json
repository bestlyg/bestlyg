{
    "id": "2279",
    "name": "2178.拆分成最多数目的正偶数之和",
    "url": "https://leetcode.cn/problems/maximum-split-of-positive-even-integers",
    "difficulty": "中等",
    "tag": [
        "贪心",
        "数学",
        "回溯"
    ],
    "desc": "给你一个整数 finalSum 。请你将它拆分成若干个 互不相同 的正偶数之和，且拆分出来的正偶数数目 最多 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 200,
            "memory": 39.5,
            "desc": "贪心。",
            "code": "class Solution {\npublic:\n    vector<long long> maximumEvenSplit(long long finalSum) {\n        vector<long long> res;\n        if (finalSum % 2 != 0) return res;\n        for (int num = 2; finalSum >= num; num += 2) {\n            res.push_back(num);\n            finalSum -= num;\n        }\n        res[res.size() - 1] += finalSum;\n        return res;\n    }\n};",
            "date": 1688572800000
        },
        {
            "script": "python",
            "time": 624,
            "memory": 25.6,
            "desc": "同上。",
            "code": "class Solution:\n    def maximumEvenSplit(self, finalSum: int) -> List[int]:\n        res = []\n        if finalSum % 2 != 0: return res\n        num = 2\n        while num <= finalSum:\n            res.append(num)\n            finalSum -= num\n            num += 2\n        res[-1] += finalSum\n        return res",
            "date": 1688572800000
        },
        {
            "script": "rust",
            "time": 40,
            "memory": 3.2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn maximum_even_split(mut final_sum: i64) -> Vec<i64> {\n        let mut res = vec![];\n        if final_sum % 2 == 0 {\n            let mut num = 2;\n            while num <= final_sum {\n                res.push(num);\n                final_sum -= num;\n                num += 2;\n            }\n            *res.last_mut().unwrap() += final_sum;\n        }\n        res\n    }\n}",
            "date": 1688572800000
        }
    ]
}