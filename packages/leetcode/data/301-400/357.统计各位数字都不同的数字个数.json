{
    "id": "357",
    "name": "357.统计各位数字都不同的数字个数",
    "url": "https://leetcode.cn/problems/count-numbers-with-unique-digits",
    "difficulty": "中等",
    "tag": [
        "数学",
        "动态规划",
        "回溯"
    ],
    "desc": "给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10n 。",
    "solutions": [
        {
            "date": 1647446400000,
            "time": 0,
            "memory": 5.9,
            "script": "cpp",
            "desc": "提前计算答案进行累加。",
            "code": "class Solution {\n   public:\n    int lists[8] = {9, 81, 648, 4536, 27216, 136080, 544320, 1632960};\n    int countNumbersWithUniqueDigits(int n) {\n        int ans = 1;\n        for (int i = 1; i <= n; i++) {\n            ans += lists[i - 1];\n        }\n        return ans;\n    }\n};"
        },
        {
            "date": 1647446400000,
            "time": 0,
            "memory": 5.9,
            "script": "cpp",
            "desc": "计算每位数有几种可能性。",
            "code": "class Solution {\n   public:\n    int countNumbersWithUniqueDigits(int n) {\n        if (n == 0) return 1;\n        vector<int> dp(n + 1);\n        dp[0] = 1;\n        dp[1] = 9;\n        for (int i = 2, num = 9; i <= n; i++, num--) dp[i] = dp[i - 1] * num;\n        int ans = 0;\n        for (int i = 0; i <= n; i++) ans += dp[i];\n        return ans;\n    }\n};"
        },
        {
            "date": 1649606400000,
            "time": 0,
            "memory": 5.9,
            "script": "cpp",
            "desc": "遍历统计每种情况的可能数量。",
            "code": "class Solution {\n   public:\n    int countNumbersWithUniqueDigits(int n) {\n        if (n == 0) return 1;\n        if (n == 1) return 10;\n        int ans = 10, num = 9;\n        for (int i = 2, cur = 9; i <= n; i++, cur--) {\n            num *= cur;\n            ans += num;\n        }\n        return ans;\n    }\n};"
        }
    ]
}