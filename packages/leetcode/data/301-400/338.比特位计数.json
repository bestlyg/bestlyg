{
    "id": "338",
    "name": "338.比特位计数",
    "url": "https://leetcode.cn/problems/counting-bits",
    "desc": "给定一个非负整数 num。对于 0 ≤ i ≤ num 范围中的每个数字 i ，计算其二进制数中的 1 的数目并将它们作为数组返回。",
    "solutions": [
        {
            "date": "2021-03-03",
            "time": 284,
            "memory": 48.7,
            "script": "typescript",
            "desc": "计算每一个数的 1 位。",
            "code": "function countBits(num: number): number[] {\n  return new Array(num + 1).fill(0).map(\n    (_, i) =>\n      i\n        .toString(2)\n        .split('')\n        .filter(v => v === '1').length\n  );\n}"
        },
        {
            "date": "2021-03-03",
            "time": 120,
            "memory": 50.4,
            "script": "typescript",
            "desc": "计算每一个只含一个 1 的数，进行批量填充。",
            "code": "function countBits(num: number): number[] {\n  const ans = [0, 1];\n  let max2 = 1;\n  while (max2 < num) {\n    max2 <<= 1;\n    ans.push(...ans.map(v => v + 1));\n  }\n  ans.length = num + 1;\n  return ans;\n}"
        },
        {
            "date": "2021-03-03",
            "time": 156,
            "memory": 44.4,
            "script": "typescript",
            "desc": "优化题解 2。",
            "code": "function countBits(num: number): number[] {\n  if (num === 0) return [0];\n  const ans = [0, 1];\n  for (let i = 2; i <= num; i++) ans[i] = ans[~~(i / 2)] + (i & 1);\n  return ans;\n}"
        },
        {
            "date": "2021-12-23",
            "time": 8,
            "memory": 8.4,
            "script": "cpp",
            "desc": "当遇到 2 的指数幂后，从 0 开始重新遍历。",
            "code": "class Solution {\n   public:\n    vector<int> countBits(int n) {\n        vector<int> ans;\n        ans.push_back(0);\n        if (n == 0) return ans;\n        ans.push_back(1);\n        if (n == 1) return ans;\n        for (int num = 2, i = 0; num <= n; num++, i++) {\n            if ((num & (num - 1)) == 0) i = 0;\n            ans.push_back(ans[i] + 1);\n        }\n        return ans;\n    }\n};"
        }
    ],
    "tagList": ["位运算", "动态规划"],
    "level": "Easy"
}
