{
    "id": "380",
    "name": "380.O(1)时间插入、删除和获取随机元素",
    "url": "https://leetcode.cn/problems/insert-delete-getrandom-o1",
    "desc": "设计一个支持在平均 时间复杂度 O(1) 下，执行以下操作的数据结构。",
    "solutions": [
        {
            "date": "2021-07-30",
            "time": 500,
            "memory": 88.1,
            "script": "typescript",
            "desc": "利用哈希表快速删增。",
            "code": "class RandomizedSet {\n  private set = new Set<number>();\n  insert(val: number): boolean {\n    if (this.set.has(val)) return false;\n    this.set.add(val);\n    return true;\n  }\n  remove(val: number): boolean {\n    if (!this.set.has(val)) return false;\n    this.set.delete(val);\n    return true;\n  }\n  getRandom(): number {\n    return [...this.set][this.random(0)];\n  }\n  private random(minNum: number) {\n    const maxNum = this.set.size - 1;\n    return parseInt((Math.random() * (maxNum - minNum + 1) + minNum) as any, 10);\n  }\n}"
        },
        {
            "date": "2021-07-30",
            "time": 420,
            "memory": 87.2,
            "script": "typescript",
            "desc": "优化 O(1)。",
            "code": "class RandomizedSet {\n  private map = new Map<number, number>();\n  private list: number[] = [];\n  insert(val: number): boolean {\n    if (this.map.has(val)) return false;\n    this.map.set(val, this.list.length);\n    this.list.push(val);\n    return true;\n  }\n  remove(val: number): boolean {\n    if (!this.map.has(val)) return false;\n    const curIdx = this.map.get(val)!;\n    const lastIdx = this.list.length - 1;\n    this.map.set(this.list[lastIdx], curIdx);\n    this.map.delete(val);\n    [this.list[curIdx], this.list[lastIdx]] = [this.list[lastIdx], this.list[curIdx]];\n    this.list.pop();\n    return true;\n  }\n  getRandom(): number {\n    return this.list[this.random()];\n  }\n  private random() {\n    const minNum = 0;\n    const maxNum = this.list.length - 1;\n    return parseInt((Math.random() * (maxNum - minNum + 1) + minNum) as any, 10);\n  }\n}"
        },
        {
            "date": "2022-04-13",
            "time": 188,
            "memory": 94.7,
            "script": "cpp",
            "desc": "利用队列末尾增删 O1 来维护时间复杂度。",
            "code": "class RandomizedSet {\n   public:\n    vector<int> list;\n    unordered_map<int, int> m;\n    RandomizedSet() { srand((int)time(0)); }\n    bool insert(int val) {\n        if (m.count(val)) return false;\n        m[val] = list.size();\n        list.push_back(val);\n        return true;\n    }\n    bool remove(int val) {\n        if (!m.count(val)) return false;\n        int idx = m[val], last_idx = list.size() - 1;\n        m[list[last_idx]] = idx;\n        swap(list[idx], list[last_idx]);\n        list.pop_back();\n        m.erase(val);\n        return true;\n    }\n    int getRandom() {\n        int idx = random() % list.size();\n        return list[idx];\n    }\n};"
        }
    ],
    "tagList": ["设计", "数组", "哈希表", "数学", "随机化"],
    "level": "Medium"
}
