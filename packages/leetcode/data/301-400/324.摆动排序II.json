{
    "id": "324",
    "name": "324.摆动排序II",
    "url": "https://leetcode.cn/problems/wiggle-sort-ii",
    "difficulty": "中等",
    "tag": [
        "数组",
        "分治",
        "快速选择",
        "排序"
    ],
    "desc": "汽车从起点出发驶向目的地，该目的地位于出发位置东面 target 英里处。为了到达目的地，汽车所必要的最低加油次数是多少？如果无法到达目的地，则返回 -1 。",
    "solutions": [
        {
            "date": 1656691200000,
            "time": 92,
            "memory": 15.8,
            "script": "cpp",
            "desc": "dp[i] = 当 i 为最后一个加油站时，最远能跑的公里数。",
            "code": "class Solution {\n   public:\n    int minRefuelStops(int target, int startFuel,\n                       vector<vector<int>>& stations) {\n        int n = stations.size();\n        vector<long> dp(n + 1);\n        dp[0] = startFuel;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j >= 0; j--) {\n                if (dp[j] >= stations[i][0]) {\n                    dp[j + 1] = max(dp[j + 1], dp[j] + stations[i][1]);\n                }\n            }\n        }\n        for (int i = 0; i <= n; i++) {\n            if (dp[i] >= target) return i;\n        }\n        return -1;\n    }\n};"
        }
    ]
}