{
    "name": "398. 随机数索引",
    "url": "https://leetcode-cn.com/problems/random-pick-index/",
    "difficulty": "中等",
    "tag": [
        "水塘抽样",
        "哈希表",
        "数学",
        "随机化"
    ],
    "desc": "给定一个可能含有重复元素的整数数组，要求随机输出给定的数字的索引。 您可以假设给定的数字一定存在于数组中。",
    "solutions": [
        {
            "date": 1650816000000,
            "time": 92,
            "memory": 37.3,
            "script": "cpp",
            "desc": "排序后二分遍历。",
            "code": "class Solution {\n   public:\n    vector<int> idxs, nums;\n    int n;\n    Solution(vector<int> &nums) {\n        srand(time(0));\n        this->nums = nums;\n        n = nums.size();\n        for (int i = 0; i < n; i++) idxs.push_back(i);\n        sort(idxs.begin(), idxs.end(),\n             [&](int &i1, int &i2) -> bool { return nums[i1] < nums[i2]; });\n    }\n    int pick(int target) {\n        int start = find1(0, n, target);\n        int end = find2(start, n - 1, target);\n        return idxs[random(start, end)];\n    }\n    int find1(int l, int r, int target) {\n        int m;\n        while (l < r) {\n            m = (l + r) >> 1;\n            if (nums[idxs[m]] >= target)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n    int find2(int l, int r, int target) {\n        int m;\n        while (l < r) {\n            m = (l + r + 1) >> 1;\n            if (nums[idxs[m]] <= target)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    int random(int a, int b) { return rand() % (b - a + 1) + a; }\n};"
        },
        {
            "date": 1650816000000,
            "time": 44,
            "memory": 34.7,
            "script": "cpp",
            "desc": "水塘抽样。",
            "code": "class Solution {\n   public:\n    vector<int> nums;\n    int n;\n    Solution(vector<int>& nums) {\n        this->nums = nums;\n        n = nums.size();\n        srand(time(0));\n    }\n    int pick(int target) {\n        int cnt = 0, ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] != target) continue;\n            if (rand() % ++cnt == 0) {\n                ans = i;\n            }\n        }\n        return ans;\n    }\n};"
        }
    ]
}