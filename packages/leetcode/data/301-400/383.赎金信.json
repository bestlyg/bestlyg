{
    "id": "383",
    "name": "383.赎金信",
    "url": "https://leetcode.cn/problems/ransom-note",
    "desc": "给你一个赎金信 (ransomNote) 字符串和一个杂志(magazine)字符串，判断 ransomNote 能不能由 magazines 里面的字符构成。如果可以构成，返回 true ；否则返回 false 。",
    "solutions": [
        {
            "date": "2021-12-04",
            "time": 92,
            "memory": 41,
            "script": "typescript",
            "desc": "遍历。",
            "code": "function canConstruct(ransomNote: string, magazine: string): boolean {\n  const map: Record<string, number> = {};\n  for (const c of magazine) map[c] = (map[c] ?? 0) + 1;\n  for (const c of ransomNote) {\n    if (!map[c]) return false;\n    map[c]--;\n  }\n  return true;\n}"
        },
        {
            "date": "2021-12-04",
            "time": 156,
            "memory": 6.4,
            "script": "c",
            "desc": "遍历。",
            "code": "bool canConstruct(char * ransomNote, char * magazine){\n    int ans[26] = {0};\n    for (int i = 0; i < strlen(magazine); i++) ans[magazine[i] - 'a']++;\n    for (int i = 0; i < strlen(ransomNote); i++) {\n        if (!ans[ransomNote[i] - 'a']) return 0;\n        ans[ransomNote[i] - 'a']--;\n    }\n    return 1;\n}"
        },
        {
            "script": "python",
            "time": 48,
            "memory": 17.06,
            "desc": "遍历。",
            "code": "class Solution:\n    def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n        map = Counter(magazine)\n        for c in ransomNote:\n            map[c] -= 1\n            if map[c] < 0: return False\n        return True",
            "date": "2024-01-07"
        }
    ],
    "tagList": ["哈希表", "字符串", "计数"],
    "level": "Easy"
}
