{
    "name": "368.最大整除子集",
    "url": "https://leetcode-cn.com/problems/largest-divisible-subset/",
    "difficulty": "中等",
    "tag": [
        "数学",
        "动态规划"
    ],
    "desc": "给你一个由 无重复 正整数组成的集合 nums ，请你找出并返回其中最大的整除子集 answer。",
    "solutions": [
        {
            "date": 1619107200000,
            "time": 124,
            "memory": 41,
            "script": "typescript",
            "desc": "动态规划。",
            "code": "function largestDivisibleSubset(nums: number[]): number[] {\n  nums.sort((a, b) => a - b);\n  const len = nums.length;\n  let maxSize = 1;\n  let maxVal = nums[0];\n  const dp = new Array(len).fill(1);\n  for (let i = 1; i < len; i++) {\n    const num = nums[i];\n    for (let j = 0; j < i; j++) {\n      if (num % nums[j] === 0) dp[i] = Math.max(dp[i], dp[j] + 1);\n    }\n    if (dp[i] > maxSize) {\n      maxSize = dp[i];\n      maxVal = num;\n    }\n  }\n  const ans: number[] = [];\n  for (let i = len - 1; i >= 0; i--) {\n    const num = nums[i];\n    if (dp[i] === maxSize && maxVal % num === 0) {\n      ans.unshift(num);\n      maxSize--;\n      maxVal = num;\n    }\n  }\n  return ans;\n}"
        }
    ]
}