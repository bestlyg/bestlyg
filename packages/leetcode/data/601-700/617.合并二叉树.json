{
    "name": "617. 合并二叉树",
    "url": "https://leetcode-cn.com/problems/merge-two-binary-trees/",
    "difficulty": "简单",
    "tag": [
        "树"
    ],
    "desc": "给定两个二叉树，想象当你将它们中的一个覆盖到另一个上时，两个二叉树的一些节点便会重叠。你需要将他们合并为一个新的二叉树。合并的规则是如果两个节点重叠，那么将他们的值相加作为节点合并后的新值，否则不为  NULL 的节点将直接作为新二叉树的节点。",
    "solutions": [
        {
            "date": 1600790400000,
            "time": 168,
            "memory": 45.5,
            "script": "typescript",
            "desc": "递归。",
            "code": "function mergeTrees(t1: TreeNode | null, t2: TreeNode | null): TreeNode | null {\n  return merge(t1, t2);\n  function merge(t1: TreeNode | null, t2: TreeNode | null): TreeNode | null {\n    if (t1 === null && t2 === null) return null;\n    if (t1 === null) return t2;\n    if (t2 === null) return t1;\n    const node = new TreeNode(t1.val + t2.val);\n    node.left = merge(t1.left, t2.left);\n    node.right = merge(t1.right, t2.right);\n    return node;\n  }\n}"
        }
    ]
}