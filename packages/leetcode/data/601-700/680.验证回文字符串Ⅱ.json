{
  "name": "680. 验证回文字符串 Ⅱ",
  "url": "https://leetcode-cn.com/problems/valid-palindrome-ii/",
  "difficulty": "简单",
  "tag": ["字符串"],
  "desc": "给定一个非空字符串 s，最多删除一个字符。判断是否能成为回文字符串。",
  "solutions": [
    {
      "date": 1582387200000,
      "time": 116,
      "memory": 42.8,
      "script": "javascript",
      "desc": "从左右依次递进，遇到不匹配判断进一位是否相同，题目有个问题，发现输入 ac 返回 true。",
      "code": "/**\n * @param {string} s\n * @return {boolean}\n */\nvar validPalindrome = function (s) {\n  let isDel = false;\n  function comp(start, endStart) {\n    if (endStart <= start) return true;\n    while (start < endStart) {\n      if (s[start] !== s[endStart]) {\n        if (isDel) return false;\n        isDel = true;\n        return comp(start + 1, endStart) || comp(start, endStart - 1);\n      }\n      start++;\n      endStart--;\n    }\n    return true;\n  }\n  return comp(0, s.length - 1);\n};"
    },
    {
      "date": 1645113600000,
      "time": 48,
      "memory": 19,
      "script": "c++",
      "desc": "双指针遍历。",
      "code": "class Solution {\n   public:\n    bool check(string &s, int l, int r) {\n        while (l < r) {\n            if (s[l] != s[r]) return 0;\n            l++;\n            r--;\n        }\n        return 1;\n    }\n    bool validPalindrome(string s) {\n        int l = 0, r = s.size() - 1;\n        for (int l = 0, r = s.size() - 1; l < r; l++, r--) {\n            if (s[l] == s[r])\n                continue;\n            else\n                return check(s, l, r - 1) || check(s, l + 1, r);\n        }\n        return 1;\n    }\n};"
    }
  ]
}
