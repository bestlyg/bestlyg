{
  "name": "57. 插入区间",
  "url": "https://leetcode-cn.com/problems/insert-interval/",
  "difficulty": "困难",
  "tag": ["排序", "数组"],
  "desc": "给出一个无重叠的 ，按照区间起始端点排序的区间列表。在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。",
  "solutions": [
    {
      "date": 1604419200000,
      "time": 96,
      "memory": 42.7,
      "script": "javascript",
      "desc": "遍历一遍进行合并数组，并校验是否已插入。",
      "code": "function insert(intervals: number[][], newInterval: number[]): number[][] {\n  let [newStart, newEnd] = newInterval;\n  const ans: number[][] = [];\n  let inserted = false;\n  for (const interval of intervals) {\n    const [start, end] = interval;\n    if (inserted) {\n      ans.push(interval);\n    } else if (start > newEnd) {\n      ans.push([newStart, newEnd]);\n      ans.push(interval);\n      inserted = true;\n    } else if (end < newStart) {\n      ans.push(interval);\n    } else if (start <= newStart && end >= newEnd) {\n      ans.push(interval);\n      inserted = true;\n    } else {\n      newStart = Math.min(start, newStart);\n      newEnd = Math.max(end, newEnd);\n    }\n  }\n  inserted || ans.push([newStart, newEnd]);\n  return ans;\n}"
    }
  ]
}
