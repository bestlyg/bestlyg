{
    "id": "61",
    "name": "61.旋转链表",
    "url": "https://leetcode.cn/problems/rotate-list",
    "difficulty": "中等",
    "tag": [
        "链表",
        "双指针"
    ],
    "desc": "给定一个链表，旋转链表，将链表每个节点向右移动 k 个位置，其中 k 是非负数。",
    "solutions": [
        {
            "date": 1614960000000,
            "time": 84,
            "memory": 39.7,
            "script": "typescript",
            "desc": "拼接头尾后直接计算新头位置。",
            "code": "function rotateRight(head: ListNode | null, k: number): ListNode | null {\n  if (head === null) return null;\n  let count = 1;\n  let temp = head;\n  while (temp.next !== null) {\n    count++;\n    temp = temp.next;\n  }\n  temp.next = head;\n  temp = head;\n  count = count - (k % count);\n  while (--count) temp = temp.next!;\n  const newHead = temp.next;\n  temp.next = null;\n  return newHead;\n}"
        },
        {
            "date": 1616774400000,
            "time": 96,
            "memory": 39.8,
            "script": "typescript",
            "desc": "首位相连后判断位置进行断链。",
            "code": "function rotateRight(head: ListNode | null, k: number): ListNode | null {\n  if (head === null) return null;\n  let p: ListNode | null = head;\n  let c = 1;\n  while (p.next !== null) {\n    p = p.next;\n    c++;\n  }\n  p.next = head;\n  c = c - (k % c);\n  while (--c) head = head!.next;\n  p = head!.next;\n  head!.next = null;\n  return p;\n}"
        }
    ]
}