{
    "name": "5. 最长回文子串",
    "url": "https://leetcode-cn.com/problems/longest-palindromic-substring/",
    "difficulty": "中等",
    "tag": [
        "字符串",
        "动态规划"
    ],
    "desc": "给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。",
    "solutions": [
        {
            "date": 1586188800000,
            "time": 84,
            "memory": 42.6,
            "script": "javascript",
            "desc": "对每个字符依次判断两边是否相等，相等则+1，不相等则跳过。",
            "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function (s) {\n  const len = s.length;\n  let maxRes = '';\n  if (len === 0) return maxRes;\n  for (let i = 0; i < len; i++) {\n    const c = s[i];\n    let left = i - 1;\n    let right = i + 1;\n    let maxS = c;\n    while (i < len && c === s[i + 1]) {\n      maxS += c;\n      right++;\n      i++;\n    }\n    while (left >= 0 && right <= len - 1) {\n      if (s[left] !== s[right]) break;\n      maxS = s[left] + maxS + s[right];\n      left--;\n      right++;\n    }\n    maxRes = maxS.length > maxRes.length ? maxS : maxRes;\n  }\n  return maxRes;\n};"
        },
        {
            "date": 1634313600000,
            "time": 88,
            "memory": 45,
            "script": "typescript",
            "desc": "马拉车算法。",
            "code": "function longestPalindrome(s: string): string {\n  s = createStr(s);\n  let max = -1;\n  let maxIdx = -1;\n  const n = s.length;\n  const arr = new Array(n).fill(0);\n  let ans = s[0];\n  for (let i = 0; i < n; i++) {\n    if (i <= max) {\n      arr[i] = Math.min(arr[2 * maxIdx - i], max - i);\n    }\n    let l = i - arr[i];\n    let r = i + arr[i];\n    while (l - 1 >= 0 && r + 1 <= n - 1 && s[l - 1] === s[r + 1]) {\n      l--;\n      r++;\n    }\n    if (r > max) {\n      max = r;\n      maxIdx = i;\n    }\n    arr[i] = r - i;\n    if (ans.length < r - l + 1) {\n      ans = s.substring(l, r + 1);\n    }\n  }\n  return ans.replace(/#/g, '');\n  function createStr(s: string) {\n    let ans = '#';\n    for (let i = 0; s[i]; i++) ans += s[i] + '#';\n    return ans;\n  }\n}"
        }
    ]
}