{
    "name": "60.第k个排列",
    "url": "https://leetcode-cn.com/problems/permutation-sequence/",
    "difficulty": "简单",
    "tag": [
        "数学",
        "回溯算法"
    ],
    "desc": "给出集合 [1,2,3,…,n]，其所有元素共有 n! 种排列。给定 n 和 k，返回第 k 个排列。",
    "solutions": [
        {
            "date": 1599235200000,
            "time": 5932,
            "memory": 76,
            "script": "typescript",
            "desc": "遍历所有可能,在达到需要的值时暂停。",
            "code": "function getPermutation(n: number, k: number): string {\n  const ans: string[] = [];\n  dfs();\n  return ans[k - 1];\n  function dfs(arr: number[] = [], set: Set<number> = new Set()): void {\n    if (ans.length > k - 1) return;\n    let f = false;\n    for (let i = 1; i <= n; i++) {\n      if (set.has(i)) continue;\n      f = true;\n      set.add(i);\n      arr.push(i);\n      dfs(arr, set);\n      arr.pop();\n      set.delete(i);\n    }\n    if (!f) ans.push(arr.join(''));\n  }\n}"
        },
        {
            "date": 1599235200000,
            "time": 80,
            "memory": 37.8,
            "script": "typescript",
            "desc": "[官方题解](https://leetcode-cn.com/problems/permutation-sequence/solution/di-kge-pai-lie-by-leetcode-solution/)。",
            "code": "function getPermutation(n: number, k: number): string {\n  const factorials = [1];\n  for (let i = 1; i < n; i++) factorials[i] = factorials[i - 1] * i;\n  k--;\n  let ans = '';\n  const valid: number[] = new Array(n + 1).fill(1);\n  for (let i = 1; i <= n; i++) {\n    let order = ~~(k / factorials[n - i]) + 1;\n    for (let j = 1; j <= n; j++) {\n      order -= valid[j];\n      if (order === 0) {\n        ans += j;\n        valid[j] = 0;\n        break;\n      }\n    }\n    k %= factorials[n - i];\n  }\n  return ans;\n}"
        }
    ]
}