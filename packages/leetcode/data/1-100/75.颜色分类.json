{
    "name": "75. 颜色分类",
    "url": "https://leetcode-cn.com/problems/sort-colors/",
    "difficulty": "中等",
    "tag": [
        "排序",
        "数组",
        "双指针"
    ],
    "desc": "给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。",
    "solutions": [
        {
            "date": 1602000000000,
            "time": 92,
            "memory": 39.9,
            "script": "typescript",
            "desc": "利用自带排序算法，但不符合提议。",
            "code": "function sortColors(nums: number[]): void {\n  nums.sort((a, b) => a - b);\n}"
        },
        {
            "date": 1602000000000,
            "time": 84,
            "memory": 39.6,
            "script": "typescript",
            "desc": "计数后重新生成数组。",
            "code": "function sortColors(nums: number[]): void {\n  const cache: Record<number, number> = {\n    0: 0,\n    1: 0,\n    2: 0,\n  };\n  for (const num of nums) {\n    cache[num]++;\n  }\n  nums.length = 0;\n  nums.push(\n    ...new Array(cache[0]).fill(0),\n    ...new Array(cache[1]).fill(1),\n    ...new Array(cache[2]).fill(2)\n  );\n}"
        },
        {
            "date": 1602000000000,
            "time": 88,
            "memory": 39.5,
            "script": "typescript",
            "desc": "遍历后交换 0 置前，2 置后。",
            "code": "function sortColors(nums: number[]): void {\n  let c = 0;\n  const len = nums.length;\n  const swap = (i1: number, i2: number) =>\n    i1 !== i2 && ([nums[i2], nums[i1]] = [nums[i1], nums[i2]]);\n  // 0\n  for (let i = 0; i < len; i++) {\n    if (nums[i] === 0) {\n      swap(c, i);\n      c++;\n    }\n  }\n  // 2\n  c = 0;\n  for (let i = len - 1; i >= 0; i--) {\n    if (nums[i] === 2) {\n      swap(len - 1 - c, i);\n      c++;\n    }\n  }\n}"
        },
        {
            "date": 1602000000000,
            "time": 96,
            "memory": 39.6,
            "script": "typescript",
            "desc": "双指针一遍循环，记录 p0 和 p1。",
            "code": "function sortColors(nums: number[]): void {\n  let p0 = 0,\n    p1 = 0;\n  const len = nums.length;\n  const swap = (i1: number, i2: number) =>\n    i1 !== i2 && ([nums[i2], nums[i1]] = [nums[i1], nums[i2]]);\n  for (let i = 0; i < len; i++) {\n    if (nums[i] === 1) {\n      swap(p1, i);\n      p1++;\n    } else if (nums[i] === 0) {\n      swap(p0, i);\n      p0 < p1 && swap(i, p1);\n      p1++;\n      p0++;\n    }\n  }\n}"
        },
        {
            "date": 1602000000000,
            "time": 100,
            "memory": 39.5,
            "script": "typescript",
            "desc": "双指针一遍循环，记录 p0 和 p2。",
            "code": "function sortColors(nums: number[]): void {\n  const len = nums.length;\n  let p0 = 0,\n    p2 = len - 1;\n  const swap = (i1: number, i2: number) =>\n    i1 !== i2 && ([nums[i2], nums[i1]] = [nums[i1], nums[i2]]);\n  for (let i = 0; i < len; i++) {\n    while (i <= p2 && nums[i] === 2) {\n      swap(i, p2);\n      p2--;\n    }\n    if (nums[i] === 0) {\n      swap(i, p0);\n      p0++;\n    }\n  }\n}"
        },
        {
            "date": 1620316800000,
            "time": 92,
            "memory": 39.4,
            "script": "typescript",
            "desc": "利用内部排序。",
            "code": "function sortColors(nums: number[]): void {\n  nums.sort((a, b) => a - b);\n}"
        }
    ]
}