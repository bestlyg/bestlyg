{
    "id": "84",
    "name": "84.柱状图中最大的矩形",
    "url": "https://leetcode.cn/problems/largest-rectangle-in-histogram",
    "desc": "给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。",
    "solutions": [
        {
            "date": "2020-05-30",
            "time": 1300,
            "memory": 35.8,
            "script": "typescript",
            "desc": "暴力循环。",
            "code": "var largestRectangleArea = function (heights: number[]): number {\n  const len = heights.length;\n  if (len === 0) return 0;\n  let max = 0;\n  for (let i = 0; i < len; i++) max = Math.max(getR(i), max);\n  return max;\n  function getR(i: number): number {\n    const num = heights[i];\n    let max = num;\n    let w = 1;\n    let low = num;\n    let temp = num;\n    while (temp >= 0 && i >= 1) {\n      temp = (low = Math.min(heights[--i], low)) * ++w;\n      max = Math.max(temp, max);\n    }\n    return max;\n  }\n};"
        },
        {
            "date": "2021-07-19",
            "time": 104,
            "memory": 49,
            "script": "typescript",
            "desc": "单调栈，获取两边比当前小的值。",
            "code": "function largestRectangleArea(heights: number[]): number {\n  const len = heights.length;\n  const left = new Array(len).fill(-1);\n  const right = new Array(len).fill(len);\n  const stack: number[] = [];\n  let ans = 0;\n  for (let i = 0; i < len; i++) {\n    const h = heights[i];\n    while (stack.length && heights[stack[stack.length - 1]] >= h) right[stack.pop()!] = i;\n    if (stack.length) left[i] = stack[stack.length - 1];\n    stack.push(i);\n  }\n  for (let i = 0; i < len; i++) ans = Math.max(ans, (right[i] - left[i] - 1) * heights[i]);\n  return ans;\n}"
        }
    ],
    "tagList": [
        "栈",
        "数组",
        "单调栈"
    ],
    "level": "Hard"
}