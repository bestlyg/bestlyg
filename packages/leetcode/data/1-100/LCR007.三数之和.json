{
    "id": "1000239",
    "name": "LCR007.三数之和",
    "url": "https://leetcode.cn/problems/1fGaJU",
    "difficulty": "中等",
    "tag": ["数组", "双指针", "排序"],
    "desc": "给定一个包含 n 个整数的数组  nums，判断  nums  中是否存在三个元素  a ，b ，c ，使得  a + b + c = 0 ？请找出所有和为 0 且   不重复   的三元组。",
    "solutions": [
        {
            "date": 1645113600000,
            "time": 60,
            "memory": 19.3,
            "script": "cpp",
            "desc": "循环双指针。",
            "code": "class Solution {\n   public:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        vector<vector<int>> ans;\n        sort(nums.begin(), nums.end());\n        for (int i = 0; i < nums.size() && nums[i] <= 0; i++) {\n            if (i != 0 && nums[i] == nums[i - 1]) continue;\n            int sum, l = i + 1, r = nums.size() - 1;\n            while (l < r) {\n                sum = nums[l] + nums[r] + nums[i];\n                if (sum == 0) {\n                    ans.push_back(vector<int>{nums[i], nums[l], nums[r]});\n                    while (l < r && nums[l] == nums[l + 1]) l++;\n                    l++;\n                } else if (sum > 0)\n                    r--;\n                else\n                    l++;\n            }\n        }\n        return ans;\n    }\n};"
        }
    ]
}
