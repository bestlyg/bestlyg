{
    "id": "28",
    "name": "28.找出字符串中第一个匹配项的下标",
    "url": "https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string",
    "desc": "给你两个字符串  haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串出现的第一个位置（下标从 0 开始）。如果不存在，则返回   -1 。",
    "solutions": [
        {
            "date": "2021-04-20",
            "time": 84,
            "memory": 40.2,
            "script": "typescript",
            "desc": "直接调用 indexOf。",
            "code": "function strStr(haystack: string, needle: string): number {\n  return haystack.indexOf(needle);\n}"
        },
        {
            "date": "2021-10-12",
            "time": 84,
            "memory": 41.8,
            "script": "typescript",
            "desc": "kmp。",
            "code": "function getNext(needle: string) {\n  const next: number[] = [-1];\n  for (let i = 1, j = -1; needle[i]; i++) {\n    while (j !== -1 && needle[j + 1] !== needle[i]) j = next[j];\n    if (needle[j + 1] === needle[i]) j++;\n    next[i] = j;\n  }\n  return next;\n}\nfunction strStr(haystack: string, needle: string): number {\n  if (needle.length === 0) return 0;\n  const next = getNext(needle);\n  for (let i = 0, j = -1; haystack[i]; i++) {\n    while (j !== -1 && needle[j + 1] !== haystack[i]) j = next[j];\n    if (needle[j + 1] === haystack[i]) j++;\n    if (!needle[j + 1]) return i - j;\n  }\n  return -1;\n}"
        },
        {
            "date": "2021-10-12",
            "time": 1504,
            "memory": 42.3,
            "script": "typescript",
            "desc": "sunday。",
            "code": "function getMap(needle: string) {\n  const map: Record<string, number> = {};\n  for (let i = 0; needle[i]; i++) map[needle[i]] = i;\n  return (c: string) => map[c] ?? -1;\n}\nfunction strStr(haystack: string, needle: string): number {\n  if (needle.length === 0) return 0;\n  const len = needle.length;\n  const map = getMap(needle);\n  for (let i = 0; haystack[i]; i += len - map(haystack[i + len])) {\n    let j = 0;\n    while (needle[j] && haystack[i + j] === needle[j]) j++;\n    if (!needle[j]) return i;\n  }\n  return -1;\n}"
        }
    ],
    "tagList": ["双指针", "字符串", "字符串匹配"],
    "level": "Easy"
}
