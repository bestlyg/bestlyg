{
    "id": "16",
    "name": "16.最接近的三数之和",
    "url": "https://leetcode.cn/problems/3sum-closest",
    "difficulty": "中等",
    "tag": [
        "数组",
        "双指针",
        "排序"
    ],
    "desc": "给定一个包括  n 个整数的数组  nums  和 一个目标值  target。找出  nums  中的三个整数，使得它们的和与  target  最接近。返回这三个数的和。假定每组输入只存在唯一答案。",
    "solutions": [
        {
            "date": 1591718400000,
            "time": 80,
            "memory": 35.9,
            "script": "typescript",
            "desc": "如题 15。",
            "code": "function threeSumClosest(nums: number[], target: number): number {\n  const len = nums.length;\n  nums = nums.sort((a, b) => a - b);\n  let min = Infinity;\n  let minNum = 0;\n  let maxI = target <= 0 ? 0 : target;\n  for (let i = 0; i === 0 || nums[i] < maxI; i++) {\n    let l = i + 1;\n    let r = len - 1;\n    while (l < r) {\n      const num = nums[i] + nums[l] + nums[r];\n      const comp = num - target;\n      if (min > Math.abs(comp)) {\n        min = Math.abs(comp);\n        minNum = num;\n      }\n      if (comp < 0) l++;\n      else if (comp > 0) r--;\n      else if (comp === 0) return num;\n    }\n  }\n  return minNum;\n}"
        }
    ]
}