{
    "id": "31",
    "name": "31.下一个排列",
    "url": "https://leetcode.cn/problems/next-permutation",
    "desc": "实现获取下一个排列的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。",
    "solutions": [
        {
            "date": "2020-11-10",
            "time": 96,
            "memory": 40,
            "script": "typescript",
            "desc": "计算最小改动数，逆序遍历检测递增。",
            "code": "function nextPermutation(nums: number[]): void {\n  const len = nums.length;\n  const swap = (i1: number, i2: number) => {\n    const t = nums[i1];\n    nums[i1] = nums[i2];\n    nums[i2] = t;\n  };\n  const reverse = (left: number) => {\n    let right = len - 1;\n    while (left < right) {\n      swap(left, right);\n      left++;\n      right--;\n    }\n  };\n  let i = len - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  if (i >= 0) {\n    let j = len - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    swap(i, j);\n  }\n  reverse(i + 1);\n}"
        }
    ],
    "tagList": [
        "数组",
        "双指针"
    ],
    "level": "Medium"
}