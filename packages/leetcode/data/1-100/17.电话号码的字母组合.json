{
    "name": "17. 电话号码的字母组合",
    "url": "https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/",
    "difficulty": "中等",
    "tag": [
        "字符串",
        "回溯算法"
    ],
    "desc": "给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。",
    "solutions": [
        {
            "date": 1591891200000,
            "time": 64,
            "memory": 32.4,
            "script": "typescript",
            "desc": "理由哈希表储存值进行递归。",
            "code": "const tel: Record<string, string[]> = {\n  2: ['a', 'b', 'c'],\n  3: ['d', 'e', 'f'],\n  4: ['g', 'h', 'i'],\n  5: ['j', 'k', 'l'],\n  6: ['m', 'n', 'o'],\n  7: ['p', 'q', 'r', 's'],\n  8: ['t', 'u', 'v'],\n  9: ['w', 'x', 'y', 'z'],\n};\nfunction letterCombinations(digits: string): string[] {\n  const len = digits.length;\n  const ans: string[] = [];\n  if (len === 0) return ans;\n  const s = digits[0];\n  const letters = tel[s];\n  const nextLetter = letterCombinations(digits.substr(1));\n  if (nextLetter.length === 0) return letters;\n  for (const letter of letters) for (const nl of nextLetter) ans.push(letter + nl);\n  return ans;\n}"
        },
        {
            "date": 1598371200000,
            "time": 84,
            "memory": 37.6,
            "script": "typescript",
            "desc": "深度遍历",
            "code": "const phoneToLetter: Record<string, string> = {\n  '2': 'abc',\n  '3': 'def',\n  '4': 'ghi',\n  '5': 'jkl',\n  '6': 'mno',\n  '7': 'pqrs',\n  '8': 'tuv',\n  '9': 'wxyz',\n};\nfunction letterCombinations(digits: string): string[] {\n  const len = digits.length;\n  if (len === 0) return [];\n  else if (len === 1) return phoneToLetter[digits].split('');\n  const arr = phoneToLetter[digits[0]].split('');\n  const nextArr = letterCombinations(digits.substr(1));\n  const ans = [];\n  for (const c of arr) ans.push(...nextArr.map(v => c + v));\n  return ans;\n}"
        }
    ]
}