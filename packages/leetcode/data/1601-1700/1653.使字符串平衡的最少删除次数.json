{
    "id": "1756",
    "name": "1653.使字符串平衡的最少删除次数",
    "url": "https://leetcode.cn/problems/minimum-deletions-to-make-string-balanced",
    "desc": "请你返回使 s 平衡 的 最少 删除次数。",
    "solutions": [
        {
            "script": "cpp",
            "time": 64,
            "memory": 21.6,
            "desc": "遍历到b的时候不做处理，遍历到a的时候考虑删除当前a或者删除前面的b。",
            "code": "class Solution {\npublic:\n    int minimumDeletions(string s) {\n        int dp = 0, b = 0;\n        for (auto &c : s) {\n            if (c == 'a') dp = min(dp + 1, b);\n            else b += 1;\n        }\n        return dp;\n    }\n};",
            "date": "2023-03-06"
        },
        {
            "script": "python",
            "time": 300,
            "memory": 15.5,
            "desc": "同上。",
            "code": "class Solution:\n    def minimumDeletions(self, s: str) -> int:\n        dp, b = 0, 0\n        for c in s:\n            if c == 'a':\n                dp = min(dp+1, b)\n            else:\n                b += 1\n        return dp",
            "date": "2023-03-06"
        },
        {
            "script": "rust",
            "time": 16,
            "memory": 2.2,
            "desc": "同上。",
            "code": "impl Solution {\n        pub fn minimum_deletions(s: String) -> i32 {\n            let (mut dp, mut b) = (0, 0);\n            for c in s.chars() {\n                if c == 'a' {\n                    dp = b.min(dp + 1);\n                } else {\n                    b += 1;\n                }\n            }\n            dp\n        }\n    }",
            "date": "2023-03-06"
        }
    ],
    "tagList": ["栈", "字符串", "动态规划"],
    "level": "Medium"
}
