{
    "id": "1741",
    "name": "1636.按照频率将数组升序排序",
    "url": "https://leetcode.cn/problems/sort-array-by-increasing-frequency",
    "difficulty": "简单",
    "tag": [
        "数组",
        "哈希表",
        "排序"
    ],
    "desc": "给你一个整数数组 nums ，请你将数组按照每个值的频率 升序 排序。如果有多个值的频率相同，请你按照数值本身将它们 降序 排序。 。",
    "solutions": [
        {
            "date": 1663516800000,
            "time": 4,
            "memory": 10.9,
            "script": "cpp",
            "desc": "用哈希表存储后排序。",
            "code": "class Solution {\npublic:\n    typedef pair<int, int> node;\n    vector<int> frequencySort(vector<int>& nums) {\n        unordered_map<int, int> m;\n        for (auto &num : nums) m[num]++;\n        vector<node> list;\n        for (auto &item : m) list.push_back(item);\n        sort(list.begin(), list.end(), [&](const node a, const node b) -> bool {\n            return a.second == b.second ? b.first < a.first : a.second < b.second;\n        });\n        vector<int> ans;\n        ans.reserve(nums.size());\n        for (auto &item : list) for (int i = 0; i < item.second; i++) ans.push_back(item.first);\n        return ans;\n    }\n};"
        }
    ]
}