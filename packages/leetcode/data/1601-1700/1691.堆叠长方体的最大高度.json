{
    "name": "1691.堆叠长方体的最大高度",
    "url": "https://leetcode.cn/problems/maximum-height-by-stacking-cuboids",
    "difficulty": "困难",
    "tag": [
        "数组",
        "动态规划",
        "排序"
    ],
    "desc": "返回 堆叠长方体 cuboids 可以得到的 最大高度 。",
    "solutions": [
        {
            "date": 1670601600000,
            "time": 12,
            "memory": 8.9,
            "script": "cpp",
            "desc": "dp[i]表示 i 作为最后一个点的时候的最大高度。",
            "code": "class Solution {\npublic:\n    int maxHeight(vector<vector<int>>& cuboids) {\n        int n = cuboids.size(), ans = 0;\n        vector<int> dp(n);\n        sort(cuboids.begin(), cuboids.end(), [](const vector<int> &a, const vector<int> &b){\n            return a[0] + a[1] + a[2] > b[0] + b[1] + b[2];\n        });\n        for (auto &item : cuboids) sort(item.begin(), item.end());\n        for (int i = 0; i < n; i++) {\n            dp[i] = cuboids[i][2];\n            for (int j = 0; j < i; j++) {\n                if (cuboids[j][0] < cuboids[i][0] || cuboids[j][1] < cuboids[i][1] || cuboids[j][2] < cuboids[i][2]) continue;\n                dp[i] = max(dp[i], dp[j] + cuboids[i][2]);\n            }\n            ans = max(ans, dp[i]);\n        }\n        return ans;\n    }\n};"
        }
    ]
}