{
    "name": "1609. 奇偶树",
    "url": "https://leetcode-cn.com/problems/even-odd-tree/",
    "difficulty": "中等",
    "tag": [
        "树",
        "广度优先搜索",
        "二叉树"
    ],
    "desc": "给你二叉树的根节点，如果二叉树为 奇偶树 ，则返回 true ，否则返回 false 。",
    "solutions": [
        {
            "date": 1640361600000,
            "time": 216,
            "memory": 147.2,
            "script": "c++",
            "desc": "层序遍历。",
            "code": "class Solution {\n   public:\n    bool isEvenOddTree(TreeNode* root) {\n        queue<TreeNode*> q;\n        q.push(root);\n        int size = 1, data = 1, pre = 0;\n        while (q.size()) {\n            TreeNode* node = q.front();\n            if ((node->val & 1) != data) return 0;\n            if (data == 1 && node->val <= pre || data == 0 && node->val >= pre)\n                return 0;\n            q.pop();\n            pre = node->val;\n            if (node->left) q.push(node->left);\n            if (node->right) q.push(node->right);\n            if (--size == 0) {\n                size = q.size();\n                data ^= 1;\n                pre = data ? 0 : 1e6;\n            }\n        }\n        return 1;\n    }\n};"
        }
    ]
}