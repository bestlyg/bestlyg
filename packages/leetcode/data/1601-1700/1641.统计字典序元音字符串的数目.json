{
    "name": "1641.统计字典序元音字符串的数目",
    "url": "https://leetcode.cn/problems/count-sorted-vowel-strings/",
    "difficulty": "中等",
    "tag": [
        "广度优先搜索",
        "数组",
        "矩阵"
    ],
    "desc": "给你一个整数 n，请返回长度为 n 、仅由元音 (a, e, i, o, u) 组成且按 字典序排列 的字符串数量。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 5.9,
            "desc": "dp[i][j]表示i个字符长度时j字符为首有几种。",
            "code": "class Solution {\npublic:\n    int countVowelStrings(int n) {\n        int dp[55][5] = {0};\n        for (int j = 0; j < 5; j++) dp[1][j] = 1;\n        for (int i = 2; i <= n; i++) {\n            int v = 0;\n            for (int j = 0; j < 5; j++) {\n                v += dp[i - 1][j];\n                dp[i][j] = v;\n            }\n        }\n        return accumulate(dp[n], dp[n] + 5, 0);\n    }\n};",
            "date": 1680019200000
        },
        {
            "script": "python3",
            "time": 20,
            "memory": 14.8,
            "desc": "同上。",
            "code": "class Solution:\n    def countVowelStrings(self, n: int) -> int:\n        dp = [[0] * 5 for _ in range(55)]\n        for j in range(5):\n            dp[1][j] = 1\n        for i in range(2, n+1):\n            v = 0\n            for j in range(5):\n                v += dp[i-1][j]\n                dp[i][j] = v\n        return sum(dp[n])",
            "date": 1680019200000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2.1,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn count_vowel_strings(n: i32) -> i32 {\n        let n = n as usize;\n        let mut dp = vec![vec![0; 5]; 55];\n        for j in 0..5 {\n            dp[1][j] = 1;\n        }\n        for i in 2..=n {\n            let mut v = 0;\n            for j in 0..5 {\n                v += dp[i - 1][j];\n                dp[i][j] = v\n            }\n        }\n        dp[n].iter().sum()\n    }\n}",
            "date": 1680019200000
        }
    ]
}