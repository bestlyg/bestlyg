{
    "id": "2357",
    "name": "2276.统计区间中的整数数目",
    "url": "https://leetcode.cn/problems/count-integers-in-intervals",
    "difficulty": "困难",
    "tag": ["设计", "线段树", "有序集合"],
    "desc": "给你区间的 空 集，请你设计并实现满足要求的数据结构：新增：添加一个区间到这个区间集合中。统计：计算出现在 至少一个 区间中的整数个数。",
    "solutions": [
        {
            "script": "cpp",
            "time": 432,
            "memory": 181.94,
            "desc": "平衡二叉树。",
            "code": "class CountIntervals {\npublic:\n    map<int, int> tree;\n    int sum;\n    CountIntervals(): sum(0) {\n        tree[0] = 0;\n        tree[INT_MAX] = INT_MAX;\n    }\n    int count() {\n        return sum;\n    }\n    void add(int left, int right) {\n        auto it = tree.lower_bound(left);\n        auto prev = it;\n        prev--;\n        if (prev->second >= left) {\n            left = min(left, prev->first);\n            right = max(right, prev->second);\n            sum -= prev->second - prev->first + 1;\n            it = tree.erase(prev);\n        }\n        while (right >= it->first) {\n            right = max(right, it->second);\n            sum -= it->second - it->first + 1;\n            it = tree.erase(it);\n        }\n        tree[left] = right;\n        sum += right - left + 1;\n    }\n};",
            "date": 1702656000000
        }
    ]
}
