{
    "id": "2680",
    "name": "2550.猴子碰撞的方法数",
    "url": "https://leetcode.cn/problems/count-collisions-of-monkeys-on-a-polygon",
    "desc": "返回猴子至少发生 一次碰撞 的移动方法数。由于答案可能非常大，请返回对 109+7 取余后的结果。",
    "solutions": [
        {
            "script": "cpp",
            "time": 4,
            "memory": 6.3,
            "desc": "贪心， 只有在都顺和都逆才不相撞, 快速幂。",
            "code": "typedef long long ll;\nint mod = 1e9 + 7;\nll quick_pow(ll a, ll b) {\n    ll ans = 1, tmp = a;\n    for (; b; b >>= 1) {\n        if (b & 1) ans = (ans * tmp) % mod;\n        tmp = (tmp * tmp) % mod;\n    }\n    return ans;\n}\n\nclass Solution {\npublic:\n    int monkeyMove(int n) {\n        return (quick_pow(2, n) + mod - 2) % mod;\n    }\n};",
            "date": "2023-01-29"
        },
        {
            "script": "python",
            "time": 32,
            "memory": 14.8,
            "desc": "同上。",
            "code": "class Solution:\n    def monkeyMove(self, n: int) -> int:\n        mod = 10 ** 9 + 7\n        return (pow(2, n, mod) + mod - 2) % mod",
            "date": "2023-01-29"
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2,
            "desc": "同上。",
            "code": "fn pow(base: i64, exp: i64, mod_num: i64) -> i64 {\n    let mut exp = exp;\n    let mut tmp = base;\n    let mut ans = 1;\n    while exp != 0 {\n        if exp % 2 == 1 {\n            ans = (ans * tmp) % mod_num;\n        }\n        tmp = (tmp * tmp) % mod_num;\n        exp >>= 1\n    }\n    ans\n}\n\nimpl Solution {\n    pub fn monkey_move(n: i32) -> i32 {\n        let mod_num = 1000000007;\n        ((pow(2, n as i64, mod_num) + mod_num - 2) % mod_num) as i32\n    }\n}",
            "date": "2023-01-29"
        }
    ],
    "tagList": ["递归", "数学"],
    "level": "Medium"
}
