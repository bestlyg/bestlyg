{
    "id": "2625",
    "name": "2536.子矩阵元素加1",
    "url": "https://leetcode.cn/problems/increment-submatrices-by-one",
    "difficulty": "中等",
    "tag": ["数组", "矩阵", "前缀和"],
    "desc": "返回执行完所有操作后得到的矩阵 mat 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 316,
            "memory": 86.8,
            "desc": "差分。",
            "code": "class Solution {\npublic:\n    vector<vector<int>> rangeAddQueries(int n, vector<vector<int>>& queries) {\n        vector<vector<int>> list(n + 1, vector<int>(n + 1, 0)), ans(n, vector<int>(n, 0));\n        for (auto &q : queries) \n            for (int i = q[0]; i <= q[2]; i++) \n                list[i][q[1]]++, list[i][q[3] + 1]--;\n        for (int i = 0; i < n; i++) {\n            int cur = 0;\n            for (int j = 0; j < n; j++) \n                cur += list[i][j], ans[i][j] = cur;\n        }\n        return ans;\n    }\n};",
            "date": 1673712000000
        },
        {
            "script": "rust",
            "time": 92,
            "memory": 5.5,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn range_add_queries(n: i32, queries: Vec<Vec<i32>>) -> Vec<Vec<i32>> {\n        let n = n as usize;\n        let (mut list, mut ans) = (vec![vec![0; n + 1]; n + 1], vec![vec![0; n]; n]);\n        for q in queries {\n            let mut i = q[0];\n            while i <= q[2] {\n                list[i as usize][q[1] as usize] += 1;\n                list[i as usize][(q[3] + 1) as usize] -= 1;\n                i += 1;\n            }\n        }\n        for i in 0..n {\n            let mut cur = 0;\n            for j in 0..n {\n                cur += list[i][j];\n                ans[i][j] = cur;\n            }\n        }\n        ans\n    }\n}",
            "date": 1673712000000
        }
    ]
}
