{
    "id": "2615",
    "name": "2531.使字符串中不同字符的数目相等",
    "url": "https://leetcode.cn/problems/make-number-of-distinct-characters-equal",
    "desc": "给你两个下标从 0 开始的字符串 word1 和 word2 。如果可以通过 恰好一次 移动，使 word1 和 word2 中不同字符的数目相等，则返回 true ；否则，返回 false 。",
    "solutions": [
        {
            "date": "2023-01-08",
            "time": 160,
            "memory": 49,
            "script": "typescript",
            "desc": "存储后遍历。",
            "code": "const list = new Array(26).fill(0).map((_, i) => String.fromCodePoint(i + 97));\nfunction isItPossible(word1: string, word2: string): boolean {\n  const map1 = new Map<string, number>();\n  for (const c of word1) map1.set(c, (map1.get(c) ?? 0) + 1);\n  const map2 = new Map<string, number>();\n  for (const c of word2) map2.set(c, (map2.get(c) ?? 0) + 1);\n  const len1 = map1.size;\n  const len2 = map2.size;\n  for (const c1 of list) {\n    for (const c2 of list) {\n      if (check(c1, c2)) return true;\n    }\n  }\n  return false;\n  function check(c1: string, c2: string): boolean {\n    const cnt1 = map1.get(c1) ?? 0;\n    const t1 = map1.get(c2) ?? 0;\n\n    const cnt2 = map2.get(c2) ?? 0;\n    const t2 = map2.get(c1) ?? 0;\n    if (cnt1 === 0 || cnt2 === 0) return false;\n    if (c1 === c2) return len1 === len2;\n\n    if (cnt1 === 1 && cnt2 === 1) {\n      if (t1 === 0 && t2 === 0) return len1 === len2;\n      if (t1 === 0 && t2 !== 0) return len1 + 1 === len2;\n      if (t1 !== 0 && t2 === 0) return len1 === len2 + 1;\n      if (t1 !== 0 && t2 !== 0) return len1 === len2;\n    }\n    if (cnt1 === 1 && cnt2 > 1) {\n      if (t1 === 0 && t2 === 0) return len1 === len2 + 1;\n      if (t1 === 0 && t2 !== 0) return len1 === len2;\n      if (t1 !== 0 && t2 === 0) return len1 - 1 === len2 + 1;\n      if (t1 !== 0 && t2 !== 0) return len1 - 1 === len2;\n    }\n    if (cnt1 > 1 && cnt2 === 1) {\n      if (t1 === 0 && t2 === 0) return len2 === len1 + 1;\n      if (t1 !== 0 && t2 === 0) return len2 === len1;\n      if (t1 === 0 && t2 !== 0) return len2 - 1 === len1 + 1;\n      if (t1 !== 0 && t2 !== 0) return len2 - 1 === len1;\n    }\n    if (cnt1 > 1 && cnt2 > 1) {\n      if (t1 === 0 && t2 === 0) return len1 === len2;\n      if (t1 !== 0 && t2 === 0) return len1 === len2 + 1;\n      if (t1 === 0 && t2 !== 0) return len1 + 1 === len2;\n      if (t1 !== 0 && t2 !== 0) return len1 === len2;\n    }\n    return false;\n  }\n}"
        },
        {
            "date": "2023-01-08",
            "time": 4,
            "memory": 2.3,
            "script": "rust",
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn is_it_possible(word1: String, word2: String) -> bool {\n        let mut list = [0; 26];\n        for i in 0..26 {\n            list[i] = i;\n        }\n        let mut m1 = [0; 26];\n        let mut m2 = [0; 26];\n        let mut len1 = 0;\n        let mut len2 = 0;\n        for c in word1.chars() {\n            let idx = c as usize - 'a' as usize;\n            m1[idx] += 1;\n            if m1[idx] == 1 {\n                len1 += 1;\n            }\n        }\n        for c in word2.chars() {\n            let idx = c as usize - 'a' as usize;\n            m2[idx] += 1;\n            if m2[idx] == 1 {\n                len2 += 1;\n            }\n        }\n        let check = |i1: usize, i2: usize| -> bool {\n            let c1 = m1[i1];\n            let t1 = m1[i2];\n            let c2 = m2[i2];\n            let t2 = m2[i1];\n            if c1 == 0 || c2 == 0 {\n                return false;\n            }\n            if i1 == i2 {\n                return len1 == len2;\n            }\n            if c1 == 1 && c2 == 1 {\n                if t1 == 0 && t2 == 0 {\n                    return len1 == len2;\n                }\n                if t1 == 0 && t2 != 0 {\n                    return len1 + 1 == len2;\n                }\n                if t1 != 0 && t2 == 0 {\n                    return len1 == len2 + 1;\n                }\n                if t1 != 0 && t2 != 0 {\n                    return len1 == len2;\n                }\n            }\n            if c1 == 1 && c2 > 1 {\n                if t1 == 0 && t2 == 0 {\n                    return len1 == len2 + 1;\n                }\n                if t1 == 0 && t2 != 0 {\n                    return len1 == len2;\n                }\n                if t1 != 0 && t2 == 0 {\n                    return len1 - 1 == len2 + 1;\n                }\n                if t1 != 0 && t2 != 0 {\n                    return len1 - 1 == len2;\n                }\n            }\n            if c1 > 1 && c2 == 1 {\n                if t1 == 0 && t2 == 0 {\n                    return len2 == len1 + 1;\n                }\n                if t1 != 0 && t2 == 0 {\n                    return len2 == len1;\n                }\n                if t1 == 0 && t2 != 0 {\n                    return len2 - 1 == len1 + 1;\n                }\n                if t1 != 0 && t2 != 0 {\n                    return len2 - 1 == len1;\n                }\n            }\n            if c1 > 1 && c2 > 1 {\n                if t1 == 0 && t2 == 0 {\n                    return len1 == len2;\n                }\n                if t1 != 0 && t2 == 0 {\n                    return len1 == len2 + 1;\n                }\n                if t1 == 0 && t2 != 0 {\n                    return len1 + 1 == len2;\n                }\n                if t1 != 0 && t2 != 0 {\n                    return len1 == len2;\n                }\n            }\n            false\n        };\n        for c1 in list.iter() {\n            for c2 in list.iter() {\n                if check(*c1, *c2) {\n                    return true;\n                }\n            }\n        }\n        false\n    }\n}"
        },
        {
            "date": "2023-01-08",
            "time": 4,
            "memory": 2.4,
            "script": "rust",
            "desc": "同上, 优化。",
            "code": "impl Solution {\n    pub fn is_it_possible(word1: String, word2: String) -> bool {\n        let mut list = [0; 26];\n        for i in 0..26 {\n            list[i] = i;\n        }\n        let (mut m1, mut len1) = ([0; 26], 0);\n        let (mut m2, mut len2) = ([0; 26], 0);\n        for c in word1.chars() {\n            let idx = c as usize - 'a' as usize;\n            m1[idx] += 1;\n            if m1[idx] == 1 {\n                len1 += 1;\n            }\n        }\n        for c in word2.chars() {\n            let idx = c as usize - 'a' as usize;\n            m2[idx] += 1;\n            if m2[idx] == 1 {\n                len2 += 1;\n            }\n        }\n        for i1 in list.iter() {\n            for i2 in list.iter() {\n                let (i1, i2) = (*i1, *i2);\n                let (c1, t1) = (m1[i1], m1[i2]);\n                let (c2, t2) = (m2[i2], m2[i1]);\n                if c1 == 0 || c2 == 0 {\n                    continue;\n                } else if i1 == i2 {\n                    if len1 == len2 {\n                        return true;\n                    }\n                } else {\n                    let mut len1 = len1;\n                    let mut len2 = len2;\n                    if c1 == 1 {\n                        len1 -= 1;\n                    }\n                    if t1 == 0 {\n                        len1 += 1;\n                    }\n                    if c2 == 1 {\n                        len2 -= 1;\n                    }\n                    if t2 == 0 {\n                        len2 += 1\n                    }\n                    if len1 == len2 {\n                        return true;\n                    }\n                }\n            }\n        }\n        false\n    }\n}"
        }
    ],
    "tagList": [
        "哈希表",
        "字符串",
        "计数"
    ],
    "level": "Medium"
}