{
    "id": "2707",
    "name": "2570.合并两个二维数组-求和法",
    "url": "https://leetcode.cn/problems/merge-two-2d-arrays-by-summing-values",
    "difficulty": "简单",
    "tag": [
        "数组",
        "哈希表",
        "双指针"
    ],
    "desc": "合并两个二维数组。",
    "solutions": [
        {
            "script": "cpp",
            "time": 8,
            "memory": 10.4,
            "desc": "遍历。",
            "code": "class Solution {\n    public:\n        vector<vector<int>> mergeArrays(vector<vector<int>>& nums1, vector<vector<int>>& nums2) {\n            vector<vector<int>> ans;\n            int i1 = 0, i2 = 0;\n            int n1 = nums1.size(), n2 = nums2.size();\n            while (i1 < n1 || i2 < n2) {\n                if (i1 == n1) ans.push_back(nums2[i2++]);\n                else if (i2 == n2) ans.push_back(nums1[i1++]);\n                else {\n                    if (nums1[i1][0] == nums2[i2][0]) {\n                        vector<int> item(2, nums1[i1][0]);\n                        item[1] = nums1[i1++][1] + nums2[i2++][1];\n                        ans.push_back(item);\n                    } else if (nums1[i1][0] < nums2[i2][0]) {\n                        ans.push_back(nums1[i1++]);\n                    } else {\n                        ans.push_back(nums2[i2++]);\n                    }\n                }\n            }\n            return ans;\n        }\n    };",
            "date": 1676736000000
        },
        {
            "script": "python3",
            "time": 40,
            "memory": 15.1,
            "desc": "同上。",
            "code": "class Solution:\n    def mergeArrays(self, nums1: List[List[int]], nums2: List[List[int]]) -> List[List[int]]:\n        ans = []\n        i1, i2, n1, n2 = 0, 0, len(nums1), len(nums2)\n        while i1 < n1 or i2 < n2:\n            if i1 == n1:\n                ans.append(nums2[i2])\n                i2 += 1\n            elif i2 == n2:\n                ans.append(nums1[i1])\n                i1 += 1\n            else:\n                if nums1[i1][0] == nums2[i2][0]:\n                    ans.append([\n                        nums1[i1][0],\n                        nums1[i1][1] + nums2[i2][1]\n                    ])\n                    i1 += 1\n                    i2 += 1\n                elif nums1[i1][0] < nums2[i2][0]:\n                    ans.append(nums1[i1])\n                    i1 += 1\n                else:\n                    ans.append(nums2[i2])\n                    i2 += 1\n        return ans",
            "date": 1676736000000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2.2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn merge_arrays(nums1: Vec<Vec<i32>>, nums2: Vec<Vec<i32>>) -> Vec<Vec<i32>> {\n        let mut ans = vec![];\n        let (mut i1, mut i2, n1, n2) = (0, 0, nums1.len(), nums2.len());\n        while i1 < n1 || i2 < n2 {\n            if i1 == n1 {\n                ans.push(nums2[i2].clone());\n                i2 += 1\n            } else if i2 == n2 {\n                ans.push(nums1[i1].clone());\n                i1 += 1\n            } else {\n                if nums1[i1][0] == nums2[i2][0] {\n                    let mut item = vec![nums1[i1][0]; 2];\n                    item[1] = nums1[i1][1] + nums2[i2][1];\n                    ans.push(item);\n                    i1 += 1;\n                    i2 += 1;\n                } else if nums1[i1][0] < nums2[i2][0] {\n                    ans.push(nums1[i1].clone());\n                    i1 += 1;\n                } else {\n                    ans.push(nums2[i2].clone());\n                    i2 += 1;\n                }\n            }\n        }\n        ans\n    }\n}",
            "date": 1676736000000
        }
    ]
}