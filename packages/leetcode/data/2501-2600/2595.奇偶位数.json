{
    "id": "2659",
    "name": "2595.奇偶位数",
    "url": "https://leetcode.cn/problems/number-of-even-and-odd-bits",
    "desc": "给你一个 正 整数 n 。用 even 表示在 n 的二进制形式（下标从 0 开始）中值为 1 的偶数下标的个数。用 odd 表示在 n 的二进制形式（下标从 0 开始）中值为 1 的奇数下标的个数。返回整数数组 answer ，其中 answer = [even, odd] 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 7,
            "desc": "遍历。",
            "code": "class Solution {\npublic:\n    vector<int> evenOddBit(int n) {\n        int even = 0, odd = 0;\n        for (int i = 0; i < 32; i++) {\n            if (n & (1 << i)) {\n                if (i & 1) odd++;\n                else even++;\n            }\n        }\n        return vector<int>{ even, odd };\n    }\n};",
            "date": "2023-03-19"
        },
        {
            "script": "python",
            "time": 40,
            "memory": 15,
            "desc": "同上。",
            "code": "class Solution:\n    def evenOddBit(self, n: int) -> List[int]:\n        even, odd = 0, 0\n        for i in range(32):\n            if n & (1 << i):\n                if i & 1:\n                    odd += 1\n                else:\n                    even += 1\n        return [even, odd]",
            "date": "2023-03-19"
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 1.9,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn even_odd_bit(n: i32) -> Vec<i32> {\n        let mut res = vec![0, 0];\n        for i in 0..32 {\n            if (n & (1 << i)) != 0{\n                res[i % 2] += 1;\n            }\n        }\n        res\n    }\n}",
            "date": "2023-03-19"
        }
    ],
    "tagList": [
        "位运算"
    ],
    "level": "Easy"
}