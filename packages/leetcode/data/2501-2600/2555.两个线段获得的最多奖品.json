{
    "name": "2555.两个线段获得的最多奖品",
    "url": "https://leetcode.cn/problems/maximize-win-from-two-segments",
    "level": "Medium",
    "tagList": [
        "数组",
        "二分查找",
        "滑动窗口"
    ],
    "desc": "请你返回在选择两个最优线段的前提下，可以获得的 最多 奖品数目。",
    "solutions": [
        {
            "script": "python",
            "time": 614,
            "memory": 28.86,
            "desc": "遍历所有区间，并且统计非区间内的最大值",
            "code": "from sortedcontainers import SortedList\nclass Solution:\n    def maximizeWin(self, prizePositions: List[int], k: int) -> int:\n        n = len(prizePositions)\n        arr1 = []\n        i = 0\n        while i < n:\n            cnt = 1\n            p = i\n            while i + 1 < n and prizePositions[i + 1] == prizePositions[p]:\n                cnt += 1\n                i += 1\n            arr1.append((prizePositions[i], cnt))\n            i += 1\n\n        n = len(arr1)\n\n        arr2 = []\n        r = 0\n        cnt = 0\n        for i in range(n):\n            while r < n and arr1[r][0] <= arr1[i][0] + k:\n                cnt += arr1[r][1]\n                r += 1\n            arr2.append(cnt)\n            cnt -= arr1[i][1]\n\n        arr3 = []\n        l = n - 1\n        cnt = 0\n        for i in range(n - 1, -1, -1):\n            while l >= 0 and arr1[l][0] >= arr1[i][0] - k:\n                cnt += arr1[l][1]\n                l -= 1\n            arr3.append(cnt)\n            cnt -= arr1[i][1]\n        arr3.reverse()\n    \n        res = 0\n        sl = SortedList(key=lambda i: arr3[i])\n        sr = SortedList(key=lambda i: arr2[i])\n        for i in range(n): sr.add(i)\n        r = 0\n        for i in range(n):\n            val = arr2[i]\n            while r < n and arr1[r][0] <= arr1[i][0] + k:\n                sr.remove(r)\n                r += 1\n            val2 = 0\n            if sl: val2 = max(val2, arr3[sl[-1]])\n            if sr: val2 = max(val2, arr2[sr[-1]])\n            res = max(res, val + val2)\n            sl.add(i)\n        return res",
            "date": "2024-09-12"
        }
    ],
    "id": "2673"
}