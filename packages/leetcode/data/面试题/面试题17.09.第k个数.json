{
    "id": "1000037",
    "name": "面试题17.09.第k个数",
    "url": "https://leetcode.cn/problems/get-kth-magic-number-lcci",
    "desc": "有些数的素因子只有 3，5，7，请设计一个算法找出第 k 个数。注意，不是必须有这些素因子，而是必须不包含其他的素因子。例如，前几个数按顺序应该是 1，3，5，7，9，15，21。",
    "solutions": [
        {
            "date": "2021-03-14",
            "time": 92,
            "memory": 39.3,
            "script": "typescript",
            "desc": "依次获取最小值排序。",
            "code": "function getKthMagicNumber(k: number): number {\n  if (k === 1) return 1;\n  let p3 = 0,\n    p5 = 0,\n    p7 = 0;\n  const arr: number[] = [1];\n  while (arr.length <= k) {\n    const num3 = arr[p3] * 3,\n      num5 = arr[p5] * 5,\n      num7 = arr[p7] * 7;\n    if (num3 < num5 && num3 < num7) {\n      while (true) {\n        const nextNum = arr[++p3] * 3;\n        if (nextNum !== num5 && nextNum !== num7) break;\n      }\n      arr.push(num3);\n    }\n    if (num5 < num3 && num5 < num7) {\n      while (true) {\n        const nextNum = arr[++p5] * 5;\n        if (nextNum !== num3 && nextNum !== num7) break;\n      }\n      arr.push(num5);\n    }\n    if (num7 < num5 && num7 < num3) {\n      while (true) {\n        const nextNum = arr[++p7] * 7;\n        if (nextNum !== num5 && nextNum !== num3) break;\n      }\n      arr.push(num7);\n    }\n  }\n  return arr[k - 1];\n}"
        },
        {
            "date": "2021-03-14",
            "time": 108,
            "memory": 39.3,
            "script": "typescript",
            "desc": "优化题解 1。",
            "code": "function getKthMagicNumber(k: number): number {\n  if (k === 1) return 1;\n  let p3 = 0,\n    p5 = 0,\n    p7 = 0;\n  const arr: number[] = [1];\n  while (arr.length < k) {\n    const num3 = arr[p3] * 3,\n      num5 = arr[p5] * 5,\n      num7 = arr[p7] * 7;\n    const num = Math.min(num3, num5, num7);\n    if (num === num3) p3++;\n    if (num === num5) p5++;\n    if (num === num7) p7++;\n    arr.push(num);\n  }\n  return arr[k - 1];\n}"
        },
        {
            "date": "2022-09-28",
            "time": 0,
            "memory": 6.1,
            "script": "cpp",
            "desc": "遍历。",
            "code": "class Solution {\npublic:\n    int getKthMagicNumber(int k) {\n        vector<int> list(k);\n        list[0] = 1;\n        int p[3] = {0};\n        for (int i = 1; i < k; i++) {\n            int next = min(list[p[0]] * 3, min(list[p[1]] * 5, list[p[2]] * 7));\n            list[i] = next;\n            if (next % 3 == 0) p[0]++;\n            if (next % 5 == 0) p[1]++;\n            if (next % 7 == 0) p[2]++;\n        }\n        return list.back();\n    }\n};"
        }
    ],
    "tagList": [
        "哈希表",
        "数学",
        "动态规划",
        "堆（优先队列）"
    ],
    "level": "Medium"
}