{
    "name": "面试题 10.10. 数字流的秩",
    "url": "https://leetcode-cn.com/problems/rank-from-stream-lcci/",
    "difficulty": "中等",
    "tag": [
        "设计",
        "树状数组",
        "二分查找",
        "数据流"
    ],
    "desc": "假设你正在读取一串整数。每隔一段时间，你希望能找出数字 x 的秩(小于或等于 x 的值的个数)。",
    "solutions": [
        {
            "date": 1636819200000,
            "time": 104,
            "memory": 46.5,
            "script": "typescript",
            "desc": "树状数组。",
            "code": "class FenwickTree {\n  private arr: number[];\n  constructor(private n: number) {\n    this.arr = new Array(n + 1).fill(0);\n  }\n  add(idx: number, num: number): void {\n    while (idx <= this.n) {\n      this.arr[idx] += num;\n      idx += this.lowbit(idx);\n    }\n  }\n  at(idx: number): number {\n    return this.query(idx) - this.query(idx - 1);\n  }\n  query(idx: number): number {\n    let sum = 0;\n    while (idx) {\n      sum += this.arr[idx];\n      idx -= this.lowbit(idx);\n    }\n    return sum;\n  }\n  private lowbit(num: number) {\n    return num & -num;\n  }\n}\nclass StreamRank {\n  tree = new FenwickTree(50001);\n  track(x: number): void {\n    this.tree.add(x + 1, 1);\n  }\n  getRankOfNumber(x: number): number {\n    return this.tree.query(x + 1);\n  }\n}"
        }
    ]
}