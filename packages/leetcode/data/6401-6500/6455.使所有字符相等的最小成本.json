{
    "name": "6455.使所有字符相等的最小成本",
    "url": "https://leetcode.cn/problems/minimum-cost-to-make-all-characters-equal/",
    "difficulty": "简单",
    "tag": [],
    "desc": "返回使字符串内所有字符 相等 需要的 最小成本 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 92,
            "memory": 30.8,
            "desc": "从中间向两边遍历。",
            "code": "class Solution {\npublic:\n    typedef long long ll;\n    ll minimumCost(string s) {\n        ll n = s.size(), m = n / 2;\n        function<ll(ll, ll, bool)> compL = [&](ll idx, ll target, bool rev) -> ll {\n            if (idx == -1) return 0;\n            ll val = s[idx] - '0';\n            if (rev) val ^= 1;\n            if (val == target) return compL(idx - 1, target, rev);\n            return compL(idx - 1, target, !rev) + (idx + 1);\n        };\n        function<ll(ll, ll, bool)> compR = [&](ll idx, ll target, bool rev) -> ll {\n            if (idx == n) return 0;\n            ll val = s[idx] - '0';\n            if (rev) val ^= 1;\n            if (val == target) return compR(idx + 1, target, rev);\n            return compR(idx + 1, target, !rev) + (n - idx);\n        };\n        return min(compL(m - 1, 0, false) + compR(m, 0, false), compL(m - 1, 1, false) + compR(m, 1, false));\n    }\n};",
            "date": 1685203200000
        },
        {
            "script": "cpp",
            "time": 20,
            "memory": 11.8,
            "desc": "一次遍历，遇到左右不等的，要不翻转左边，要不翻转右边。",
            "code": "class Solution {\npublic:\n    typedef long long ll;\n    ll minimumCost(string s) {\n        ll res = 0;\n        for (int i = 1; i < s.size(); i++) {\n            if (s[i] != s[i - 1]) res += min(i, (int)s.size() - i);\n        }\n        return res;\n    }\n};",
            "date": 1685203200000
        },
        {
            "script": "python3",
            "time": 168,
            "memory": 16.7,
            "desc": "同上。",
            "code": "class Solution:\n    def minimumCost(self, s: str) -> int:\n        res = 0\n        for i in range(1, len(s)):\n            if s[i] != s[i - 1]: res += min(i, len(s) - i)\n        return res\n",
            "date": 1685203200000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2.7,
            "desc": "同上。",
            "code": "pub fn str_to_vec(s: &String) -> Vec<char> {\n    s.chars().collect()\n}\nimpl Solution {\n    pub fn minimum_cost(s: String) -> i64 {\n        let mut res = 0i64;\n        let s = str_to_vec(&s);\n        for i in 1..s.len() {\n            if s[i] != s[i - 1] {\n                res += i.min(s.len() - i) as i64;\n            }\n        }\n        res\n    }\n}",
            "date": 1685203200000
        }
    ]
}