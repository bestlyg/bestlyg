{
    "id": "214",
    "name": "214.最短回文串",
    "url": "https://leetcode.cn/problems/shortest-palindrome",
    "difficulty": "困难",
    "tag": [
        "字符串",
        "字符串匹配",
        "哈希函数",
        "滚动哈希"
    ],
    "desc": "给定一个字符串 s，你可以通过在字符串前面添加字符将其转换为回文串。找到并返回可以用这种方式转换的最短回文串。",
    "solutions": [
        {
            "date": 1598630400000,
            "time": 1164,
            "memory": 40.5,
            "script": "typescript",
            "desc": "通过判断每个子串是否为回文，如果是则添加后续字串。",
            "code": "function shortestPalindrome(s: string): string {\n  if (isPalindrome(s)) return s;\n  for (let i = s.length - 1; i >= 0; i--) {\n    const subS = s.substring(0, i);\n    if (!isPalindrome(subS)) continue;\n    return s.substr(i).split('').reverse().join('') + s;\n  }\n  return '';\n  function isPalindrome(s: string) {\n    let l = 0;\n    let r = s.length - 1;\n    while (l < r) {\n      if (s[l] !== s[r]) return false;\n      l++;\n      r--;\n    }\n    return true;\n  }\n}"
        },
        {
            "date": 1634227200000,
            "time": 68,
            "memory": 44.4,
            "script": "typescript",
            "desc": "kmp。",
            "code": "function shortestPalindrome(s: string): string {\n  const n = s.length;\n  let str = s + '#';\n  for (let i = n - 1; i >= 0; i--) str += s[i];\n  const next = [-1];\n  for (let i = 1, j = -1; i < n * 2 + 1; i++) {\n    while (j !== -1 && str[j + 1] !== str[i]) j = next[j];\n    if (str[j + 1] === str[i]) j++;\n    next[i] = j;\n  }\n  const idx = next[2 * n];\n  let ans = s;\n  for (let i = Math.max(0, idx + 1); i < n; i++) ans = s[i] + ans;\n  return ans;\n}"
        }
    ]
}