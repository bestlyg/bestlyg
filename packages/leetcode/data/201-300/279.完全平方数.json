{
  "name": "279. 完全平方数",
  "url": "https://leetcode-cn.com/problems/perfect-squares/",
  "difficulty": "中等",
  "tag": ["广度优先搜索", "数学", "动态规划"],
  "desc": "给你一个整数 n ，返回和为 n 的完全平方数的 最少数量 。",
  "solutions": [
    {
      "date": 1623340800000,
      "time": 292,
      "memory": 41.8,
      "script": "typescript",
      "desc": "背包问题。",
      "code": "function numSquares(n: number): number {\n  let MAX = 1;\n  const dp = new Array(n + 1).fill(Infinity);\n  dp[0] = 0;\n  dp[1] = 1;\n  for (let i = 2; i <= n; i++) {\n    while (MAX ** 2 <= i) MAX++;\n    for (let j = MAX - 1; j >= 1; j--) {\n      const num = j ** 2;\n      if (num > i) continue;\n      const count = ~~(i / num);\n      dp[i] = Math.min(dp[i], dp[i - num * count] + count);\n    }\n  }\n  return dp[n];\n}"
    },
    {
      "date": 1626883200000,
      "time": 200,
      "memory": 41.9,
      "script": "typescript",
      "desc": "背包问题。",
      "code": "function numSquares(n: number): number {\n  const dp = new Array(n + 1).fill(Infinity);\n  dp[0] = 0;\n  dp[1] = 1;\n  for (let i = 2; i < n + 1; i++) {\n    for (let j = 1; j ** 2 <= i; j++) {\n      dp[i] = Math.min(dp[i - j ** 2] + 1, dp[i]);\n    }\n  }\n  return dp[n];\n}"
    }
  ]
}
