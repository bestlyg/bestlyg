{
  "name": "230. 二叉搜索树中第 K 小的元素",
  "url": "https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/",
  "difficulty": "中等",
  "tag": ["树", "二分查找"],
  "desc": "给定一个二叉搜索树，编写一个函数 kthSmallest 来查找其中第 k 个最小的元素。",
  "solutions": [
    {
      "date": 1582473600000,
      "time": 1,
      "memory": 41.3,
      "script": "java",
      "desc": "中序遍历储存值后直接获取第 k 个值。",
      "code": "class Solution {\n    ArrayList<Integer> list = new ArrayList<Integer>();\n    public int kthSmallest(TreeNode root, int k) {\n    \tinorder(root);\n    \treturn list.get(k-1);\n    }\n\tpublic void inorder(TreeNode node) {\n\t\tif (node.left != null)\n\t\t\tinorder(node.left);\n\t\tlist.add(node.val);\n\t\tif (node.right != null)\n\t\t\tinorder(node.right);\n\t}\n}"
    },
    {
      "date": 1634400000000,
      "time": 100,
      "memory": 44.7,
      "script": "typescript",
      "desc": "中序遍历。",
      "code": "function kthSmallest(root: TreeNode | null, k: number): number {\n  let ans!: number;\n  dfs(root);\n  return ans;\n  function dfs(node: TreeNode | null): void {\n    if (node === null) return;\n    dfs(node.left);\n    if (--k === 0) {\n      ans = node.val;\n      return;\n    }\n    dfs(node.right);\n  }\n}"
    }
  ]
}
