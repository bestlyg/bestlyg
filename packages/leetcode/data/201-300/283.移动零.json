{
    "id": "283",
    "name": "283.移动零",
    "url": "https://leetcode.cn/problems/move-zeroes",
    "desc": "给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。",
    "solutions": [
        {
            "date": "2020-11-19",
            "time": 96,
            "memory": 40.7,
            "script": "typescript",
            "desc": "遍历下标进行删除。",
            "code": "function moveZeroes(nums: number[]): void {\n  const indexes: number[] = [];\n  for (let i = 0, l = nums.length; i < l; i++) {\n    nums[i] === 0 && indexes.unshift(i);\n  }\n  indexes.forEach(v => nums.splice(v, 1));\n  nums.push(...new Array(indexes.length).fill(0));\n}"
        },
        {
            "date": "2020-11-19",
            "time": 104,
            "memory": 41.2,
            "script": "typescript",
            "desc": "双指针。",
            "code": "function moveZeroes(nums: number[]): void {\n  let left = 0;\n  let right = 0;\n  const len = nums.length;\n  const swap = (i1: number, i2: number) => ([nums[i1], nums[i2]] = [nums[i2], nums[i1]]);\n  while (right < len) {\n    if (nums[right] != 0) {\n      swap(left, right);\n      left++;\n    }\n    right++;\n  }\n}"
        }
    ],
    "tagList": ["数组", "双指针"],
    "level": "Easy"
}
