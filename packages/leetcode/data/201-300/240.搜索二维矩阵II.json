{
    "id": "240",
    "name": "240.搜索二维矩阵II",
    "url": "https://leetcode.cn/problems/search-a-2d-matrix-ii",
    "desc": "编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。",
    "solutions": [
        {
            "date": "2021-07-24",
            "time": 72,
            "memory": 40.8,
            "script": "typescript",
            "desc": "从右上角开始寻找。",
            "code": "function searchMatrix(matrix: number[][], target: number): boolean {\n  let i = 0;\n  let j = matrix[0].length - 1;\n  while (i < matrix.length && j >= 0) {\n    if (matrix[i][j] > target) j--;\n    else if (matrix[i][j] < target) i++;\n    else return true;\n  }\n  return false;\n}"
        },
        {
            "date": "2021-10-25",
            "time": 96,
            "memory": 43.1,
            "script": "typescript",
            "desc": "拆分查找。",
            "code": "function searchMatrix(matrix: number[][], target: number): boolean {\n  return matrix.flat().includes(target);\n}"
        },
        {
            "date": "2021-10-25",
            "time": 72,
            "memory": 41,
            "script": "typescript",
            "desc": "从右上角开始找，target 就左移，target 大就下移。",
            "code": "function searchMatrix(matrix: number[][], target: number): boolean {\n  const m = matrix.length;\n  const n = matrix[0].length;\n  let row = 0;\n  let col = n - 1;\n  while (row < m && col >= 0) {\n    const num = matrix[row][col];\n    if (num === target) return true;\n    if (num > target) col--;\n    else row++;\n  }\n  return false;\n}"
        }
    ],
    "tagList": [
        "数组",
        "二分查找",
        "分治",
        "矩阵"
    ],
    "level": "Medium"
}