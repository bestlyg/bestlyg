{
  "name": "227. 基本计算器 II",
  "url": "https://leetcode-cn.com/problems/basic-calculator-ii/",
  "difficulty": "中等",
  "tag": ["栈", "字符串"],
  "desc": "给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。",
  "solutions": [
    {
      "date": 1615392000000,
      "time": 148,
      "memory": 50.6,
      "script": "typescript",
      "desc": "先乘除后加减。",
      "code": "const numReg = /\\-?\\d+/;\nconst opMap: Record<string, (num1: number, num2: number) => number> = {\n  '+': (num1, num2) => num1 + num2,\n  '-': (num1, num2) => num1 - num2,\n  '*': (num1, num2) => num1 * num2,\n  '/': (num1, num2) => ~~(num1 / num2),\n};\nfunction calculate(s: string): number {\n  s = s.replace(/ /g, '');\n  const len = s.length;\n  const stack: string[] = [];\n  const peek = () => stack[stack.length - 1];\n  // 去乘除\n  for (let i = 0; i < len; i++) {\n    let c = s[i];\n    if (c === '*' || c === '/' || c === '+') {\n      stack.push(c);\n    } else if (c === '-') {\n      if (stack.length === 0) stack.push('0');\n      stack.push(c);\n    } else {\n      while (i < len - 1 && numReg.test(s[i + 1])) {\n        c += s[i + 1];\n        i++;\n      }\n      const top = peek();\n      if (stack.length === 0) {\n        stack.push(c);\n      } else if (top === '*' || top === '/') {\n        const op = stack.pop()!;\n        const num1 = +stack.pop()!;\n        const num2 = +c;\n        stack.push(opMap[op](num1, num2) + '');\n      } else if (top === '-') {\n        stack[stack.length - 1] = '+';\n        stack.push(c.startsWith('-') ? c.substr(1) : '-' + c);\n      } else {\n        stack.push(c);\n      }\n    }\n  }\n  // 去加减\n  const newStack: string[] = [];\n  for (const c of stack) {\n    if (numReg.test(c)) {\n      if (newStack[newStack.length - 1] === '+') {\n        const op = newStack.pop()!;\n        const num1 = +newStack.pop()!;\n        const num2 = +c;\n        newStack.push(opMap[op](num1, num2) + '');\n      } else {\n        newStack.push(c);\n      }\n    } else {\n      newStack.push(c);\n    }\n  }\n  return +newStack[0];\n}"
    }
  ]
}
