{
    "name": "202.快乐数",
    "url": "https://leetcode-cn.com/problems/happy-number/",
    "difficulty": "简单",
    "tag": [
        "哈希表",
        "数学"
    ],
    "desc": "编写一个算法来判断一个数 n 是不是快乐数。",
    "solutions": [
        {
            "date": 1588176000000,
            "time": 72,
            "memory": 35.2,
            "script": "javascript",
            "desc": "递归判断，使用 Set 判断是否重复。",
            "code": "/**\n * @param {number} n\n * @return {boolean}\n */\nvar isHappy = function (n) {\n  const set = new Set();\n  return happy(n);\n  function happy(n) {\n    if (set.has(n)) return false;\n    set.add(n);\n    let num = 0;\n    while (n !== 0) {\n      num += (n % 10) ** 2;\n      n = Math.floor(n / 10);\n    }\n    if (num === 1) return true;\n    else return happy(num);\n  }\n};"
        },
        {
            "date": 1614960000000,
            "time": 80,
            "memory": 39.7,
            "script": "typescript",
            "desc": "循环计算。",
            "code": "function isHappy(n: number): boolean {\n  const set = new Set();\n  while (n !== 1) {\n    if (set.has(n)) return false;\n    set.add(n);\n    let sum = 0;\n    while (n !== 0) {\n      sum += (n % 10) ** 2;\n      n = ~~(n / 10);\n    }\n    n = sum;\n  }\n  return true;\n}"
        },
        {
            "date": 1637251200000,
            "time": 0,
            "memory": 5.3,
            "script": "c",
            "desc": "快慢指针。",
            "code": "int comp(int n) {\n    int sum = 0, num;\n    while (n) {\n        num = n % 10;\n        sum += num * num;\n        n /= 10;\n    }\n    return sum;\n}\nbool isHappy(int n){\n    int fast = n, slow = n;\n    do{\n        fast = comp(comp(fast));\n        slow = comp(slow);\n    } while(fast != slow);\n    return slow == 1;\n}"
        },
        {
            "date": 1646236800000,
            "time": 4,
            "memory": 6.2,
            "script": "c++",
            "desc": "递归，记录当前值是否被遍历过。",
            "code": "class Solution {\n   public:\n    unordered_set<int> s;\n    bool isHappy(int n) {\n        if (s.count(n)) return 0;\n        s.insert(n);\n        int ans = 0;\n        for (; n; n /= 10) ans += pow(n % 10, 2);\n        if (ans == 1) return 1;\n        return isHappy(ans);\n    }\n};"
        },
        {
            "date": 1646236800000,
            "time": 0,
            "memory": 5.6,
            "script": "c++",
            "desc": "快慢指针。",
            "code": "class Solution {\n   public:\n    int next(int n) {\n        int ans = 0;\n        for (; n; n /= 10) ans += pow(n % 10, 2);\n        return ans;\n    }\n    bool isHappy(int n) {\n        int slow = n, fast = n;\n        while (fast != 1) {\n            slow = next(slow);\n            fast = next(next(fast));\n            if (slow == fast) break;\n        }\n        return fast == 1;\n    }\n};"
        }
    ]
}