{
    "id": "2894",
    "name": "2813.子序列最大优雅度",
    "url": "https://leetcode.cn/problems/maximum-elegance-of-a-k-length-subsequence",
    "desc": "你的任务是从 items 所有长度为 k 的子序列中，找出 最大优雅度 。",
    "solutions": [
        {
            "script": "python",
            "time": 237,
            "memory": 42.13,
            "desc": "从大到小收益排序后，遍历时记录当前类目存在的次数。",
            "code": "class Solution:\n    def findMaximumElegance(self, items: List[List[int]], k: int) -> int:\n        items.sort(key = lambda item: -item[0])\n        print(items)\n        set1 = set()\n        stack2 = []\n        cur = 0\n        for i in range(k):\n            item = items[i]\n            cur += item[0]\n            if item[1] in set1:\n                stack2.append(item[0])\n            else:\n                set1.add(item[1])\n        res = cur + len(set1) ** 2\n        for i in range(k, len(items)):\n            item = items[i]\n            if item[1] not in set1 and len(stack2):\n                cur += item[0] - stack2.pop()\n                set1.add(item[1])\n            res = max(res, cur + len(set1) ** 2)\n        return res",
            "date": "2024-06-13"
        }
    ],
    "tagList": [
        "栈",
        "贪心",
        "数组",
        "哈希表",
        "排序",
        "堆（优先队列）"
    ],
    "level": "Hard"
}