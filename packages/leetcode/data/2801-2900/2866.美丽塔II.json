{
    "name": "2866.美丽塔II",
    "url": "https://leetcode.cn/problems/beautiful-towers-ii/",
    "difficulty": "简单",
    "tag": [],
    "desc": "请你返回满足 美丽塔 要求的方案中，高度和的最大值 。",
    "solutions": [
        {
            "script": "python",
            "time": 316,
            "memory": 42.55,
            "desc": "字符串拼接。",
            "code": "class Solution:\n    def maximumSumOfHeights(self, maxHeights: List[int]) -> int:\n        n = len(maxHeights)\n        prev = [-1] * n\n        next = [n] * n\n        s = []\n        for i in range(n):\n            while s and maxHeights[s[-1]] >= maxHeights[i]: s.pop()\n            if s: prev[i] = s[-1]\n            s.append(i)\n        s.clear()\n        for i in range(n):\n            while s and maxHeights[s[-1]] > maxHeights[i]: next[s.pop()] = i\n            s.append(i)\n        lsums = [0] * n\n        rsums = [0] * n\n        for i in range(n):\n            lsums[i] += (i - prev[i]) * maxHeights[i]\n            if prev[i] != -1: lsums[i] += lsums[prev[i]]\n        for i in range(n - 1, -1, -1):\n            rsums[i] += (next[i] - i) * maxHeights[i]\n            if next[i] != n: rsums[i] += rsums[next[i]]\n        return max(lsums[i] + rsums[i] - maxHeights[i] for i in range(n))",
            "date": 1703088000000
        }
    ]
}