{
    "id": "2139",
    "name": "2013.检测正方形",
    "url": "https://leetcode.cn/problems/detect-squares",
    "desc": "给你一个在 X-Y 平面上的点构成的数据流。设计一个满足下述要求的算法：添加 一个在数据流中的新点到某个数据结构中。可以添加 重复 的点，并会视作不同的点进行处理。给你一个查询点，请你从数据结构中选出三个点，使这三个点和查询点一同构成一个 面积为正 的 轴对齐正方形 ，统计 满足该要求的方案数目。",
    "solutions": [
        {
            "date": "2022-01-26",
            "time": 228,
            "memory": 91.7,
            "script": "cpp",
            "desc": "统计每个点出现的次数。",
            "code": "class DetectSquares {\n   public:\n    unordered_map<int, unordered_map<int, int>> m;\n    DetectSquares() {}\n    void add(vector<int> point) { m[point[0]][point[1]]++; }\n    int count(vector<int> point) {\n        int ans = 0, x1 = point[0], y1 = point[1];\n        for (auto &data : m[x1]) {\n            int x2 = x1, y2 = data.first, cnt2 = data.second,\n                edge = abs(y1 - y2);\n            if (y2 == y1) continue;\n            ans += cnt2 * m[x1 - edge][y1] * m[x2 - edge][y2];\n            ans += cnt2 * m[x1 + edge][y1] * m[x2 + edge][y2];\n        }\n        return ans;\n    }\n};"
        }
    ],
    "tagList": [
        "设计",
        "数组",
        "哈希表",
        "计数"
    ],
    "level": "Medium"
}