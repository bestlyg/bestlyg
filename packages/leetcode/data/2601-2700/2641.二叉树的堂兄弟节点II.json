{
    "name": "2641.二叉树的堂兄弟节点II",
    "url": "https://leetcode.cn/problems/cousins-in-binary-tree-ii",
    "difficulty": "简单",
    "tag": [],
    "desc": "给你一棵二叉树的根 root ，请你将每个节点的值替换成该节点的所有 堂兄弟节点值的和 。如果两个节点在树中有相同的深度且它们的父节点不同，那么它们互为 堂兄弟 。请你返回修改值之后，树的根 root 。",
    "solutions": [
        {
            "script": "python",
            "date": 1707235200000,
            "time": 41,
            "memory": 16.5,
            "desc": "bfs时当记录完一层的节点后进行遍历处理。",
            "code": "class Solution:\n    def replaceValueInTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        root.val = 0\n        map = {}\n        q = deque()\n        q.append(root)\n        size = 1\n        sum = 0\n        while q:\n            node = q.popleft()\n            if node.left:\n                map[node.left] = node\n                q.append(node.left)\n                sum += node.left.val\n            if node.right: \n                map[node.right] = node\n                q.append(node.right)\n                sum += node.right.val\n            size -= 1\n            if size == 0:\n                nums = []\n                for child in q:\n                    csum = 0\n                    if map[child].left: csum += map[child].left.val\n                    if map[child].right: csum += map[child].right.val\n                    nums.append(sum - csum)\n                for i in range(len(q)):\n                    q[i].val = nums[i]\n                sum = 0\n                size = len(q)\n        return root"
        }
    ]
}