{
    "name": "2679.矩阵中的和",
    "url": "https://leetcode.cn/problems/sum-in-a-matrix/",
    "difficulty": "简单",
    "tag": [],
    "desc": "给你一个下标从 0 开始的二维整数数组 nums 。请你返回最后的 分数 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 176,
            "memory": 67.4,
            "desc": "堆。",
            "code": "class Solution {\npublic:\n    int matrixSum(vector<vector<int>>& nums) {\n        int n = nums.size(), m = nums[0].size();\n        vector<priority_queue<int>> qs(n);\n        for (int i = 0; i < n; i++) {\n            auto &q = qs[i];\n            for (auto &num : nums[i]) q.push(num);\n        }\n        int res = 0;\n        for (int j = 0; j < m; j++) {\n            priority_queue<int> q;\n            for (int i = 0; i < n; i++) {\n                q.push(qs[i].top());\n                qs[i].pop();\n            }\n            res += q.top();\n        }\n        return res;\n    }\n};",
            "date": 1688400000000
        },
        {
            "script": "cpp",
            "time": 100,
            "memory": 46.9,
            "desc": "排序。",
            "code": "class Solution {\npublic:\n    int matrixSum(vector<vector<int>>& nums) {\n        int res = 0;\n        for (auto &row : nums) sort(row.begin(), row.end());\n        for (int j = nums[0].size() - 1; j >= 0; j--) {\n            int val = 0;\n            for (int i = 0; i < nums.size(); i++) val = max(val, nums[i][j]);\n            res += val;\n        }\n        return res;\n    }\n};",
            "date": 1688400000000
        },
        {
            "script": "python",
            "time": 132,
            "memory": 33.6,
            "desc": "同上。",
            "code": "class Solution:\n    def matrixSum(self, nums: List[List[int]]) -> int:\n        for l in nums:\n            l.sort()\n        res = 0\n        for j in range(len(nums[0]) - 1, -1, -1):\n            val = 0\n            for i in range(len(nums)):\n                val = max(val, nums[i][j])\n            res += val\n        return res",
            "date": 1688400000000
        },
        {
            "script": "rust",
            "time": 20,
            "memory": 3.6,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn matrix_sum(mut nums: Vec<Vec<i32>>) -> i32 {\n        let mut res = 0;\n        for row in &mut nums {\n            row.sort()\n        }\n        for j in (0..nums[0].len()).rev() {\n            let mut val = 0;\n            for i in 0..nums.len() {\n                val = val.max(nums[i][j]);\n            }\n            res += val;\n        }\n        res\n    }\n}",
            "date": 1688400000000
        }
    ]
}