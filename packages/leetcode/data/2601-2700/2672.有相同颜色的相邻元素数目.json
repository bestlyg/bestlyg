{
    "id": "2779",
    "name": "2672.有相同颜色的相邻元素数目",
    "url": "https://leetcode.cn/problems/number-of-adjacent-elements-with-the-same-color",
    "difficulty": "中等",
    "tag": [
        "数组"
    ],
    "desc": "给你一个下标从 0 开始、长度为 n 的数组 nums 。请你返回一个长度与 queries 相等的数组 answer ，其中 answer[i]是前 i 个操作 之后 ，相邻元素颜色相同的数目。",
    "solutions": [
        {
            "script": "cpp",
            "time": 452,
            "memory": 197.9,
            "desc": "每次着色时统计对前后两个值得影响。",
            "code": "class Solution {\npublic:\n    vector<int> colorTheArray(int n, vector<vector<int>>& queries) {\n        vector<int> res(queries.size(), 0), list(n, 0);\n        if (n == 1) return res;\n        int prev = 0;\n        for (int i = 0; i < queries.size(); i++) {\n            int idx = queries[i][0], col = queries[i][1];\n            if (list[idx] != col) {\n                if (idx != n - 1) {\n                    if (list[idx] == 0) {\n                        if (col == list[idx + 1]) prev++;\n                    } else {\n                        if (list[idx] == list[idx + 1]) prev--;\n                        else if (col == list[idx + 1]) prev++;\n                    }\n                }\n                if (idx != 0) {\n                    if (list[idx] == 0) {\n                        if (col == list[idx - 1]) prev++;\n                    } else {\n                        if (list[idx] == list[idx - 1]) prev--;\n                        else if (col == list[idx - 1]) prev++;\n                    }\n                }\n            }\n            list[idx] = col;\n            res[i] = prev;\n        }\n        return res;\n    }\n};",
            "date": 1683388800000
        },
        {
            "script": "python3",
            "time": 276,
            "memory": 47.6,
            "desc": "同上。",
            "code": "class Solution:\n    def colorTheArray(self, n: int, queries: List[List[int]]) -> List[int]:\n        res = [0] * len(queries)\n        list = [0] * n\n        if n == 1:\n            return res\n        prev = 0\n        for i in range(0, len(queries)):\n            idx = queries[i][0]\n            col = queries[i][1]\n            if list[idx] != col:\n                if idx != n - 1:\n                    if list[idx] == 0:\n                        if col == list[idx + 1]:\n                            prev += 1\n                    else:\n                        if list[idx] == list[idx + 1]:\n                            prev -= 1\n                        elif col == list[idx + 1]:\n                            prev += 1\n\n                if idx != 0:\n                    if list[idx] == 0:\n                        if col == list[idx - 1]:\n                            prev += 1\n                    else:\n                        if list[idx] == list[idx - 1]:\n                            prev -= 1\n                        elif col == list[idx - 1]:\n                            prev += 1\n            list[idx] = col\n            res[i] = prev\n        return res",
            "date": 1683388800000
        },
        {
            "script": "rust",
            "time": 60,
            "memory": 8.8,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn color_the_array(n: i32, queries: Vec<Vec<i32>>) -> Vec<i32> {\n        let n = n as usize;\n        let mut res = vec![0; queries.len()];\n        let mut list = vec![0; n];\n        if n != 1 {\n            let mut prev = 0;\n            for i in 0..queries.len() {\n                let idx = queries[i][0] as usize;\n                let col = queries[i][1];\n                if list[idx] != col {\n                    if idx != n - 1 {\n                        if list[idx] == 0 {\n                            if col == list[idx + 1] {\n                                prev += 1;\n                            }\n                        } else {\n                            if list[idx] == list[idx + 1] {\n                                prev -= 1;\n                            } else if col == list[idx + 1] {\n                                prev += 1;\n                            }\n                        }\n                    }\n                    if idx != 0 {\n                        if list[idx] == 0 {\n                            if col == list[idx - 1] {\n                                prev += 1;\n                            }\n                        } else {\n                            if list[idx] == list[idx - 1] {\n                                prev -= 1;\n                            } else if col == list[idx - 1] {\n                                prev += 1;\n                            }\n                        }\n                    }\n                }\n                list[idx] = col;\n                res[i] = prev;\n            }\n        }\n        res\n    }\n}",
            "date": 1683388800000
        }
    ]
}