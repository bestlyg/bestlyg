{
    "id": "2778",
    "name": "2671.频率跟踪器",
    "url": "https://leetcode.cn/problems/frequency-tracker",
    "difficulty": "中等",
    "tag": [
        "设计",
        "哈希表"
    ],
    "desc": "请你设计并实现一个能够对其中的值进行跟踪的数据结构，并支持对频率相关查询进行应答。",
    "solutions": [
        {
            "script": "python",
            "time": 374,
            "memory": 81.89,
            "desc": "利用两个dict记录数量和频率。",
            "code": "class FrequencyTracker:\n    def __init__(self):\n        self.freq_map = {}\n        self.cnt_map = {}\n    \n    def del_freq(self, freq: int, number: int):\n        if freq in self.freq_map and number in self.freq_map[freq]:\n            self.freq_map[freq].remove(number)\n            if not len(self.freq_map[freq]): del self.freq_map[freq]\n\n    def add_freq(self, freq: int, number: int):\n        if freq not in self.freq_map: self.freq_map[freq] = set()\n        if number not in self.freq_map[freq]: self.freq_map[freq].add(number)\n\n    def add(self, number: int) -> None:\n        if number not in self.cnt_map: self.cnt_map[number] = 0\n        self.del_freq(self.cnt_map[number], number)\n        self.cnt_map[number] += 1\n        self.add_freq(self.cnt_map[number], number)\n\n    def deleteOne(self, number: int) -> None:\n        if number not in self.cnt_map: self.cnt_map[number] = 0\n        self.del_freq(self.cnt_map[number], number)\n        if self.cnt_map[number] > 0:\n            self.cnt_map[number] -= 1\n            self.add_freq(self.cnt_map[number], number)\n\n    def hasFrequency(self, frequency: int) -> bool:\n        return frequency in self.freq_map",
            "date": 1710950400000
        }
    ]
}