{
    "id": "2771",
    "name": "2676.节流",
    "url": "https://leetcode.cn/problems/throttle",
    "difficulty": "中等",
    "tag": [],
    "desc": "现给定一个函数 fn 和一个以毫秒为单位的时间 t ，请你返回该函数的 节流 版本。",
    "solutions": [
        {
            "script": "typescript",
            "time": 76,
            "memory": 42.4,
            "desc": "闭包存储状态，利用setTimeout恢复状态。",
            "code": "type F = (...args: any[]) => void;\nfunction throttle(fn: F, t: number): F {\n    // 如果有需要调用但未调用的情况，储存参数\n    let callArgs: any[] | null = null;\n    // 记录当前状态是否已经掉用过\n    let called = false;\n    return function call(...args) {\n        if (called) callArgs = args;\n        else {\n            fn(...args);\n            called = true;\n            setTimeout(() => {\n                // 恢复调用状态\n                called = false;\n                if (callArgs) call(...callArgs), (callArgs = null);\n            }, t);\n        }\n    };\n}",
            "date": 1684166400000
        }
    ]
}
