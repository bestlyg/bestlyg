{
    "id": "2723",
    "name": "2609.最长平衡子字符串",
    "url": "https://leetcode.cn/problems/find-the-longest-balanced-substring-of-a-binary-string",
    "difficulty": "简单",
    "tag": [],
    "desc": "给你一个仅由 0 和 1 组成的二进制字符串 s 。 如果子字符串中 所有的 0 都在 1 之前 且其中 0 的数量等于 1 的数量，则认为 s 的这个子字符串是平衡子字符串。请注意，空子字符串也视作平衡子字符串。 返回  s 中最长的平衡子字符串长度。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 6,
            "desc": "遍历。",
            "code": "class Solution {\n   public:\n    int findTheLongestBalancedSubstring(string s) {\n        int cnt0 = 0, cnt1 = 0, res = 0;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == '0') {\n                cnt0++;\n            } else {\n                cnt1++;\n                if (cnt0 >= cnt1) {\n                    res = max(res, cnt1 * 2);\n                }\n                if (i + 1 == s.size() || s[i + 1] == '0') {\n                    cnt0 = cnt1 = 0;\n                }\n            }\n        }\n        return res;\n    }\n};",
            "date": 1680364800000
        },
        {
            "script": "python3",
            "time": 36,
            "memory": 15,
            "desc": "同上。",
            "code": "class Solution:\n    def findTheLongestBalancedSubstring(self, s: str) -> int:\n        cnt0 = cnt1 = res = 0\n        for i in range(len(s)):\n            c = s[i]\n            if c == '0':\n                cnt0 += 1\n            else:\n                cnt1 += 1\n                if cnt0 >= cnt1:\n                    res = max(res, cnt1*2)\n                if i + 1 == len(s) or s[i+1] == '0':\n                    cnt0 = cnt1 = 0\n        return res",
            "date": 1680364800000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn find_the_longest_balanced_substring(s: String) -> i32 {\n        let s = s.chars().collect::<Vec<char>>();\n        let (mut cnt0, mut cnt1, mut res) = (0, 0, 0);\n        for i in 0..s.len() {\n            if s[i] == '0' {\n                cnt0 += 1\n            } else {\n                cnt1 += 1;\n                if cnt0 >= cnt1 {\n                    res = res.max(cnt1 * 2)\n                }\n                if i + 1 == s.len() || s[i + 1] == '0' {\n                    cnt0 = 0;\n                    cnt1 = 0;\n                }\n            }\n        }\n        res\n    }\n}",
            "date": 1680364800000
        }
    ]
}