{
    "name": "6272. 好分区的数目",
    "url": "https://leetcode.cn/problems/number-of-great-partitions/",
    "difficulty": "困难",
    "tag": [],
    "desc": "返回 不同 的好分区的数目。由于答案可能很大，请返回对 109 + 7 取余 后的结果。",
    "solutions": [
        {
            "date": 1671897600000,
            "time": 112,
            "memory": 36.7,
            "script": "cpp",
            "desc": "逆向统计，统计出有多少组是少于 k 的，res = sum - 2 \\* val。",
            "code": "class Solution {\npublic:\n    int countPartitions(vector<int>& nums, int k) {\n        if (accumulate(nums.begin(), nums.end(), 0LL) < 2 * k) return 0;\n        sort(nums.begin(), nums.end());\n        int n = nums.size(), mod = 1e9 + 7, ans = 1;\n        vector<vector<int>> dp(n + 1, vector<int>(k, 0));\n        dp[0][0] = 1;\n        for (int i = 1; i <= n; i++) {\n            ans = (ans * 2) % mod;\n            dp[i][0] = 1;\n            for (int j = 1; j < k; j++) {\n                dp[i][j] = (dp[i][j] + dp[i - 1][j]) % mod;\n                if (j >= nums[i - 1]) dp[i][j] = (dp[i][j] + dp[i - 1][j - nums[i - 1]]) % mod;\n            }\n        }\n        for (auto &num : dp[n]) ans = (ans - 2 * num % mod + mod) % mod;\n        return ans;\n    }\n};"
        }
    ]
}