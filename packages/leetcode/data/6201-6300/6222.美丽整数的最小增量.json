{
    "name": "6222.美丽整数的最小增量",
    "url": "https://leetcode.cn/problems/minimum-addition-to-make-integer-beautiful/",
    "difficulty": "中等",
    "tag": [],
    "desc": "找出并返回满足 n + x 是 美丽整数 的最小非负整数 x 。生成的输入保证总可以使 n 变成一个美丽整数。",
    "solutions": [
        {
            "date": 1667059200000,
            "time": 0,
            "memory": 5.7,
            "script": "cpp",
            "desc": "通过把每一位都变成 0 尝试是否总数小于 target。",
            "code": "class Solution {\n  public:\n      long long n;\n      int target;\n      int getCnt() {\n          long long num = n;\n          int cnt = 0;\n          while (num) {\n              cnt++;\n              num /= 10;\n          }\n          return cnt;\n      }\n      long long comp(int size) {\n          long long num = n, val = 0, m = 1;\n          for (int i = 0; i < size; i++) {\n              val = (num % 10) * m + val;\n              // cout << \"Val = \" << val << endl;\n              num /= 10;\n              m *= 10;\n          }\n          return n - val + m;\n      }\n      int sum(long long num) {\n          int sum = 0;\n          while (num) {\n              sum += num % 10;\n              num /= 10;\n          }\n          return sum;\n      }\n      long long makeIntegerBeautiful(long long n, int target) {\n          if (sum(n) <= target) return 0;\n          this->n = n;\n          this->target = target;\n          int cnt = getCnt();\n          int l = 0, r = cnt;\n          while (l < r) {\n              int m = (l + r) / 2;\n              long long num = comp(m);\n              if (sum(num) <= target) r = m;\n              else l = m + 1;\n          }\n          return comp(l) - n;\n      }\n  };"
        }
    ]
}