{
    "name": "剑指 Offer 26. 树的子结构",
    "url": "https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/",
    "difficulty": "中等",
    "tag": [
        "树"
    ],
    "desc": "输入两棵二叉树 A 和 B，判断 B 是不是 A 的子结构。",
    "solutions": [
        {
            "date": 1617379200000,
            "time": 144,
            "memory": 58.2,
            "script": "typescript",
            "desc": "依次比较所有值。",
            "code": "function isSubStructure(A: TreeNode | null, B: TreeNode | null): boolean {\n  if (!A || !B) return false;\n  if (A.val === B.val) {\n    if (\n      (!B.left && !B.right) ||\n      (!B.left && A.right?.val === B.right?.val && isSubStructure(A.right, B.right)) ||\n      (!B.right && A.left?.val === B.left?.val && isSubStructure(A.left, B.left)) ||\n      (A.right?.val === B.right?.val &&\n        A.left?.val === B.left?.val &&\n        isSubStructure(A.left, B.left) &&\n        isSubStructure(A.right, B.right))\n    )\n      return true;\n    return isSubStructure(A.left, B) || isSubStructure(A.right, B);\n  } else {\n    return isSubStructure(A.left, B) || isSubStructure(A.right, B);\n  }\n}"
        },
        {
            "date": 1617379200000,
            "time": 144,
            "memory": 58.1,
            "script": "typescript",
            "desc": "利用辅助检测判断是否相等。",
            "code": "const check = (A: TreeNode | null, B: TreeNode | null): boolean => {\n  if (!B) return true;\n  if (!A) return false;\n  return A.val === B.val && check(A.left, B.left) && check(A.right, B.right);\n};\nfunction isSubStructure(A: TreeNode | null, B: TreeNode | null): boolean {\n  if (!A || !B) return false;\n  if (check(A, B)) return true;\n  return isSubStructure(A.left, B) || isSubStructure(A.right, B);\n}"
        }
    ]
}