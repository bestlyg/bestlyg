{
    "name": "433. 最小基因变化",
    "url": "https://leetcode-cn.com/problems/minimum-genetic-mutation/",
    "difficulty": "中等",
    "tag": [
        "广度优先搜索",
        "哈希表",
        "字符串"
    ],
    "desc": "给你两个基因序列 start 和 end ，以及一个基因库 bank ，请你找出并返回能够使  start 变化为 end 所需的最少变化次数。如果无法完成此基因变化，返回 -1 。",
    "solutions": [
        {
            "date": 1651852800000,
            "time": 0,
            "memory": 6.4,
            "script": "cpp",
            "desc": "bfs。",
            "code": "class Solution {\npublic:\n    int minMutation(string start, string end, vector<string>& bank) {\n        unordered_set<string> s;\n        for (auto &v : bank) s.insert(v);\n        queue<string> q;\n        q.push(start);\n        int level = 0, size = 1;\n        while (q.size()) {\n            string cur = q.front(); q.pop();\n            if (cur == end) return level;\n            for (auto &s : next(s, cur)) q.push(s);\n            if (--size == 0) { size = q.size(); level++; }\n        }\n        return -1;\n    }\n    char list[4] = {'A', 'C', 'G', 'T'};\n    vector<string> next(unordered_set<string> &s, string &str) {\n        vector<string> ans;\n        for (int i = 0; i < 8; i++) {\n            for (int j = 0; j < 4; j++) {\n                if (str[i] == list[j]) continue;\n                string next = str;\n                next[i] = list[j];\n                if (s.count(next)) {\n                    ans.emplace_back(next);\n                    s.erase(next);\n                }\n            }\n        }\n        return ans;\n    }\n};"
        }
    ]
}