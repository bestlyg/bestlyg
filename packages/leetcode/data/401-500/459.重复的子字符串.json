{
    "name": "459. 重复的子字符串",
    "url": "https://leetcode-cn.com/problems/repeated-substring-pattern/",
    "difficulty": "简单",
    "tag": [
        "字符串"
    ],
    "desc": "给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过 10000。",
    "solutions": [
        {
            "date": 1598198400000,
            "time": 100,
            "memory": 39.3,
            "script": "typescript",
            "desc": "获取每个子字符串进行判断",
            "code": "function repeatedSubstringPattern(s: string): boolean {\n  const l = s.length;\n  for (let i = 1; i < l; i++) {\n    if (\n      s[i - 1] === s[l - 1] &&\n      l % i === 0 &&\n      s.replace(new RegExp(s.substring(0, i), 'g'), '') === ''\n    )\n      return true;\n  }\n  return false;\n}"
        },
        {
            "date": 1634227200000,
            "time": 80,
            "memory": 44.7,
            "script": "typescript",
            "desc": "kmp。",
            "code": "function repeatedSubstringPattern(s: string): boolean {\n  const next = [-1];\n  const n = s.length;\n  for (let i = 1, j = -1; i < n; i++) {\n    while (j !== -1 && s[j + 1] !== s[i]) j = next[j];\n    if (s[j + 1] === s[i]) j++;\n    next[i] = j;\n  }\n  const idx = next[n - 1];\n  return idx !== -1 && n % (n - idx - 1) === 0;\n}"
        }
    ]
}