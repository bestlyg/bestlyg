{
    "id": "438",
    "name": "438.找到字符串中所有字母异位词",
    "url": "https://leetcode.cn/problems/find-all-anagrams-in-a-string",
    "difficulty": "中等",
    "tag": [
        "哈希表",
        "字符串",
        "滑动窗口"
    ],
    "desc": "给定两个字符串 s 和 p，找到 s 中所有 p 的 异位词 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。",
    "solutions": [
        {
            "date": 1638028800000,
            "time": 140,
            "memory": 44.9,
            "script": "typescript",
            "desc": "遍历后存储数组，滑动窗口比较。",
            "code": "function findAnagrams(s: string, p: string): number[] {\n  const sn = s.length;\n  const pn = p.length;\n  if (sn < pn) return [];\n  const arr: number[] = new Array(26).fill(0);\n  for (let i = 0; i < pn; i++) arr[p.codePointAt(i)! - 97]++;\n  const str = arr.join('#');\n  arr.fill(0);\n  const ans: number[] = [];\n  let l = 0;\n  let r = 0;\n  while (r < pn) arr[s.codePointAt(r++)! - 97]++;\n  while (r < sn) {\n    if (str === arr.join('#')) ans.push(l);\n    arr[s.codePointAt(l++)! - 97]--;\n    arr[s.codePointAt(r++)! - 97]++;\n  }\n  if (str === arr.join('#')) ans.push(l);\n  return ans;\n}"
        }
    ]
}