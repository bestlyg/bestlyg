{
    "id": "447",
    "name": "447.回旋镖的数量",
    "url": "https://leetcode.cn/problems/number-of-boomerangs",
    "difficulty": "中等",
    "tag": [
        "数组",
        "哈希表",
        "数学"
    ],
    "desc": "返回平面上所有回旋镖的数量。",
    "solutions": [
        {
            "date": 1631462400000,
            "time": 252,
            "memory": 60.9,
            "script": "typescript",
            "desc": "map 储存。",
            "code": "function numberOfBoomerangs(points: number[][]): number {\n  const n = points.length;\n  const getDistance = ([x1, y1]: number[], [x2, y2]: number[]) => (x1 - x2) ** 2 + (y1 - y2) ** 2;\n  const pointMap: Map<number[], Map<number, number>> = new Map();\n  let ans = 0;\n  for (let i = 0; i < n; i++) {\n    const p1 = points[i];\n    let map1 = pointMap.get(p1);\n    if (!map1) pointMap.set(p1, (map1 = new Map()));\n    for (let j = i + 1; j < n; j++) {\n      const p2 = points[j];\n      let map2 = pointMap.get(p2);\n      if (!map2) pointMap.set(p2, (map2 = new Map()));\n      const distance = getDistance(p1, p2);\n      const count1 = map1.get(distance) ?? 0;\n      map1.set(distance, count1 + 1);\n      ans += count1 * 2;\n      const count2 = map2.get(distance) ?? 0;\n      map2.set(distance, count2 + 1);\n      ans += count2 * 2;\n    }\n  }\n  return ans;\n}"
        }
    ]
}