{
    "id": "424",
    "name": "424.替换后的最长重复字符",
    "url": "https://leetcode.cn/problems/longest-repeating-character-replacement",
    "difficulty": "中等",
    "tag": ["哈希表", "字符串", "滑动窗口"],
    "desc": "给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。在执行上述操作后，找到包含重复字母的最长子串的长度。",
    "solutions": [
        {
            "date": 1612195200000,
            "time": 140,
            "memory": 41.6,
            "script": "typescript",
            "desc": "[参考链接](https://leetcode-cn.com/problems/longest-repeating-character-replacement/solution/ti-huan-hou-de-zui-chang-zhong-fu-zi-fu-n6aza/)。",
            "code": "function characterReplacement(s: string, k: number): number {\n  const num = new Array(26).fill(0);\n  const n = s.length;\n  const compute = (i: number) => s[i].charCodeAt(0) - 'A'.charCodeAt(0);\n  let max = 0,\n    left = 0,\n    right = 0;\n  while (right < n) {\n    num[compute(right)]++;\n    max = Math.max(max, num[compute(right)]);\n    if (right - left + 1 - max > k) {\n      num[compute(left)]--;\n      left++;\n    }\n    right++;\n  }\n  return right - left;\n}"
        }
    ]
}
