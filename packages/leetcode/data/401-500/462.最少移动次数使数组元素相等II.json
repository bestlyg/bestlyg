{
  "name": "462. 最少移动次数使数组元素相等 II",
  "url": "https://leetcode-cn.com/problems/minimum-moves-to-equal-array-elements-ii/",
  "difficulty": "中等",
  "tag": ["数组", "数学", "排序"],
  "desc": "给定一个非空整数数组，找到使所有数组元素相等所需的最小移动数，其中每次移动可将选定的一个元素加 1 或减 1。 您可以假设数组的长度最多为 10000。",
  "solutions": [
    {
      "date": 1629388800000,
      "time": 88,
      "memory": 39.9,
      "script": "typescript",
      "desc": "找中间值。",
      "code": "function minMoves2(nums: number[]): number {\n  nums.sort((a, b) => a - b);\n  const midNum = nums[(0 + nums.length - 1) >> 1];\n  let ans = 0;\n  for (const num of nums) {\n    ans += Math.abs(num - midNum);\n  }\n  return ans;\n}"
    },
    {
      "date": 1632067200000,
      "time": 84,
      "memory": 39.9,
      "script": "javascript",
      "desc": "选取中间值，减少差值。",
      "code": "function minMoves2(nums: number[]): number {\n  const n = nums.length;\n  nums.sort((a, b) => a - b);\n  const midNum = nums[n >> 1];\n  let c = 0;\n  for (const num of nums) {\n    c += Math.abs(num - midNum);\n  }\n  return c;\n}"
    },
    {
      "date": 1652889600000,
      "time": 8,
      "memory": 10.5,
      "script": "cpp",
      "desc": "遍历。",
      "code": "class Solution {\n   public:\n    int minMoves2(vector<int> &nums) {\n        sort(nums.begin(), nums.end());\n        int m = nums[nums.size() / 2];\n        int ans = 0;\n        for (auto &num : nums) {\n            ans += abs(m - num);\n        }\n        return ans;\n    }\n};"
    }
  ]
}
