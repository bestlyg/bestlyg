{
    "id": "467",
    "name": "467.环绕字符串中唯一的子字符串",
    "url": "https://leetcode.cn/problems/unique-substrings-in-wraparound-string",
    "difficulty": "中等",
    "tag": [
        "字符串",
        "动态规划"
    ],
    "desc": "现在给定另一个字符串 p 。返回 s 中 唯一 的 p 的 非空子串 的数量 。 。",
    "solutions": [
        {
            "date": 1653408000000,
            "time": 8,
            "memory": 8,
            "script": "cpp",
            "desc": "遍历，每次储存以当前值结尾的最长长度。",
            "code": "class Solution {\n   public:\n    int findSubstringInWraproundString(string p) {\n        int n = p.size(), ans = 0;\n        vector<int> dp(n);\n        unordered_map<char, int> m;\n        dp[0] = 1;\n        m[p[0]] = 1;\n        for (int i = 1; i < n; i++) {\n            int next = p[i - 1] == 'z' ? 'a' : p[i - 1] + 1;\n            if (next != p[i])\n                dp[i] = 1;\n            else\n                dp[i] = dp[i - 1] + 1;\n            m[p[i]] = max(m[p[i]], dp[i]);\n        }\n        for (auto& item : m) ans += item.second;\n        return ans;\n    }\n};"
        }
    ]
}