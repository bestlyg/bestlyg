{
    "id": "2536",
    "name": "2446.判断两个事件是否存在冲突",
    "url": "https://leetcode.cn/problems/determine-if-two-events-have-conflict",
    "difficulty": "简单",
    "tag": [
        "数组",
        "字符串"
    ],
    "desc": "如果两个事件之间存在冲突，返回 true ；否则，返回 false 。",
    "solutions": [
        {
            "date": 1666454400000,
            "time": 56,
            "memory": 42.4,
            "script": "typescript",
            "desc": "化成分钟表示后比较。",
            "code": "function toTime(data: string) {\n  const time = data.split(':').map(v => +v);\n  return time[0] * 60 + time[1];\n}\nfunction haveConflict(event1: string[], event2: string[]): boolean {\n  let [l1, r1] = [toTime(event1[0]), toTime(event1[1])];\n  let [l2, r2] = [toTime(event2[0]), toTime(event2[1])];\n  if (l1 > l2) {\n    [l1, r1, l2, r2] = [l2, r2, l1, r1];\n  }\n  return r1 >= l2;\n}"
        },
        {
            "script": "cpp",
            "time": 0,
            "memory": 11.1,
            "desc": "转换成数字后比大小。",
            "code": "class Solution {\npublic:\n    bool haveConflict(vector<string>& event1, vector<string>& event2) {\n        auto to_time = [&](string t) -> int {\n            return ((t[0] - '0') * 10 + t[1] - '0') * 60 + (t[3] - '0') * 10 + t[4] - '0';\n        };\n        int s1 = to_time(event1[0]), e1 = to_time(event1[1]),\n            s2 = to_time(event2[0]), e2 = to_time(event2[1]);\n        if (s1 > s2) swap(s1, s2), swap(e1, e2);\n        return e1 >= s2;\n    }\n};",
            "date": 1684252800000
        },
        {
            "script": "python",
            "time": 36,
            "memory": 16.1,
            "desc": "同上。",
            "code": "class Solution:\n    def haveConflict(self, event1: List[str], event2: List[str]) -> bool:\n        def to_time(t: str):\n            return int(t[:2]) * 60 + int(t[3:])\n        s1, e1 = to_time(event1[0]), to_time(event1[1])\n        s2, e2 = to_time(event2[0]), to_time(event2[1])\n        if s1 > s2:\n            s1, e1, s2, e2 = s2, e2, s1, e1\n        return e1 >= s2",
            "date": 1684252800000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn have_conflict(event1: Vec<String>, event2: Vec<String>) -> bool {\n        let to_time =\n            |s: &String| -> i32 { s[0..2].parse::<i32>().unwrap() * 60 + s[3..].parse::<i32>().unwrap() };\n        let (mut s1, mut e1, mut s2, mut e2) = (\n            to_time(&event1[0]),\n            to_time(&event1[1]),\n            to_time(&event2[0]),\n            to_time(&event2[1]),\n        );\n        if s1 > s2 {\n            unsafe {\n                std::ptr::swap(&mut s1, &mut s2);\n                std::ptr::swap(&mut e1, &mut e2);\n            }\n        }\n        e1 >= s2\n    }\n}",
            "date": 1684252800000
        }
    ]
}