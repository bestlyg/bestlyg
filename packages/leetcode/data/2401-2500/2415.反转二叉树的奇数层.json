{
    "name": "2415.反转二叉树的奇数层",
    "url": "https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree/",
    "difficulty": "简单",
    "tag": [],
    "desc": "给你一棵 完美 二叉树的根节点 root ，请你反转这棵树中每个 奇数 层的节点值。",
    "solutions": [
        {
            "script": "python",
            "time": 1776,
            "memory": 22.2,
            "desc": "bfs。",
            "code": "class Solution:\n    def reverseOddLevels(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if not root: return None\n        q = [root]\n        size = 1\n        level = 0\n        while q:\n            node = q.pop(0)\n            if node.left: q.append(node.left)\n            if node.right: q.append(node.right)\n            size -= 1\n            if size == 0:\n                size = len(q)\n                level += 1\n                if level % 2 != 0:\n                    for i in range(len(q) // 2):\n                        q[i].val, q[len(q) - 1 - i].val = q[len(q) - 1 - i].val, q[i].val\n        return root",
            "date": 1702569600000
        }
    ]
}