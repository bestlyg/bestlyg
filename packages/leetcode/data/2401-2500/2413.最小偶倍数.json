{
    "id": "2491",
    "name": "2413.最小偶倍数",
    "url": "https://leetcode.cn/problems/smallest-even-multiple",
    "desc": "给你一个正整数 n ，返回 2 和 n 的最小公倍数（正整数）。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 5.8,
            "desc": "gcd。",
            "code": "int gcd(int a, int b) {\n    if (a < b) return gcd(b, a);\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\nclass Solution {\npublic:\n    int smallestEvenMultiple(int n) {\n        int res = gcd(2, n), num = 2 * n / res;\n        if (num % 2 != 0) num *= 2;\n        return num;\n    }\n};",
            "date": "2023-04-21"
        },
        {
            "script": "python",
            "time": 52,
            "memory": 14.7,
            "desc": "同上。",
            "code": "def gcd(a: int, b: int):\n    if a < b:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nclass Solution:\n    def smallestEvenMultiple(self, n: int) -> int:\n        res = gcd(2, n)\n        num = 2*n/res\n        if num % 2 != 0:\n            num *= 2\n        return int(num) ",
            "date": "2023-04-21"
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2.1,
            "desc": "同上。",
            "code": "fn gcd(a: i32, b: i32) -> i32 {\n    if a < b {\n        gcd(b, a)\n    } else if b == 0 {\n        a\n    } else {\n        gcd(b, a % b)\n    }\n}\n\nimpl Solution {\n    pub fn smallest_even_multiple(n: i32) -> i32 {\n        let res = gcd(2, n);\n        let mut num = 2 * n / res;\n        if num % 2 != 0 {\n            num *= 2;\n        }\n        num\n    }\n}",
            "date": "2023-04-21"
        }
    ],
    "tagList": ["数学", "数论"],
    "level": "Easy"
}
