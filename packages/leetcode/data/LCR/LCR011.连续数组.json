{
    "id": "1000247",
    "name": "LCR011.连续数组",
    "url": "https://leetcode.cn/problems/A1NYOS",
    "desc": "给定一个二进制数组 nums , 找到含有相同数量的 0 和 1 的最长连续子数组，并返回该子数组的长度。",
    "solutions": [
        {
            "date": "2021-12-23",
            "time": 116,
            "memory": 81.7,
            "script": "cpp",
            "desc": "前缀和。",
            "code": "class Solution {\n   public:\n    int findMaxLength(vector<int>& nums) {\n        int ans = 0, sum = 0;\n        unordered_map<int, int> mmap;\n        mmap[0] = -1;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums[i] == 1 ? 1 : -1;\n            if (mmap.count(sum)) {\n                ans = max(ans, i - mmap[sum]);\n            } else {\n                mmap[sum] = i;\n            }\n        }\n        return ans;\n    }\n};"
        }
    ],
    "tagList": [
        "数组",
        "哈希表",
        "前缀和"
    ],
    "level": "Medium"
}