{
    "name": "2369.检查数组是否存在有效划分",
    "url": "https://leetcode.cn/problems/check-if-there-is-a-valid-partition-for-the-array",
    "difficulty": "简单",
    "tag": [],
    "desc": "给你一个下标从 0 开始的整数数组 nums ，你必须将数组划分为一个或多个 连续 子数组。如果数组 至少 存在一种有效划分，返回 true ，否则，返回 false 。",
    "solutions": [
        {
            "script": "python",
            "time": 125,
            "memory": 30.87,
            "desc": "dp[i]表示以i为节点时是否能够满足要求。",
            "code": "class Solution:\n    def validPartition(self, nums: List[int]) -> bool:\n        n = len(nums)\n        dp = [False] * n\n        dp[0] = False\n        dp[1] = nums[0] == nums[1]\n        if n == 2: return dp[1]\n        dp[2] = nums[0] == nums[1] - 1 == nums[2] - 2 or \\\n                nums[0] == nums[1] == nums[2]\n        for i in range(3, n):\n            dp[i] = dp[i - 2] and nums[i] == nums[i - 1] or \\\n                    dp[i - 3] and nums[i] == nums[i - 1] == nums[i - 2] or \\\n                    dp[i - 3] and nums[i] == nums[i - 1] + 1 == nums[i - 2] + 2\n        return dp[n - 1]",
            "date": 1709222400000
        }
    ]
}