{
    "id": "2482",
    "name": "2397.被列覆盖的最多行数",
    "url": "https://leetcode.cn/problems/maximum-rows-covered-by-columns",
    "difficulty": "中等",
    "tag": ["位运算", "数组", "回溯", "枚举", "矩阵"],
    "desc": "返回一个整数，表示可以由 numSelect 列构成的集合 覆盖 的 最大行数 。",
    "solutions": [
        {
            "script": "python",
            "time": 48,
            "memory": 16.85,
            "desc": "遍历所有列覆盖的情况。",
            "code": "class Solution:\n    def maximumRows(self, matrix: List[List[int]], numSelect: int) -> int:\n        n = len(matrix)\n        m = len(matrix[0])\n        rows = []\n        for i in range(n):\n            used = 0\n            for j in range(m):\n                if matrix[i][j] == 1: used |= 1 << j\n            rows.append(used)\n        ans = 0\n        for used in range(1 << m):\n            if bin(used).count('1') != numSelect: continue\n            count = sum((rows[i] & used) == rows[i] for i in range(n))\n            ans = max(ans, count)\n        return ans",
            "date": 1704297600000
        }
    ]
}
