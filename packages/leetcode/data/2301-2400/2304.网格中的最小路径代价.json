{
    "id": "1394",
    "name": "2304.网格中的最小路径代价",
    "url": "https://leetcode.cn/problems/minimum-path-cost-in-a-grid",
    "desc": "从 第一行 任意单元格出发，返回到达 最后一行 任意单元格的最小路径代价。",
    "solutions": [
        {
            "script": "python",
            "time": 296,
            "memory": 21.95,
            "desc": "dp[i][j]表示到ij时的最小开销。",
            "code": "class Solution:\n    def minPathCost(self, grid: List[List[int]], moveCost: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        dp = [[inf] * m for _ in range(n)]\n        for j in range(m): dp[0][j] = grid[0][j]\n        for i in range(1, n):\n            for j in range(m):\n                dp[i][j] = grid[i][j] + min(moveCost[grid[i - 1][k]][j] + dp[i - 1][k] for k in range(m))\n        return min(dp[n - 1])",
            "date": "2023-11-22"
        }
    ],
    "tagList": ["数组", "动态规划", "矩阵"],
    "level": "Medium"
}
