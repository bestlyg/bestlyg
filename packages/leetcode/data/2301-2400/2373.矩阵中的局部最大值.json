{
    "id": "2454",
    "name": "2373.矩阵中的局部最大值",
    "url": "https://leetcode.cn/problems/largest-local-values-in-a-matrix",
    "difficulty": "简单",
    "tag": [
        "数组",
        "矩阵"
    ],
    "desc": "找出 grid 中每个 3 x 3 矩阵中的最大值。",
    "solutions": [
        {
            "script": "cpp",
            "time": 12,
            "memory": 10.8,
            "desc": "遍历。",
            "code": "class Solution {\npublic:\n    vector<vector<int>> largestLocal(vector<vector<int>>& grid) {\n        int n = grid.size();\n        vector<vector<int>> res(n - 2, vector<int>(n - 2, 0));\n        for (int i = 1; i < n - 1; i++) {\n            for (int j = 1; j < n - 1; j++) {\n                for (int row = i - 1; row <= i + 1; row++) {\n                    for (int col = j - 1; col <= j + 1; col++) {\n                        res[i - 1][j - 1] = max(res[i - 1][j - 1], grid[row][col]);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
            "date": 1677600000000
        },
        {
            "script": "python3",
            "time": 36,
            "memory": 15.5,
            "desc": "同上。",
            "code": "class Solution:\n    def largestLocal(self, grid: List[List[int]]) -> List[List[int]]:\n        n = len(grid)\n        res = [[0] * (n-2) for _ in range(n-2)]\n        for i in range(1, n-1):\n            for j in range(1, n-1):\n                res[i-1][j-1] = max(\n                    grid[row][col]\n                    for row in range(i-1, i+2)\n                    for col in range(j-1, j+2)\n                )\n        return res",
            "date": 1677600000000
        },
        {
            "script": "rust",
            "time": 4,
            "memory": 2.2,
            "desc": "同上。",
            "code": "impl Solution {\n        pub fn largest_local(grid: Vec<Vec<i32>>) -> Vec<Vec<i32>> {\n            let n = grid.len();\n            let mut res = vec![vec![0; n - 2]; n - 2];\n            for i in 1..(n - 1) {\n                for j in 1..(n - 1) {\n                    for row in (i - 1)..=(i + 1) {\n                        for col in (j - 1)..=(j + 1) {\n                            res[i - 1][j - 1] = res[i - 1][j - 1].max(grid[row][col]);\n                        }\n                    }\n                }\n            }\n            res\n        }\n    }",
            "date": 1677600000000
        }
    ]
}