{
    "name": "825.适龄的朋友",
    "url": "https://leetcode-cn.com/problems/friends-of-appropriate-ages/",
    "difficulty": "中等",
    "tag": [
        "数组",
        "双指针",
        "二分查找",
        "排序"
    ],
    "desc": "在社交媒体网站上有 n 个用户。返回在该社交媒体网站上产生的好友请求总数。",
    "solutions": [
        {
            "date": 1640534400000,
            "time": 1320,
            "memory": 36.5,
            "script": "c++",
            "desc": "排序后双指针移动。",
            "code": "class Solution {\n   public:\n    int numFriendRequests(vector<int>& ages) {\n        sort(ages.begin(), ages.end());\n        int n = ages.size(), ans = 0;\n        for (int l = 0, r = 0; r < n; r++) {\n            while (l < r && ages[l] <= ages[r] / 2.0 + 7) l++;\n            ans += r - l;\n            if (ages[r] / 2.0 + 7 < ages[r]) {\n                int tmp = r;\n                while (tmp + 1 < n && ages[tmp + 1] == ages[tmp]) {\n                    ans++;\n                    tmp++;\n                }\n            }\n        }\n        return ans;\n    }\n};"
        },
        {
            "date": 1640534400000,
            "time": 108,
            "memory": 36.2,
            "script": "c++",
            "desc": "二分查找最小值和最大值。",
            "code": "class Solution {\n   public:\n    int bs(vector<int>& ages, double num) {\n        int l = 0, r = ages.size(), m;\n        while (l < r) {\n            m = (l + r) / 2;\n            if (ages[m] > num)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n    int numFriendRequests(vector<int>& ages) {\n        sort(ages.begin(), ages.end());\n        int n = ages.size(), ans = 0;\n        for (int i = 0; i < n; i++) {\n            double min = ages[i] / 2.0 + 7, max = ages[i];\n            if (min > max) continue;\n            int imin = bs(ages, min), imax = bs(ages, max);\n            if (imin < imax) ans += imax - imin - 1;\n        }\n        return ans;\n    }\n};"
        },
        {
            "date": 1640534400000,
            "time": 56,
            "memory": 36.3,
            "script": "c++",
            "desc": "双指针移动。",
            "code": "class Solution {\n   public:\n    int numFriendRequests(vector<int>& ages) {\n        sort(ages.begin(), ages.end());\n        int n = ages.size(), l = 0, r = 0, ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (ages[i] * 0.5 + 7 > ages[i]) continue;\n            while (r + 1 < n && ages[r + 1] <=ages[i]) r++;\n            while (l < r && ages[l] <= ages[i] * 0.5 + 7) l++;\n            ans += r - l;\n        }\n        return ans;\n    }\n};"
        }
    ]
}