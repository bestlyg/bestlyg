{
    "id": "917",
    "name": "881.救生艇",
    "url": "https://leetcode.cn/problems/boats-to-save-people",
    "desc": "返回载到每一个人所需的最小船数。",
    "solutions": [
        {
            "date": "2021-08-26",
            "time": 176,
            "memory": 45.6,
            "script": "typescript",
            "desc": "贪心，双指针从两边向中间计算。",
            "code": "function numRescueBoats(people: number[], limit: number): number {\n  people.sort((a, b) => a - b);\n  let ans = 0;\n  let l = 0;\n  let r = people.length - 1;\n  while (l <= r) {\n    if (people[r] + people[l] <= limit) l++;\n    r--;\n    ans++;\n  }\n  return ans;\n}"
        },
        {
            "script": "python",
            "time": 84,
            "memory": 22.12,
            "desc": "贪心使每条船上尽可能多。",
            "code": "class Solution:\n    def numRescueBoats(self, people: List[int], limit: int) -> int:\n        people.sort()\n        l = 0\n        r = len(people) - 1\n        res = 0\n        while l <= r:\n            if people[l] + people[r] <= limit: l += 1\n            res += 1\n            r -= 1\n        return res",
            "date": "2024-06-10"
        }
    ],
    "tagList": [
        "贪心",
        "数组",
        "双指针",
        "排序"
    ],
    "level": "Medium"
}