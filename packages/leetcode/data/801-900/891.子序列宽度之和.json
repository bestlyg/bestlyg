{
    "name": "891. 子序列宽度之和",
    "url": "https://leetcode.cn/problems/sum-of-subsequence-widths/",
    "difficulty": "困难",
    "tag": [
        "数组",
        "数学",
        "排序"
    ],
    "desc": "给你一个整数数组 nums ，返回 nums 的所有非空 子序列 的 宽度之和 。",
    "solutions": [
        {
            "date": 1668700800000,
            "time": 224,
            "memory": 52.5,
            "script": "cpp",
            "desc": "因为子序列是选取某几个元素组成所以和顺序无关，先排序然后比较对于每一个元素，有几次做最大值有几次做最小值。",
            "code": "class Solution {\npublic:\n    typedef long long ll;\n    const ll mod = 1e9 + 7;\n    int sumSubseqWidths(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        ll ans = 0, n = nums.size();\n        for (ll i = 0; i < n; i++) ans = (ans + (toCount(i + 1) - toCount(n - i)) * nums[i]) % mod;\n        return ans;\n    }\n    ll toCount(ll num) {\n        return quick_pow(2, num - 1);\n    }\n    ll quick_pow(ll a, ll b) {\n        ll ans = 1, tmp = a;\n        for (; b; b >>= 1) {\n            if (b & 1) ans = (ans * tmp) % mod;\n            tmp = (tmp * tmp) % mod;\n        }\n        return ans;\n    }\n};"
        }
    ]
}