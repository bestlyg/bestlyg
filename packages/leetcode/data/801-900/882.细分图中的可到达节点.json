{
    "id": "918",
    "name": "882.细分图中的可到达节点",
    "url": "https://leetcode.cn/problems/reachable-nodes-in-subdivided-graph",
    "difficulty": "困难",
    "tag": ["图", "最短路", "堆（优先队列）"],
    "desc": "返回中枢整数 x 。如果不存在中枢整数，则返回 -1 。题目保证对于给定的输入，至多存在一个中枢整数。",
    "solutions": [
        {
            "date": 1669478400000,
            "time": 0,
            "memory": 5.8,
            "script": "cpp",
            "desc": "遍历对每个值尝试。",
            "code": "# define X first\n# define Y second\n# define lb(x) ((x) & (-x))\n# define mem(a,b) memset(a,b,sizeof(a))\n# define debug freopen(\"r.txt\",\"r\",stdin)\n# define pi pair<int,int>\nusing namespace std;\ntypedef long long ll;\n\nclass Solution {\npublic:\n    int pivotInteger(int n) {\n        int sum = (1 + n) * n / 2;\n        int prev_sum = 0;\n        for (int i = 1; i <=n ; i++) {\n            int next_sum = sum - prev_sum;\n            prev_sum += i;\n            if (prev_sum == next_sum) return i;\n        }\n        return -1;\n    }\n};"
        }
    ]
}
