{
    "id": "891",
    "name": "861.翻转矩阵后的得分",
    "url": "https://leetcode.cn/problems/score-after-flipping-matrix",
    "difficulty": "中等",
    "tag": [
        "贪心",
        "位运算",
        "数组",
        "矩阵"
    ],
    "desc": "有一个二维矩阵  A 其中每个元素的值为  0  或  1 。移动是指选择任一行或列，并转换该行或列中的每一个值：将所有 0 都更改为 1，将所有 1 都更改为 0。在做出任意次数的移动后，将该矩阵的每一行都按照二进制数来解释，矩阵的得分就是这些数字的总和。返回尽可能高的分数。",
    "solutions": [
        {
            "date": 1607270400000,
            "time": 96,
            "memory": 40.2,
            "script": "typescript",
            "desc": "贪心，计算首列为 1 后，后面 1 尽可能多。",
            "code": "function matrixScore(A: number[][]): number {\n  const reverse = (num: number) => (num ? 0 : 1);\n  const rowLen = A.length;\n  const colLen = A[0].length;\n  for (const row of A) {\n    if (!row[0]) {\n      for (let i = 0, l = colLen; i < l; i++) {\n        row[i] = reverse(row[i]);\n      }\n    }\n  }\n  for (let i = 1, l = colLen; i < l; i++) {\n    let c = 0;\n    for (let j = 0; j < rowLen; j++) {\n      if (A[j][i]) {\n        cpp;\n      }\n    }\n    if (c < rowLen / 2) {\n      for (let j = 0; j < rowLen; j++) {\n        A[j][i] = reverse(A[j][i]);\n      }\n    }\n  }\n  return A.reduce((total, cur) => total + parseInt(cur.join(''), 2), 0);\n}"
        }
    ]
}