{
  "name": "851. 喧闹和富有",
  "url": "https://leetcode-cn.com/problems/loud-and-rich/",
  "difficulty": "中等",
  "tag": ["深度优先搜索", "图", "拓扑排序", "数组"],
  "desc": "现在，返回一个整数数组 answer 作为答案，其中  answer[x] = y  的前提是，在所有拥有的钱肯定不少于  person x  的人中，person y  是最安静的人（也就是安静值  quiet[y]  最小的人）。",
  "solutions": [
    {
      "date": 1639497600000,
      "time": 216,
      "memory": 49.3,
      "script": "typescript",
      "desc": "拓扑排序后向下遍历。",
      "code": "class Person {\n  parent: Person = this;\n  children: Person[] = [];\n  constructor(public idx: number, public quiet: number) {}\n}\nfunction dfs(list: Set<Person>, persons: Person[], ans: number[]) {\n  if (list.size === 0) return;\n  const children = new Set<Person>();\n  for (const person of list) {\n    ans[person.idx] = person.parent.idx;\n    for (const child of person.children) {\n      children.add(child);\n      if (child.parent.quiet > person.parent.quiet) child.parent = person.parent;\n    }\n  }\n  dfs(children, persons, ans);\n}\nfunction loudAndRich(richer: number[][], quiet: number[]): number[] {\n  const persons = quiet.map((v, i) => new Person(i, v));\n  const starts = new Set(persons);\n  for (const [i1, i2] of richer) {\n    const p1 = persons[i1];\n    const p2 = persons[i2];\n    p1.children.push(p2);\n    starts.delete(p2);\n  }\n  const ans: number[] = new Array(quiet.length).fill(Infinity);\n  dfs(starts, persons, ans);\n  return ans;\n}"
    }
  ]
}
