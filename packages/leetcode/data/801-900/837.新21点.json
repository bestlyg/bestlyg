{
    "name": "837.新21点",
    "url": "https://leetcode-cn.com/problems/new-21-game/",
    "difficulty": "中等",
    "tag": [
        "动态规划"
    ],
    "desc": "爱丽丝参与一个大致基于纸牌游戏 “21 点” 规则的游戏，描述如下：爱丽丝以 0 分开始，并在她的得分少于 K 分时抽取数字。 抽取时，她从 [1, W] 的范围中随机获得一个整数作为分数进行累计，其中 W 是整数。 每次抽取都是独立的，其结果具有相同的概率。当爱丽丝获得不少于 K 分时，她就停止抽取数字。 爱丽丝的分数不超过 N 的概率是多少？",
    "solutions": [
        {
            "date": 1591113600000,
            "time": 1396,
            "memory": 38.1,
            "script": "typescript",
            "desc": "dp[x]=积分为 x 时的概率，dp[x]=sum(dp[x+1]+dp[x+2]...+dp[x+W])/W。",
            "code": "function new21Game(N: number, K: number, W: number): number {\n  const arr = new Array(K + W).fill(0);\n  const min = Math.min(N, K + W - 1);\n  for (let i = K; i <= min; i++) arr[i] = 1;\n  for (let i = K - 1; i >= 0; i--) {\n    let s = 0;\n    for (let j = i, sum = i + W; j <= sum; j++) s += arr[j];\n    arr[i] = s / W;\n  }\n  return arr[0];\n}"
        },
        {
            "date": 1591113600000,
            "time": 220,
            "memory": 41.6,
            "script": "typescript",
            "desc": "优化题解 1。",
            "code": "function new21Game(N: number, K: number, W: number): number {\n  const dp = new Array(W).fill(0);\n  let sum = 0;\n  for (let i = K; i <= N && i <= K + W - 1; i++) {\n    dp[i - K] = 1;\n    sum++;\n  }\n  for (let i = K - 1; i >= 0; i--) {\n    dp.unshift(sum / W);\n    sum += dp[0] - dp.pop();\n  }\n  return dp[0];\n}"
        },
        {
            "date": 1591113600000,
            "time": 264,
            "memory": 41.8,
            "script": "typescript",
            "desc": "优化题解 2。",
            "code": "function new21Game(N: number, K: number, W: number): number {\n  const dp = new Array(W).fill(0);\n  const min = Math.min(N, K + W - 1);\n  let sum = -1;\n  while (sum + K <= min) dp[sum++] = 1;\n  for (let i = K - 1; i >= 0; i--) {\n    dp.unshift(sum / W);\n    sum += dp[0] - dp.pop();\n  }\n  return dp[0];\n}"
        }
    ]
}