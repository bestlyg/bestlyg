{
    "name": "808.分汤",
    "url": "https://leetcode.cn/problems/soup-servings/",
    "difficulty": "中等",
    "tag": [
        "数学",
        "动态规划",
        "概率与统计"
    ],
    "desc": "有 A 和 B 两种类型 的汤。当两种类型的汤都分配完时，停止操作。",
    "solutions": [
        {
            "date": 1668960000000,
            "time": 4,
            "memory": 6.2,
            "script": "cpp",
            "desc": "当 i=0,j=0 时完成同时分配的概率/2=0.5，当 i>0,j=0 时概率 0，当 i=0,j>0 是完成 A 分配概率 1。",
            "code": "class Solution {\npublic:\n    double soupServings(int n) {\n        n = ceil(1.0 * n / 25);\n        if (n > 179) return 1.0;\n        double dp[200][200] = {0};\n        dp[0][0] = 0.5;\n        for (int i = 1; i <= n; i++) dp[0][i] = 1.0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                dp[i][j] = (\n                    dp[max(0, i - 4)][j] +\n                    dp[max(0, i - 3)][max(0, j - 1)] +\n                    dp[max(0, i - 2)][max(0, j - 2)] +\n                    dp[max(0, i - 1)][max(0, j - 3)]\n                ) / 4;\n            }\n        }\n        return dp[n][n];\n    }\n};"
        },
        {
            "date": 1668960000000,
            "time": 4,
            "memory": 9.3,
            "script": "cpp",
            "desc": "同上，dfs 记忆化。",
            "code": "class Solution {\npublic:\n    double soupServings(int n) {\n        n = ceil(1.0 * n / 25);\n        if (n > 179) return 1.0;\n        unordered_map<int, unordered_map<int, double>> m;\n        function<double(int, int)> dfs= [&m, &dfs](int a, int b) {\n            if (m.count(a) && m[a].count(b)) return m[a][b];\n            if (a <= 0 && b > 0) return m[a][b] = 1.0;\n            if (a <= 0 && b <= 0) return m[a][b] = 0.5;\n            if (a > 0 && b <= 0) return m[a][b] = 0.0;\n            return m[a][b] = (\n                dfs(a - 4, b) +\n                dfs(a - 3, b - 1) +\n                dfs(a - 2, b - 2) +\n                dfs(a - 1, b - 3)\n            ) / 4;\n        };\n        return dfs(n, n);\n    }\n};"
        }
    ]
}