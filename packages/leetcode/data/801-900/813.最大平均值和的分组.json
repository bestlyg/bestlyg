{
    "name": "813. 最大平均值和的分组",
    "url": "https://leetcode.cn/problems/largest-sum-of-averages",
    "difficulty": "中等",
    "tag": [],
    "desc": "给定数组 nums 和一个整数 k 。我们将给定的数组 nums 分成 最多 k 个相邻的非空子数组 。 分数 由每个子数组内的平均值的总和构成。",
    "solutions": [
        {
            "date": 1669564800000,
            "time": 12,
            "memory": 7.7,
            "script": "cpp",
            "desc": "dp[i][j] = 最多分成 i 组，只用到前 j 个字符串的最大平均值。",
            "code": "class Solution {\npublic:\n    double largestSumOfAverages(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<vector<double>> dp(k + 1, vector<double>(n + 1, 0));\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += nums[i];\n            dp[1][i + 1] = 1.0 * sum / (i + 1);\n        }\n        double ans = dp[1][n];\n        for (int knum = 2; knum <= k; knum++) {\n            for (int i = knum; i <= n; i++) {\n                int sum = 0, cnt = 0;\n                for (int j = i; j >= knum; j--) {\n                    sum += nums[j - 1];\n                    cnt += 1;\n                    dp[knum][i] = max(dp[knum][i], dp[knum - 1][j - 1] + 1.0 * sum / cnt);\n                }\n            }\n            ans = max(ans, dp[knum][n]);\n        }\n        return ans;\n    }\n};"
        }
    ]
}