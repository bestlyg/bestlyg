{
    "id": "3374",
    "name": "3101.交替子数组计数",
    "url": "https://leetcode.cn/problems/count-alternating-subarrays",
    "desc": "返回数组 nums 中交替子数组的数量。",
    "solutions": [
        {
            "script": "python",
            "time": 102,
            "memory": 20.2,
            "desc": "遍历时获取最长交替子数组用等差数列求和。",
            "code": "class Solution:\n    def countAlternatingSubarrays(self, nums: List[int]) -> int:\n        n = len(nums)\n        res = cur = 0\n        while cur < n:\n            start = cur\n            while cur + 1 < n and nums[cur] != nums[cur + 1]: cur += 1\n            res += (1 + (cur - start + 1)) * (cur - start + 1) // 2\n            cur += 1\n        return res",
            "date": "2024-07-06"
        }
    ],
    "tagList": ["数组", "数学"],
    "level": "Medium"
}
