{
    "id": "3373",
    "name": "3115.质数的最大距离",
    "url": "https://leetcode.cn/problems/maximum-prime-difference",
    "desc": "返回两个（不一定不同的）质数在 nums 中 下标 的 最大距离。",
    "solutions": [
        {
            "script": "python",
            "time": 403,
            "memory": 28.54,
            "desc": "遍历。",
            "code": "def is_prime(num: int) -> bool:\n    if num < 2: return False\n    for v in range(2, num):\n        if num % v == 0: return False\n    return True\narr = [is_prime(num) for num in range(103)]\n\nclass Solution:\n    def maximumPrimeDifference(self, nums: List[int]) -> int:\n        v1 = v2 = -1\n        for i in range(len(nums)):\n            if is_prime(nums[i]):\n                if v1 == -1: v1 = i\n                v2 = i\n        return v2 - v1\n                    ",
            "date": "2024-07-02"
        },
        {
            "script": "python",
            "time": 84,
            "memory": 28.54,
            "desc": "遍历。",
            "code": "def is_prime(num: int) -> bool:\n    if num < 2: return False\n    for v in range(2, num):\n        if num % v == 0: return False\n    return True\narr = [is_prime(num) for num in range(103)]\n\nclass Solution:\n    def maximumPrimeDifference(self, nums: List[int]) -> int:\n        v1 = v2 = -1\n        for i in range(len(nums)):\n            if arr[nums[i]]:\n                if v1 == -1: v1 = i\n                v2 = i\n        return v2 - v1",
            "date": "2024-07-03"
        }
    ],
    "tagList": [
        "数组",
        "数学",
        "数论"
    ],
    "level": "Medium"
}