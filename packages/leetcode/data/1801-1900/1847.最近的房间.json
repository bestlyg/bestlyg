{
    "name": "1847.最近的房间",
    "url": "https://leetcode.cn/problems/closest-room",
    "level": "Hard",
    "tagList": [
        "数组",
        "二分查找",
        "有序集合",
        "排序"
    ],
    "desc": "请你返回长度为 k 的数组 answer ，其中 answer[j] 为第 j 个查询的结果。",
    "solutions": [
        {
            "time": 233,
            "memory": 58.32,
            "desc": "有序数组",
            "code": "from sortedcontainers import SortedList\nclass Solution:\n    def closestRoom(self, rooms: List[List[int]], queries: List[List[int]]) -> List[int]:\n        qn = len(queries)\n        res = [inf] * qn\n        sl = SortedList()\n        rooms.sort(key = lambda v: v[1])\n        for size, idx in sorted([(queries[i][1], i) for i in range(qn)], reverse = True):\n            qidx = queries[idx][0]\n            while rooms and rooms[-1][1] >= size:\n                room = rooms.pop()\n                sl.add(room[0])\n            if len(sl):\n                bidx = sl.bisect_left(qidx)\n                if bidx != len(sl) and abs(sl[bidx] - qidx) < abs(qidx - res[idx]):\n                    res[idx] = sl[bidx]\n                if bidx != 0 and abs(sl[bidx - 1] - qidx) <= abs(qidx - res[idx]):\n                    res[idx] = sl[bidx - 1]\n        return [v if v != inf else -1 for v in res]",
            "date": "2024-12-16"
        }
    ],
    "id": "1957"
}