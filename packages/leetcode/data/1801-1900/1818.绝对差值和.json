{
    "id": "1946",
    "name": "1818.绝对差值和",
    "url": "https://leetcode.cn/problems/minimum-absolute-sum-difference",
    "desc": "给你两个正整数数组 nums1 和 nums2 ，数组的长度都是 n 。在替换数组 nums1 中最多一个元素 之后 ，返回最小绝对差值和。",
    "solutions": [
        {
            "date": "2021-07-14",
            "time": 224,
            "memory": 55.9,
            "script": "typescript",
            "desc": "对每一位进行查找最近值。",
            "code": "function minAbsoluteSumDiff(nums1: number[], nums2: number[]): number {\n  const len = nums1.length;\n  const nums: number[] = new Array(len).fill(0).map((_, i) => Math.abs(nums1[i] - nums2[i]));\n  nums1.sort((a, b) => a - b);\n  const sum = nums.reduce((total, cur) => total + cur, 0);\n  let ans = sum;\n  for (let i = 0; i < len; i++) ans = Math.min(ans, sum - nums[i] + findMin(i));\n  return ans % (10 ** 9 + 7);\n  function findMin(index: number): number {\n    const num2 = nums2[index];\n    let left = 0;\n    let right = len - 1;\n    while (left < right) {\n      const mid = (left + right) >> 1;\n      const midNum = nums1[mid];\n      if (midNum < num2) left = mid + 1;\n      else if (midNum > num2) right = mid - 1;\n      else {\n        left = mid;\n        break;\n      }\n    }\n    return Math.min(\n      Math.abs(nums1[left] - num2),\n      left > 0 ? Math.abs(nums1[left - 1] - num2) : Infinity,\n      left < len - 1 ? Math.abs(nums1[left + 1] - num2) : Infinity\n    );\n  }\n}"
        }
    ],
    "tagList": ["数组", "二分查找", "有序集合", "排序"],
    "level": "Medium"
}
