{
    "name": "1175.质数排列",
    "url": "https://leetcode-cn.com/problems/prime-arrangements/",
    "difficulty": "简单",
    "tag": [
        "数学"
    ],
    "desc": "请你帮忙给从 1 到 n 的数设计排列方案，使得所有的「质数」都应该被放在「质数索引」（索引从 1 开始）上；你需要返回可能的方案总数。",
    "solutions": [
        {
            "date": 1638547200000,
            "time": 88,
            "memory": 39.5,
            "script": "typescript",
            "desc": "算出质数位置进行阶乘。",
            "code": "function numPrimeArrangements(n: number): number {\n  const MOD = BigInt(10 ** 9 + 7);\n  const cnt = count(n);\n  return Number((factorial(cnt) * factorial(n - cnt)) % MOD);\n  function count(n: number): number {\n    const arr: boolean[] = new Array(n + 1).fill(true);\n    arr[0] = arr[1] = false;\n    for (let i = 2; i <= n; i++) {\n      if (!arr[i]) continue;\n      for (let j = 2; i * j <= n; j++) arr[i * j] = false;\n    }\n    return arr.filter(Boolean).length;\n  }\n  function factorial(n: number): bigint {\n    let ans = 1n;\n    for (let i = 2n; i <= n; i++) ans = (ans * i) % MOD;\n    return ans;\n  }\n}"
        }
    ]
}