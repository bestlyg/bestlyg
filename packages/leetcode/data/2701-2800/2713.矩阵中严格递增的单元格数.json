{
    "id": "2818",
    "name": "2713.矩阵中严格递增的单元格数",
    "url": "https://leetcode.cn/problems/maximum-strictly-increasing-cells-in-a-matrix",
    "difficulty": "困难",
    "tag": ["记忆化搜索", "数组", "哈希表", "二分查找", "动态规划", "矩阵", "有序集合", "排序"],
    "desc": "请你找出从某个单元开始访问矩阵所能访问的 单元格的最大数量 。",
    "solutions": [
        {
            "script": "python",
            "time": 1089,
            "memory": 71.42,
            "desc": "根据数值进行统计后dp。",
            "code": "class Solution:\n    def maxIncreasingCells(self, mat: List[List[int]]) -> int:\n        n = len(mat)\n        m = len(mat[0])\n        rows = [0] * n\n        cols = [0] * m\n        map = defaultdict(list)\n        for i in range(n):\n            for j in range(m):\n                map[mat[i][j]].append((i, j))\n        for _, arr in sorted(map.items(), key = lambda item: item[0]):\n            varr = [max(rows[i], cols[j]) + 1 for i, j in arr]\n            for (i, j), v in zip(arr, varr):\n                rows[i] = max(rows[i], v)\n                cols[j] = max(cols[j], v)\n        return max(rows)",
            "date": 1718726400000
        }
    ]
}
