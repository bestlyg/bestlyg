{
    "name": "1208.尽可能使字符串相等",
    "url": "https://leetcode-cn.com/problems/get-equal-substrings-within-budget/",
    "difficulty": "中等",
    "tag": [
        "数组",
        "滑动窗口"
    ],
    "desc": "给你两个长度相同的字符串，s 和 t。将 s  中的第  i  个字符变到  t  中的第 i 个字符需要  |s[i] - t[i]|  的开销（开销可能为 0），也就是两个字符的 ASCII 码值的差的绝对值。用于变更字符串的最大预算是  maxCost。在转化字符串时，总开销应当小于等于该预算，这也意味着字符串的转化可能是不完全的。如果你可以将 s 的子字符串转化为它在 t 中对应的子字符串，则返回可以转化的最大长度。如果 s 中没有子字符串可以转化成 t 中对应的子字符串，则返回 0。",
    "solutions": [
        {
            "date": 1612454400000,
            "time": 116,
            "memory": 49,
            "script": "typescript",
            "desc": "双指针。",
            "code": "function equalSubstring(s: string, t: string, maxCost: number): number {\n  const len = s.length;\n  const arr = new Array(len)\n    .fill(0)\n    .map((_, i) => Math.abs(s[i].charCodeAt(0) - t[i].charCodeAt(0)));\n  let l = 0,\n    r = 0,\n    cost = arr[l];\n  while (r < len) cost = cost + arr[++r] - (cost > maxCost ? arr[l++] : 0);\n  return r - l;\n}"
        }
    ]
}