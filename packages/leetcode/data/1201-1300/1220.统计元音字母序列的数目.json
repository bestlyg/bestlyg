{
    "id": "1332",
    "name": "1220.统计元音字母序列的数目",
    "url": "https://leetcode.cn/problems/count-vowels-permutation",
    "difficulty": "困难",
    "tag": [
        "动态规划"
    ],
    "desc": "给你一个整数 n，请你帮忙统计一下我们可以按下述规则形成多少个长度为 n 的字符串。",
    "solutions": [
        {
            "date": 1642348800000,
            "time": 0,
            "memory": 5.8,
            "script": "cpp",
            "desc": "动态规划，dp[i][j]表示第 i 轮时，j 元音为结尾的数量。",
            "code": "class Solution {\n   public:\n    int mod = 1e9 + 7;\n    int countVowelPermutation(int n) {\n        // 0 : a, 1 : e, 2 : i, 3 : o, 4 : u\n        // a -> e\n        // e -> a i\n        // i -> a e o u\n        // o -> i u\n        // u -> a\n        long long dp[2][5];\n        for (int i = 0; i < 5; i++) {\n            dp[0][i] = 0;\n            dp[1][i] = 1;\n        }\n        for (int i = 2; i <= n; i++) {\n            int pidx = (i + 1) % 2;\n            int idx = i % 2;\n            dp[idx][0] = (dp[pidx][1] + dp[pidx][2] + dp[pidx][4]) % mod;\n            dp[idx][1] = (dp[pidx][0] + dp[pidx][2]) % mod;\n            dp[idx][2] = (dp[pidx][1] + dp[pidx][3]) % mod;\n            dp[idx][3] = dp[pidx][2] % mod;\n            dp[idx][4] = (dp[pidx][2] + dp[pidx][3]) % mod;\n        }\n        long long ans = 0;\n        for (int i = 0; i < 5; i++) ans = (ans + dp[n % 2][i]) % mod;\n        return ans;\n    }\n};"
        }
    ]
}