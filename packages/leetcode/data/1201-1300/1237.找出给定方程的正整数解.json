{
    "id": "1358",
    "name": "1237.找出给定方程的正整数解",
    "url": "https://leetcode.cn/problems/find-positive-integer-solution-for-a-given-equation",
    "difficulty": "中等",
    "tag": [
        "数学",
        "双指针",
        "二分查找",
        "交互"
    ],
    "desc": "给你一个函数  f(x, y) 和一个目标结果 z，函数公式未知，请你计算方程 f(x,y) == z 所有可能的正整数 数对 x 和 y。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 6.3,
            "desc": "二分。",
            "code": "class Solution {\npublic:\n    vector<vector<int>> findSolution(CustomFunction& customfunction, int z) {\n        vector<vector<int>> res;\n        for (int x = 1; x <= 1000; x++) {\n            int l = 1, r = 1000, m;\n            while (l <= r) {\n                m = (l + r) / 2;\n                int val = customfunction.f(x, m);\n                if (val == z) {\n                    vector<int> item{ x, m };\n                    res.push_back(item);\n                    break;\n                }\n                if (val > z) r = m - 1;\n                else l = m + 1;\n            }\n        }\n        return res;\n    }\n  };",
            "date": 1676649600000
        },
        {
            "script": "python3",
            "time": 148,
            "memory": 14.9,
            "desc": "同上。",
            "code": "class Solution:\n    def findSolution(self, customfunction: 'CustomFunction', z: int) -> List[List[int]]:\n        res = []\n        for x in range(1, 1001):\n            l, r = 1, 1000\n            while l <= r:\n                m = (l + r)//2\n                val = customfunction.f(x, m)\n                if val == z:\n                    res.append([x, m])\n                    break\n                if val > z:\n                    r = m - 1\n                else:\n                    l = m + 1\n        return res",
            "date": 1676649600000
        },
        {
            "script": "rust",
            "time": 4,
            "memory": 2.2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn find_solution(customfunction: &CustomFunction, z: i32) -> Vec<Vec<i32>> {\n        let mut res = vec![];\n        for x in 1..=1000 {\n            let (mut l, mut r) = (1, 1000);\n            while l <= r {\n                let m = (l + r) / 2;\n                let val = customfunction.f(x, m);\n                if val == z {\n                    res.push(vec![x, m]);\n                    break;\n                }\n                if val > z {\n                    r = m - 1;\n                } else {\n                    l = m + 1;\n                }\n            }\n        }\n        res\n    }\n}",
            "date": 1676649600000
        }
    ]
}