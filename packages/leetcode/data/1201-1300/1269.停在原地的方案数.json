{
  "name": "1269. 停在原地的方案数",
  "url": "https://leetcode-cn.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/",
  "difficulty": "困难",
  "tag": ["动态规划"],
  "desc": "给你两个整数 steps 和 arrLen ，请你计算并返回：在恰好执行 steps 次操作以后，指针仍然指向索引 0 处的方案数。",
  "solutions": [
    {
      "date": 1620835200000,
      "time": 120,
      "memory": 44.1,
      "script": "typescript",
      "desc": "动态规划，计算最大可达下标。",
      "code": "function numWays(steps: number, arrLen: number): number {\n  const MOD = 10 ** 9 + 7;\n  const len = Math.min(arrLen, (steps >> 1) + 1);\n  const dp: number[][] = new Array(steps + 1).fill(0).map(_ => new Array(len + 1).fill(0));\n  dp[0][0] = 1;\n  for (let step = 1; step <= steps; step++) {\n    for (let i = 0; i <= len; i++) {\n      dp[step][i] =\n        (dp[step - 1][i] +\n          (i < len - 1 ? dp[step - 1][i + 1] : 0) +\n          (i > 0 ? dp[step - 1][i - 1] : 0)) %\n        MOD;\n    }\n  }\n  return dp[steps][0];\n}"
    }
  ]
}
