{
    "id": "1612",
    "name": "1488.避免洪水泛滥",
    "url": "https://leetcode.cn/problems/avoid-flood-in-the-city",
    "difficulty": "中等",
    "tag": [
        "贪心",
        "数组",
        "哈希表",
        "二分查找",
        "堆（优先队列）"
    ],
    "desc": "如果有多种可行解，请返回它们中的 任意一个 。如果没办法阻止洪水，请返回一个 空的数组 。请注意，如果你选择抽干一个装满水的湖泊，它会变成一个空的湖泊。但如果你选择抽干一个空的湖泊，那么将无事发生。",
    "solutions": [
        {
            "script": "python",
            "time": 3896,
            "memory": 31.44,
            "desc": "记录前一次蓄满水后，最近的放空时间。",
            "code": "class Solution:\n    def avoidFlood(self, rains: List[int]) -> List[int]:\n        full = dict()\n        empty = []\n        res = [-1] * len(rains)\n        for i, rain in enumerate(rains):\n            if rain == 0:\n                empty.append(i)\n            elif rain not in full:\n                full[rain] = i\n            else:\n                l = bisect_left(empty, full[rain])\n                if l == len(empty):\n                    return []\n                res[empty[l]] = rain\n                full[rain] = i\n                empty.pop(l)\n        for o in empty:\n            res[o] = 1\n        return res",
            "date": 1697126400000
        }
    ]
}