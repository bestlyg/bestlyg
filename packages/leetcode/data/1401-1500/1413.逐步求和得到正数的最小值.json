{
    "id": "1514",
    "name": "1413.逐步求和得到正数的最小值",
    "url": "https://leetcode.cn/problems/minimum-value-to-get-positive-step-by-step-sum",
    "difficulty": "简单",
    "tag": [
        "数组",
        "前缀和"
    ],
    "desc": "请你在确保累加和始终大于等于 1 的前提下，选出一个最小的 正数 作为 startValue 。",
    "solutions": [
        {
            "date": 1659974400000,
            "time": 0,
            "memory": 2.2,
            "script": "rust",
            "desc": "前缀和判断每一次数组中值相加的绝对值小于 ans。",
            "code": "impl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let mut ans = 1;\n        let mut sum  = 0;\n        for num in nums {\n            sum += num;\n            if sum < 0 && ans <= sum.abs() {\n                ans = sum.abs() + 1;\n            }\n        }\n        ans\n    }\n}"
        },
        {
            "date": 1659974400000,
            "time": 0,
            "memory": 2,
            "script": "rust",
            "desc": "前缀和判断每一次数组中值相加的绝对值小于 ans。",
            "code": "impl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let (mut ans, mut sum) = (0, 0);\n        for num in nums {\n            sum += num;\n            ans = ans.min(sum);\n        }\n        ans.abs() + 1\n    }\n}"
        },
        {
            "date": 1659974400000,
            "time": 0,
            "memory": 2,
            "script": "rust",
            "desc": "二分。",
            "code": "fn check(nums: &Vec<i32>, v: i32) -> bool {\n    let mut v = v;\n    for num in nums {\n        v += num;\n        if v <= 0 {\n            return false;\n        }\n    }\n    true\n}\n\nimpl Solution {\n    pub fn min_start_value(nums: Vec<i32>) -> i32 {\n        let (mut l, mut r) = (1, i32::MAX);\n        while l < r {\n            let m = l + (r - l) / 2;\n            if check(&nums, m) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        l\n    }\n}"
        }
    ]
}