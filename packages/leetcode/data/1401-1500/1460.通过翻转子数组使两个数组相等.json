{
    "id": "1556",
    "name": "1460.通过翻转子数组使两个数组相等",
    "url": "https://leetcode.cn/problems/make-two-arrays-equal-by-reversing-subarrays",
    "difficulty": "简单",
    "tag": ["数组", "哈希表", "排序"],
    "desc": "给你两个长度相同的整数数组 target 和 arr 。每一步中，你可以选择 arr 的任意 非空子数组 并将它翻转。你可以执行此过程任意次。",
    "solutions": [
        {
            "date": 1661270400000,
            "time": 12,
            "memory": 13.9,
            "script": "cpp",
            "desc": "只要数的数量相同就可以匹配。",
            "code": "class Solution {\npublic:\n    bool canBeEqual(vector<int>& target, vector<int>& arr) {\n       int map[1005] = {0};\n       for (auto &num : arr) map[num]++;\n       for (auto &num : target) {\n           if (map[num]-- == 0) return false;\n       }\n       return true;\n    }\n};"
        },
        {
            "date": 1661270400000,
            "time": 0,
            "memory": 2,
            "script": "rust",
            "desc": "只要数的数量相同就可以匹配。",
            "code": "impl Solution {\n    pub fn can_be_equal(target: Vec<i32>, arr: Vec<i32>) -> bool {\n        let mut map = [0; 1005];\n        for num in arr {\n            map[num as usize] += 1;\n        }\n        for num in target {\n            if map[num as usize] == 0 {\n                return false;\n            }\n            map[num as usize] -= 1;\n        }\n        true\n    }\n}"
        }
    ]
}
