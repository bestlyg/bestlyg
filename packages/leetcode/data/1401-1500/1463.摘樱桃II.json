{
    "id": "1559",
    "name": "1463.摘樱桃II",
    "url": "https://leetcode.cn/problems/cherry-pickup-ii",
    "desc": "你有两个机器人帮你收集樱桃，机器人 1 从左上角格子 (0,0) 出发，机器人 2 从右上角格子 (0, cols-1) 出发。请你按照如下规则，返回两个机器人能收集的最多樱桃数目。",
    "solutions": [
        {
            "script": "python",
            "time": 871,
            "memory": 57.7,
            "desc": "dfs记录当前x坐标下，第一个人在y1，第二个人在y2时的最大樱桃数。",
            "code": "class Solution:\n    def cherryPickup(self, grid: List[List[int]]) -> int:\n        n, m = len(grid), len(grid[0])\n        dirs = [1, 0, -1]\n        @cache\n        def dfs(x: int, y1: int, y2: int) -> int:\n            if x == n: return 0\n            res = 0\n            for dir in dirs:\n                ny1 = y1 + dir\n                if 0 <= ny1 < m:\n                    for dir in dirs:\n                        ny2 = y2 + dir\n                        if 0 <= ny2 < m:\n                            res = max(res, dfs(x + 1, ny1, ny2))\n            res += grid[x][y1]\n            if y1 != y2: res += grid[x][y2]\n            return res\n        return dfs(0, 0, m - 1)",
            "date": "2024-05-07"
        }
    ],
    "tagList": ["数组", "动态规划", "矩阵"],
    "level": "Hard"
}
