{
    "id": "1000242",
    "name": "剑指OfferII008.和大于等于target的最短子数组",
    "url": "https://leetcode.cn/problems/2VG8Kg",
    "difficulty": "中等",
    "tag": [
        "数组",
        "二分查找",
        "前缀和",
        "滑动窗口"
    ],
    "desc": "给定一个含有  n  个正整数的数组和一个正整数 target 。找出该数组中满足其和 ≥ target 的长度最小的 连续子数组  [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。",
    "solutions": [
        {
            "date": 1640275200000,
            "time": 8,
            "memory": 10.4,
            "script": "c++",
            "desc": "双指针。",
            "code": "class Solution {\n   public:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int l = 0, r = 0, num = 0, ans = INT_MAX, n = nums.size();\n        while (r < n) {\n            while (r < n && num < target) num += nums[r++];\n            while (l < r && num - nums[l] >= target) num -= nums[l++];\n            if (num >= target) ans = min(ans, r - l);\n            num -= nums[l++];\n        }\n        return ans == INT_MAX ? 0 : ans;\n    }\n};"
        }
    ]
}