{
    "id": "1000265",
    "name": "剑指OfferII029.排序的循环链表",
    "url": "https://leetcode.cn/problems/4ueAj6",
    "difficulty": "中等",
    "tag": [
        "链表"
    ],
    "desc": "给定循环单调非递减列表中的一个点，写一个函数向这个列表中插入一个新元素 insertVal ，使这个列表仍然是循环升序的。",
    "solutions": [
        {
            "date": 1655481600000,
            "time": 8,
            "memory": 7.9,
            "script": "cpp",
            "desc": "遍历，考虑小于最小值和大于最大值。",
            "code": "class Solution {\n   public:\n    Node* insert(Node* head, int insertVal) {\n        if (!head) {\n            Node* ans = new Node(insertVal);\n            ans->next = ans;\n            return ans;\n        }\n        Node *p = head, *node = new Node(insertVal);\n        if (p->next != head) {\n            int nmin = INT_MAX, nmax = INT_MIN;\n            do {\n                nmin = min(nmin, p->val);\n                nmax = max(nmax, p->val);\n                p = p->next;\n            } while (p != head);\n            if (nmin >= insertVal || nmax <= insertVal) {\n                while (p->val <= p->next->val && p->next != head) p = p->next;\n            } else {\n                while (!(p->val <= insertVal && p->next->val >= insertVal))\n                    p = p->next;\n            }\n        }\n        node->next = p->next;\n        p->next = node;\n        return head;\n    }\n};"
        }
    ]
}