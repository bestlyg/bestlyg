{
    "name": "977. 有序数组的平方",
    "url": "https://leetcode-cn.com/problems/squares-of-a-sorted-array/",
    "difficulty": "简单",
    "tag": [
        "数组",
        "双指针"
    ],
    "desc": "给定一个按非递减顺序排序的整数数组 A，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。",
    "solutions": [
        {
            "date": 1602777600000,
            "time": 208,
            "memory": 45.7,
            "script": "typescript",
            "desc": "平方后排序。",
            "code": "function sortedSquares(A: number[]): number[] {\n  return A.map(v => v ** 2).sort((a, b) => a - b);\n}"
        },
        {
            "date": 1602777600000,
            "time": 204,
            "memory": 46,
            "script": "typescript",
            "desc": "利用有序性进行双指针遍历排序。",
            "code": "function sortedSquares(A: number[]): number[] {\n  const ans: number[] = [];\n  const len = A.length;\n  let i = 0;\n  let j = len - 1;\n  const arr = A.map(v => v ** 2);\n  while (i <= j) {\n    const numL = arr[i];\n    const numR = arr[j];\n    if (numL <= numR) {\n      ans.unshift(numR);\n      j--;\n    } else if (numL > numR) {\n      ans.unshift(numL);\n      i++;\n    }\n  }\n  return ans;\n}"
        }
    ]
}