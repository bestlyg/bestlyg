{
    "name": "901.股票价格跨度",
    "url": "https://leetcode-cn.com/problems/online-stock-span/",
    "difficulty": "中等",
    "tag": [
        "栈",
        "设计",
        "数据流",
        "单调栈"
    ],
    "desc": "编写一个 StockSpanner 类，它收集某些股票的每日报价，并返回该股票当日价格的跨度。",
    "solutions": [
        {
            "date": 1626624000000,
            "time": 372,
            "memory": 48.4,
            "script": "typescript",
            "desc": "单调递减栈，寻找前一个比当前值大的值。",
            "code": "class StockSpanner {\n  private arr: number[] = [];\n  private stack: number[] = [];\n  next(price: number): number {\n    const i = this.arr.length;\n    this.arr.push(price);\n    while (this.stack.length && price >= this.arr[this.stack[this.stack.length - 1]])\n      this.stack.pop()!;\n    const ans = i - (this.stack[this.stack.length - 1] ?? -1);\n    this.stack.push(i);\n    return ans;\n  }\n}"
        },
        {
            "date": 1666281600000,
            "time": 196,
            "memory": 84.1,
            "script": "cpp",
            "desc": "单调栈，存储比自己大的最近节点。",
            "code": "class StockSpanner {\npublic:\n    stack<int> s;\n    vector<int> list;\n    StockSpanner() {\n        list.push_back(0x7fffffff);\n        s.push(0);\n    }\n    int next(int price) {\n        while (list[s.top()] <= price) s.pop();\n        int res = list.size() - s.top();\n        s.push(list.size());\n        list.push_back(price);\n        return res;\n    }\n};"
        }
    ]
}