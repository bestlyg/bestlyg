{
  "name": "954. 二倍数对数组",
  "url": "https://leetcode-cn.com/problems/array-of-doubled-pairs/",
  "difficulty": "中等",
  "tag": ["贪心", "数组", "哈希表", "排序"],
  "desc": "给定一个长度为偶数的整数数组 arr，只有对 arr 进行重组后可以满足 “对于每个 0 <= i < len(arr) / 2，都有 arr[2 * i + 1] = 2 _ arr[2 _ i]” 时，返回 true；否则，返回 false。",
  "solutions": [
    {
      "date": 1648742400000,
      "time": 100,
      "memory": 56.9,
      "script": "cpp",
      "desc": "排序后检查。",
      "code": "class Solution {\n   public:\n    bool canReorderDoubled(vector<int> &arr) {\n        deque<int> q1, q2;\n        unordered_map<int, int> m;\n        sort(arr.begin(), arr.end());\n        for (auto &num : arr) {\n            m[num]++;\n            if (num >= 0 && (q1.empty() || q1.back() != num))\n                q1.push_back(num);\n            else if (num < 0 && (q2.empty() || q2.front() != num))\n                q2.push_front(num);\n        }\n        return check(m, q1) && check(m, q2);\n    }\n    bool check(unordered_map<int, int> &m, deque<int> q) {\n        while (q.size()) {\n            int num = q.front();\n            q.pop_front();\n            if (m[num] == 0) continue;\n            if (m[num * 2] < m[num]) return false;\n            m[num * 2] -= m[num];\n        }\n        return true;\n    }\n};"
    }
  ]
}
