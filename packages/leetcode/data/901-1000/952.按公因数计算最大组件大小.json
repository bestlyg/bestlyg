{
  "name": "952. 按公因数计算最大组件大小",
  "url": "https://leetcode.cn/problems/largest-component-size-by-common-factor/",
  "difficulty": "困难",
  "tag": ["并查集", "数组", "数学"],
  "desc": "返回 图中最大连通组件的大小 。",
  "solutions": [
    {
      "date": 1659196800000,
      "time": 308,
      "memory": 128.8,
      "script": "cpp",
      "desc": "对于合数先进行合并。",
      "code": "class UnionFind {\n   public:\n    vector<int> list;\n    UnionFind(int len) {\n        list = vector<int>(len);\n        for (int i = 0; i < len; i++) list[i] = i;\n    }\n    int find(int idx) {\n        if (list[idx] == idx) return idx;\n        int p = find(list[idx]);\n        list[idx] = p;\n        return p;\n    }\n    void uni(int idx1, int idx2) {\n        int p1 = find(idx1), p2 = find(idx2);\n        if (p1 == p2) return;\n        list[p1] = p2;\n    }\n};\n\n#define MAX 2e5\n\nclass Solution {\n   public:\n    int largestComponentSize(vector<int>& nums) {\n        int n = nums.size();\n        UnionFind uf(MAX);\n        for (int num : nums) {\n            for (int i = 2; i * i <= num; i++) {\n                if (num % i == 0) {\n                    uf.uni(num, i);\n                    uf.uni(num, num / i);\n                }\n            }\n        }\n        int ans = 0;\n        unordered_map<int, int> m;\n        for (auto& num : nums) {\n            int p = uf.find(num);\n            m[p]++;\n            ans = max(ans, m[p]);\n        }\n        return ans;\n    }\n};"
    }
  ]
}
