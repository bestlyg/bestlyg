{
    "id": "552",
    "name": "552.学生出勤记录II",
    "url": "https://leetcode.cn/problems/student-attendance-record-ii",
    "desc": "给你一个整数 n ，表示出勤记录的长度（次数）。请你返回记录长度为 n 时，可能获得出勤奖励的记录情况 数量 。",
    "solutions": [
        {
            "date": "2021-08-18",
            "time": 2216,
            "memory": 78.9,
            "script": "typescript",
            "desc": "dp[i][j][k]=第 i 天的时候存在 j 个 A 和 k 个 L 的情况。",
            "code": "function checkRecord(n: number): number {\n  const mod = 10 ** 9 + 7;\n  const dp = new Array(n + 1).fill(0).map(_ => new Array(2).fill(0).map(_ => new Array(3).fill(0)));\n  dp[0][0][0] = 1;\n  for (let i = 1; i <= n; i++) {\n    for (let j = 0; j < 2; j++) {\n      for (let k = 0; k < 3; k++) {\n        dp[i][j][0] = (dp[i][j][0] + dp[i - 1][j][k]) % mod;\n      }\n    }\n    for (let k = 0; k < 3; k++) {\n      dp[i][1][0] = (dp[i][1][0] + dp[i - 1][0][k]) % mod;\n    }\n    for (let j = 0; j < 2; j++) {\n      for (let k = 1; k < 3; k++) {\n        dp[i][j][k] = (dp[i][j][k] + dp[i - 1][j][k - 1]) % mod;\n      }\n    }\n  }\n  let ans = 0;\n  for (let j = 0; j < 2; j++) for (let k = 0; k < 3; k++) ans = (ans + dp[n][j][k]) % mod;\n  return ans;\n}"
        },
        {
            "script": "python",
            "time": 690,
            "memory": 16.39,
            "desc": "dp遍历。",
            "code": "class Solution:\n    def checkRecord(self, n: int) -> int:\n        # 0 末尾没有L, 共0A\n        # 1 末尾没有L, 共1A\n        # 2 末尾一个L, 共0A\n        # 3 末尾一个L, 共1A\n        # 4 末尾两个L, 共0A\n        # 5 末尾两个L, 共1A\n        dp = [0] * 6\n        dp[0] = 1\n        mod = 10 ** 9 + 7\n        for _ in range(n):\n            [dp[0], dp[1], dp[2], dp[3], dp[4], dp[5]] = [\n                (dp[0] + dp[2] + dp[4]) % mod,\n                (dp[0] + dp[1] + dp[2] + dp[3] + dp[4] + dp[5]) % mod,\n                (dp[0]) % mod,\n                (dp[1]) % mod,\n                (dp[2]) % mod,\n                (dp[3]) % mod,\n            ]\n        return sum(dp) % mod",
            "date": "2024-08-19"
        }
    ],
    "tagList": ["动态规划"],
    "level": "Hard"
}
