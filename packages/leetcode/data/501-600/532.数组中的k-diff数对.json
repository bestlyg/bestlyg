{
    "name": "532. 数组中的 k-diff 数对",
    "url": "https://leetcode.cn/problems/k-diff-pairs-in-an-array/",
    "difficulty": "中等",
    "tag": [
        "数组",
        "哈希表",
        "双指针",
        "二分查找",
        "排序"
    ],
    "desc": "给你一个整数数组 nums 和一个整数 k，请你在数组中找出 不同的 k-diff 数对，并返回不同的 k-diff 数对 的数目。",
    "solutions": [
        {
            "date": 1655308800000,
            "time": 16,
            "memory": 13.9,
            "script": "cpp",
            "desc": "排序后，针对于每个点查找差值为 k 的点的数量。",
            "code": "class Solution {\n   public:\n    int findPairs(vector<int> &nums, int k) {\n        map<int, int> m;\n        for (auto &num : nums) m[num]++;\n        if (k == 0) return check0(m);\n        int ans = 0;\n        vector<int> list;\n        for (auto &item : m) list.push_back(item.first);\n        int n = list.size(), l1 = 0, l2 = 0;\n        for (int r = 0; r < n; r++) {\n            while (l2 < r && list[r] - list[l2] >= k) l2++;\n            while (l1 < l2 && list[r] - list[l1] > k) l1++;\n            ans += l2 - l1;\n        }\n        return ans;\n    }\n    int check0(map<int, int> &m) {\n        int ans = 0;\n        for (auto &item : m) {\n            if (item.second > 1) ans++;\n        }\n        return ans;\n    }\n};"
        }
    ]
}