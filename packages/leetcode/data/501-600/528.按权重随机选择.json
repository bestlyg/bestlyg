{
  "name": "528. 按权重随机选择",
  "url": "https://leetcode-cn.com/problems/random-pick-with-weight/",
  "difficulty": "中等",
  "tag": ["数学", "二分查找", "前缀和", "随机化"],
  "desc": "给定一个正整数数组  w ，其中  w[i]  代表下标 i  的权重（下标从 0 开始），请写一个函数  pickIndex ，它可以随机地获取下标 i，选取下标 i  的概率与  w[i]  成正比。",
  "solutions": [
    {
      "date": 1629388800000,
      "time": 168,
      "memory": 47.4,
      "script": "typescript",
      "desc": "前缀和进行快速查找。",
      "code": "class Solution {\n  sums: number[] = [0];\n  constructor(public w: number[]) {\n    for (const num of w) this.sums.push(this.sums[this.sums.length - 1] + num);\n  }\n  pickIndex(): number {\n    const random = this.random();\n    let l = 0;\n    let r = this.sums.length - 1;\n    while (l < r) {\n      const mid = (l + r) >> 1;\n      if (this.sums[mid] <= random) l = mid + 1;\n      else r = mid;\n    }\n    return l - 1;\n  }\n  random(min: number = 0, max: number = this.sums[this.sums.length - 1]): number {\n    return min + ~~(Math.random() * (max - min + 1));\n  }\n}"
    },
    {
      "date": 1630252800000,
      "time": 240,
      "memory": 47.1,
      "script": "typescript",
      "desc": "利用前缀和随机取值。",
      "code": "class Solution {\n  sums: number;\n  constructor(private w: number[]) {\n    this.sums = w.reduce((total, cur) => total + cur, 0);\n  }\n  pickIndex(): number {\n    let random = this.random();\n    for (let i = 0; i < this.w.length; i++) {\n      const w = this.w[i];\n      if (random <= w) return i;\n      random -= w;\n    }\n    return 0;\n  }\n  random(min: number = 1, max: number = this.sums): number {\n    return min + ~~(Math.random() * (max - min + 1));\n  }\n}"
    }
  ]
}
