{
    "name": "565.数组嵌套",
    "url": "https://leetcode.cn/problems/array-nesting/",
    "difficulty": "中等",
    "tag": [
        "深度优先搜索",
        "数组"
    ],
    "desc": "索引从 0 开始长度为 N 的数组 A，包含 0 到 N - 1 的所有整数。找到最大的集合 S 并返回其大小。",
    "solutions": [
        {
            "date": 1657987200000,
            "time": 364,
            "memory": 167.9,
            "script": "cpp",
            "desc": "遍历，记录环大小。",
            "code": "class Solution {\n   public:\n    int arrayNesting(vector<int> &nums) {\n        int ans = 0, n = nums.size();\n        vector<int> m(n, -1);\n        for (int i = 0; i < n; i++) {\n            if (m[i] != -1) continue;\n            unordered_set<int> s;\n            int res = dfs(nums, m, s, i);\n            ans = max(ans, res);\n            for (auto &idx : s) m[idx] = res;\n        }\n        return ans;\n    }\n    int dfs(vector<int> &nums, vector<int> &m, unordered_set<int> &s, int idx) {\n        if (m[idx] != -1) return m[idx];\n        if (s.count(idx)) return 0;\n        s.insert(idx);\n        return dfs(nums, m, s, nums[idx]) + 1;\n    }\n};"
        }
    ]
}