{
    "name": "563. 二叉树的坡度",
    "url": "https://leetcode-cn.com/problems/binary-tree-tilt/",
    "difficulty": "简单",
    "tag": [
        "树",
        "深度优先搜索",
        "二叉树"
    ],
    "desc": "给定一个二叉树，计算 整个树 的坡度 。",
    "solutions": [
        {
            "date": 1637164800000,
            "time": 112,
            "memory": 44.3,
            "script": "typescript",
            "desc": "dfs。",
            "code": "function findTilt(root: TreeNode | null): number {\n  return dfs(root).tilt;\n  function dfs(node: TreeNode | null): {\n    sum: number;\n    tilt: number;\n  } {\n    const ans = { sum: 0, tilt: 0, res: 0 };\n    if (node === null) return ans;\n    const left = dfs(node.left);\n    const right = dfs(node.right);\n    ans.tilt = Math.abs(left.sum - right.sum) + left.tilt + right.tilt;\n    ans.sum = node.val + left.sum + right.sum;\n    return ans;\n  }\n}"
        }
    ]
}