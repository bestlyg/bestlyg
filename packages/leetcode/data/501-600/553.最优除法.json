{
    "name": "553. 最优除法",
    "url": "https://leetcode-cn.com/problems/optimal-division/",
    "difficulty": "中等",
    "tag": [
        "数组",
        "数学",
        "动态规划"
    ],
    "desc": "给定一组正整数，相邻的整数之间将会进行浮点除法操作。例如， [2,3,4] -> 2 / 3 / 4 。但是，你可以在任意位置添加任意数目的括号，来改变算数的优先级。你需要找出怎么添加括号，才能得到最大的结果，并且返回相应的字符串格式的表达式。你的表达式不应该含有冗余的括号。",
    "solutions": [
        {
            "date": 1645891200000,
            "time": 0,
            "memory": 7.7,
            "script": "c++",
            "desc": "使分母最小。",
            "code": "class Solution {\n   public:\n    string optimalDivision(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 1) return to_string(nums[0]);\n        if (n == 2) return to_string(nums[0]) + \"/\" + to_string(nums[1]);\n        string ans = to_string(nums[0]) + \"/(\";\n        for (int i = 1; i < nums.size(); i++) {\n            ans += to_string(nums[i]);\n            if (i != nums.size() - 1) ans += \"/\";\n        }\n        ans += \")\";\n        return ans;\n    }\n};"
        }
    ]
}