{
    "id": "600",
    "name": "600.不含连续1的非负整数",
    "url": "https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones",
    "desc": "给定一个正整数 n，找出小于或等于 n 的非负整数中，其二进制表示不包含 连续的 1 的个数。",
    "solutions": [
        {
            "date": "2021-09-11",
            "time": 84,
            "memory": 39.8,
            "script": "typescript",
            "desc": "[参考链接](https://leetcode-cn.com/problems/non-negative-integers-without-consecutive-ones/solution/bu-han-lian-xu-1de-fei-fu-zheng-shu-by-l-9l86/)。",
            "code": "function findIntegers(n: number): number {\n  const dp = new Array(31).fill(0);\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i < 31; ++i) dp[i] = dp[i - 1] + dp[i - 2];\n  let pre = 0;\n  let res = 0;\n  for (let i = 29; i >= 0; --i) {\n    let val = 1 << i;\n    if ((n & val) !== 0) {\n      res += dp[i + 1];\n      if (pre === 1) break;\n      pre = 1;\n    } else pre = 0;\n    if (i === 0) res++;\n  }\n  return res;\n}"
        },
        {
            "script": "python",
            "time": 55,
            "memory": 16.46,
            "desc": "数位dp。",
            "code": "N = len(bin(10 ** 9)) - 2\narr = [0] * (N + 1)\narr[0] = arr[1] = 1\ntmp_sum = 1\nfor i in range(2, N + 1):\n    arr[i] = tmp_sum\n    tmp_sum += arr[i - 1]\n\nclass Solution:\n    def findIntegers(self, num: int) -> int:\n        if num == 0: return 1\n        n = len(bin(num)) - 2\n        res = sum(arr[:n])\n        next_num = num\n        if bin(next_num)[2:4] == '11':\n            next_num = (1 << (n - 1)) + (1 << (n - 2)) - 1\n        return sum(arr[:n]) + self.findIntegers(next_num - (1 << (n - 1)))",
            "date": "2024-08-05"
        }
    ],
    "tagList": [
        "动态规划"
    ],
    "level": "Hard"
}