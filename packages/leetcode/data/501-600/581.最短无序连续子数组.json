{
    "id": "581",
    "name": "581.最短无序连续子数组",
    "url": "https://leetcode.cn/problems/shortest-unsorted-continuous-subarray",
    "desc": "给你一个整数数组 nums ，你需要找出一个 连续子数组 ，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。请你找出符合题意的 最短 子数组，并输出它的长度。",
    "solutions": [
        {
            "date": "2021-08-03",
            "time": 164,
            "memory": 46.3,
            "script": "typescript",
            "desc": "排序后比对每一位找出最先不同的下标。",
            "code": "function findUnsortedSubarray(nums: number[]): number {\n  const sorted = nums.slice().sort((a, b) => a - b);\n  let l = -1;\n  let r = -1;\n  for (let i = 0, n = nums.length; i < n; i++) {\n    if (sorted[i] !== nums[i] && l === -1) {\n      l = i;\n    }\n    if (sorted[n - 1 - i] !== nums[n - 1 - i] && r === -1) {\n      r = n - 1 - i;\n    }\n    if (l !== -1 && r !== -1) break;\n  }\n  return r === -1 ? 0 : r - l + 1;\n}"
        }
    ],
    "tagList": [
        "栈",
        "贪心",
        "数组",
        "双指针",
        "排序",
        "单调栈"
    ],
    "level": "Medium"
}