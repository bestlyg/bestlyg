{
    "id": "524",
    "name": "524.通过删除字母匹配到字典里最长单词",
    "url": "https://leetcode.cn/problems/longest-word-in-dictionary-through-deleting",
    "difficulty": "中等",
    "tag": ["数组", "双指针", "字符串", "排序"],
    "desc": "给你一个字符串 s 和一个字符串数组 dictionary 作为字典，找出并返回字典中最长的字符串，该字符串可以通过删除 s 中的某些字符得到。如果答案不止一个，返回长度最长且字典序最小的字符串。如果答案不存在，则返回空字符串。",
    "solutions": [
        {
            "date": 1631548800000,
            "time": 132,
            "memory": 42.8,
            "script": "javascript",
            "desc": "双指针。",
            "code": "function findLongestWord(s: string, dictionary: string[]): string {\n        const n = dictionary.length;\n        const idxs = new Array(n).fill(0);\n        for (const c of s) {\n          for (let i = 0; i < n; i++) {\n            if (dictionary[i][idxs[i]] === c) idxs[i]++;\n          }\n        }\n        let ans!: string;\n        for (let i = 0; i < n; i++) {\n          if (dictionary[i].length === idxs[i]) {\n            if (!ans) ans = dictionary[i];\n            else ans = check(dictionary[i], ans);\n          }\n        }\n        return ans ?? '';\n        function check(str1: string, str2: string): string {\n          const n1 = str1.length;\n          const n2 = str2.length;\n          if (n1 > n2) return str1;\n          if (n1 < n2) return str2;\n          let idx = 0;\n          while (idx < n1) {\n            if (str1[idx] !== str2[idx])\n              return str1.codePointAt(idx)! > str2.codePointAt(idx)! ? str2 : str1;\n            idx++;\n          }\n          return str1;\n        }\n      }"
        }
    ]
}
