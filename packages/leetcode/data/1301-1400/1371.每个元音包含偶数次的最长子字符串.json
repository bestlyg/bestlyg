{
    "name": "1371.每个元音包含偶数次的最长子字符串",
    "url": "https://leetcode-cn.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/",
    "difficulty": "中等",
    "tag": [
        "字符串"
    ],
    "desc": "给你一个 山脉数组 mountainArr，请你返回能够使得 mountainArr.get(index) 等于 target 最小 的下标 index 值。",
    "solutions": [
        {
            "date": 1589904000000,
            "time": 120,
            "memory": 40,
            "script": "javascript",
            "desc": "利用奇数-奇数=偶数，偶数-偶数=奇数进行前缀和的判断局部字符串，再利用位运算压缩字符串数量。",
            "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar findTheLongestSubstring = function (s) {\n  const len = s.length;\n  const pos = new Array(1 << 5).fill(-1);\n  const statusCache = {\n    a: 1 << 0,\n    e: 1 << 1,\n    i: 1 << 2,\n    o: 1 << 3,\n    u: 1 << 4,\n  };\n  let ans = 0,\n    status = 0;\n  pos[0] = 0;\n  for (let i = 0; i < len; ++i) {\n    const c = s[i];\n    status = statusCache[c] ? statusCache[c] ^ status : status;\n    if (~pos[status]) ans = Math.max(ans, i + 1 - pos[status]);\n    else pos[status] = i + 1;\n  }\n  return ans;\n};"
        }
    ]
}