{
    "id": "1484",
    "name": "1367.二叉树中的链表",
    "url": "https://leetcode.cn/problems/linked-list-in-binary-tree",
    "desc": "给你一棵以  root  为根的二叉树和一个  head  为第一个节点的链表。如果在二叉树中，存在一条一直向下的路径，且每个点的数值恰好一一对应以  head  为首的链表中每个节点的值，那么请你返回 True ，否则返回 False 。",
    "solutions": [
        {
            "date": "2021-07-29",
            "time": 84,
            "memory": 45,
            "script": "typescript",
            "desc": "dfs 递归遍历。",
            "code": "function isSubPath(head: ListNode | null, root: TreeNode | null): boolean {\n  if (head === null) return true;\n  if (root === null) return false;\n  if (head.val === root.val && find(head, root)) return true;\n  return isSubPath(head, root.left) || isSubPath(head, root.right);\n  function find(head: ListNode | null, root: TreeNode | null): boolean {\n    if (head === null) return true;\n    if (root === null) return false;\n    if (head.val !== root.val) return false;\n    return find(head.next, root.left) || find(head.next, root.right);\n  }\n}"
        }
    ],
    "tagList": [
        "树",
        "深度优先搜索",
        "广度优先搜索",
        "链表",
        "二叉树"
    ],
    "level": "Medium"
}