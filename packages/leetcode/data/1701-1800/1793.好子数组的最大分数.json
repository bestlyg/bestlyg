{
    "id": "1918",
    "name": "1793.好子数组的最大分数",
    "url": "https://leetcode.cn/problems/maximum-score-of-a-good-subarray",
    "desc": "请你返回 好 子数组的最大可能 分数 。",
    "solutions": [
        {
            "script": "python",
            "time": 266,
            "memory": 27.5,
            "desc": "先求出每个下标当最小值的范围，再对范围判断是否存在k。",
            "code": "class Solution:\n    def maximumScore(self, nums: List[int], k: int) -> int:\n        k += 1\n        nums = [inf] + nums + [inf]\n        s = []\n        n = len(nums)\n        arr1 = [0] * n\n        arr2 = [n - 1] * n\n        for i in range(1, n - 1):\n            while s and nums[s[-1]] > nums[i]:\n                arr2[s.pop()] = i\n            if s: arr1[i] = s[-1]\n            s.append(i)\n        ans = 0\n        for i in range(1, n - 1):\n            left = arr1[i]\n            right = arr2[i]\n            if left < k < right:\n                ans = max(ans, (right - left - 1) * nums[i])\n        return ans",
            "date": "2024-03-19"
        }
    ],
    "tagList": ["栈", "数组", "双指针", "二分查找", "单调栈"],
    "level": "Hard"
}
