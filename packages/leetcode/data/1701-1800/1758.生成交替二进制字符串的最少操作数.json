{
    "name": "1758. 生成交替二进制字符串的最少操作数",
    "url": "https://leetcode.cn/problems/minimum-changes-to-make-alternating-binary-string",
    "difficulty": "简单",
    "tag": [
        "字符串"
    ],
    "desc": "给你一个仅由字符 '0' 和 '1' 组成的字符串 s 。一步操作中，你可以将任一 '0' 变成 '1' ，或者将 '1' 变成 '0' 。返回使 s 变成 交替字符串 所需的 最少 操作数。",
    "solutions": [
        {
            "date": 1669651200000,
            "time": 12,
            "memory": 7.7,
            "script": "cpp",
            "desc": "遍历。",
            "code": "class Solution {\npublic:\n    int minOperations(string s) {\n        int cnt1 = 0, cnt2 = 0, cur = 1;\n        for (auto &c : s) {\n            if (c - '0' == cur) cnt1++;\n            else cnt2++;\n            cur ^= 1;\n        }\n        return min(cnt1, cnt2);\n    }\n};"
        },
        {
            "date": 1669651200000,
            "time": 0,
            "memory": 6.8,
            "script": "cpp",
            "desc": "遍历。",
            "code": "class Solution {\npublic:\n    int minOperations(string s) {\n        int n = s.size(), cnt = 0, cur = 1;\n        for (int i = 0; i < n; i++, cur^=1) {\n            if (s[i] - '0' == cur) cnt++;\n        }\n        return min(cnt, n - cnt);\n    }\n};"
        }
    ]
}