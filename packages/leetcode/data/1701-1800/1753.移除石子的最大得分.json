{
    "id": "1879",
    "name": "1753.移除石子的最大得分",
    "url": "https://leetcode.cn/problems/maximum-score-from-removing-stones",
    "difficulty": "中等",
    "tag": ["贪心", "数学", "堆（优先队列）"],
    "desc": "给你三个整数 a 、b 和 c ，返回可以得到的 最大分数 。",
    "solutions": [
        {
            "date": 1618070400000,
            "time": 96,
            "memory": 39.4,
            "script": "typescript",
            "desc": "排序后先使 bc 尽可能保持一致再进行相除。",
            "code": "function maximumScore(a: number, b: number, c: number): number {\n  if (a > b) [a, b] = [b, a];\n  if (a > c) [a, c] = [c, a];\n  if (b > c) [b, c] = [c, b];\n  const num1 = Math.min(a, c - b);\n  a -= num1;\n  c -= num1;\n  if (a === 0) return num1 + b;\n  else return num1 + (a >> 1) + b;\n}"
        },
        {
            "date": 1671552000000,
            "time": 96,
            "memory": 5.7,
            "script": "cpp",
            "desc": "堆。",
            "code": "class Solution {\npublic:\n    int maximumScore(int a, int b, int c) {\n        priority_queue<int> q;\n        q.push(a);\n        q.push(b);\n        q.push(c);\n        int ans = 0;\n        while (q.size() >= 2) {\n            int num1 = q.top(); q.pop();\n            int num2 = q.top(); q.pop();\n            ans += 1;\n            if (num1 > 1) q.push(num1 - 1);\n            if (num2 > 1) q.push(num2 - 1);\n        }\n        return ans;\n    }\n};"
        },
        {
            "date": 1671552000000,
            "time": 0,
            "memory": 5.7,
            "script": "cpp",
            "desc": "尽可能匹配。",
            "code": "class Solution {\npublic:\n    int maximumScore(int a, int b, int c) {\n        sort_v(a, b, c);\n        if (a + b <= c) return a + b;\n        return (a + b + c) / 2;\n    }\n    void sort_v(int &a, int &b, int &c) {\n        if (a > c) swap(a, c);\n        if (b > c) swap(b, c);\n        if (a > b) swap(a, b);\n    }\n};"
        }
    ]
}
