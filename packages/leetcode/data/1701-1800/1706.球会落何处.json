{
    "id": "1324",
    "name": "1706.球会落何处",
    "url": "https://leetcode.cn/problems/where-will-the-ball-fall",
    "difficulty": "中等",
    "tag": ["数组", "矩阵", "模拟"],
    "desc": "返回一个大小为 n 的数组 answer ，其中 answer[i] 是球放在顶部的第 i 列后从底部掉出来的那一列对应的下标，如果球卡在盒子里，则返回 -1 。",
    "solutions": [
        {
            "date": 1645632000000,
            "time": 28,
            "memory": 13,
            "script": "cpp",
            "desc": "dfs。",
            "code": "class Solution {\n   public:\n    int n, m, check[100][100][4] = {0}, mmap[100][100][4] = {0};\n    int dfs(vector<vector<int>>& grid, int row, int col, int idx) {\n        if (mmap[row][col][idx]) return mmap[row][col][idx];\n        int ans = -1;\n        check[row][col][idx] = 1;\n\n        if (grid[row][col] == 1) {\n            if ((idx == 0 || idx == 3) && col < m - 1 &&\n                check[row][col + 1][1] == 0) {\n                ans = dfs(grid, row, col + 1, 1);\n            } else if ((idx == 1 || idx == 2) && row < n - 1 &&\n                       check[row + 1][col][0] == 0) {\n                ans = dfs(grid, row + 1, col, 0);\n            }\n        } else {\n            if ((idx == 0 || idx == 1) && col > 0 &&\n                check[row][col - 1][3] == 0) {\n                ans = dfs(grid, row, col - 1, 3);\n            } else if ((idx == 2 || idx == 3) && row < n - 1 &&\n                       check[row + 1][col][0] == 0) {\n                ans = dfs(grid, row + 1, col, 0);\n            }\n        }\n\n        check[row][col][idx] = 0;\n        return mmap[row][col][idx] = ans;\n    }\n    vector<int> findBall(vector<vector<int>>& grid) {\n        n = grid.size();\n        m = grid[0].size();\n        vector<int> ans(m);\n        for (int col = 0; col < m; col++) {\n            if (grid[n - 1][col] == 1) {\n                mmap[n - 1][col][1] = mmap[n - 1][col][2] = col + 1;\n            } else {\n                mmap[n - 1][col][2] = mmap[n - 1][col][3] = col + 1;\n            }\n        }\n        for (int col = 0; col < m; col++) {\n            int val = dfs(grid, 0, col, 0);\n            if (val > 0) val -= 1;\n            ans[col] = val;\n        }\n        return ans;\n    }\n};"
        }
    ]
}
