{
    "name": "1774.最接近目标价格的甜点成本",
    "url": "https://leetcode.cn/problems/closest-dessert-cost",
    "difficulty": "中等",
    "tag": [
        "数组",
        "动态规划",
        "回溯"
    ],
    "desc": "返回最接近 target 的甜点成本。如果有多种方案，返回 成本相对较低 的一种。",
    "solutions": [
        {
            "date": 1670083200000,
            "time": 76,
            "memory": 9.4,
            "script": "cpp",
            "desc": "dfs。",
            "code": "class Solution {\npublic:\n    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {\n        int ans = baseCosts[0], n = toppingCosts.size();\n        function<void(int, int)> dfs = [&](int cur, int idx) {\n            if (abs(cur - target) < abs(ans - target) || abs(cur - target) == abs(ans - target) && cur < ans) ans = cur;\n            if (idx == n) return;\n            dfs(cur, idx + 1);\n            dfs(cur + toppingCosts[idx], idx + 1);\n            dfs(cur + toppingCosts[idx] * 2, idx + 1);\n        };\n        for (auto &cost : baseCosts) dfs(cost, 0);\n        return ans;\n    }\n};"
        }
    ]
}