{
    "name": "1705. 吃苹果的最大数目",
    "url": "https://leetcode-cn.com/problems/maximum-number-of-eaten-apples/",
    "difficulty": "中等",
    "tag": [
        "贪心",
        "数组",
        "堆(优先队列)"
    ],
    "desc": "给你两个长度为 n 的整数数组 days 和 apples ，返回你可以吃掉的苹果的最大数目。",
    "solutions": [
        {
            "date": 1640275200000,
            "time": 132,
            "memory": 45.8,
            "script": "c++",
            "desc": "堆，遍历时间，每次筛选出最近的时间。",
            "code": "struct node {\n          int apple, day;\n          bool operator<(const node& b) const { return this->day > b.day; }\n      };\n      class Solution {\n         public:\n          int eatenApples(vector<int>& apples, vector<int>& days) {\n              int n = apples.size(), ans = 0, minday = 0;\n              priority_queue<node> q;\n              while (minday < n || q.size()) {\n                  if (minday < n && apples[minday])\n                      q.push((node){apples[minday], days[minday] + minday - 1});\n                  while (q.size() && q.top().day < minday) q.pop();\n                  if (q.size()) {\n                      node v = q.top();\n                      q.pop();\n                      if (--v.apple != 0 && v.day > minday) q.push(v);\n                      ++ans;\n                  }\n                  ++minday;\n              }\n              return ans;\n          }\n      };"
        }
    ]
}