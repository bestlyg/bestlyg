{
    "id": "1805",
    "name": "1703.得到连续K个1的最少相邻交换次数",
    "url": "https://leetcode.cn/problems/minimum-adjacent-swaps-for-k-consecutive-ones",
    "difficulty": "困难",
    "tag": [
        "贪心",
        "数组",
        "前缀和",
        "滑动窗口"
    ],
    "desc": "请你返回使 nums 中包含 k 个 连续 1 的 最少 交换次数。",
    "solutions": [
        {
            "date": 1671724800000,
            "time": 564,
            "memory": 122.5,
            "script": "cpp",
            "desc": "[参考链接](https://leetcode.cn/problems/minimum-adjacent-swaps-for-k-consecutive-ones/solution/tu-jie-zhuan-huan-cheng-zhong-wei-shu-ta-iz4v/)。",
            "code": "class Solution {\npublic:\n    int minMoves(vector<int>& nums, int k) {\n        int ans = 0x7fffffff;\n        vector<int> ilist, slist(1, 0);\n        for (int i = 0, cnt = 0; i < nums.size(); i++) {\n            if (nums[i] == 1) {\n                ilist.push_back(i - cnt++);\n                slist.push_back(slist.back() + ilist.back());\n            }\n        }\n        for (int i = 0; i + k <= ilist.size(); i++)\n            ans = min(ans, slist[i + k] + slist[i] - 2 * slist[i + k / 2] - k % 2 * ilist[i + k / 2]);\n        return ans;\n    }\n};"
        }
    ]
}