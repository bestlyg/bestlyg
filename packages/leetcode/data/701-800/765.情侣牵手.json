{
    "id": "770",
    "name": "765.情侣牵手",
    "url": "https://leetcode.cn/problems/couples-holding-hands",
    "difficulty": "困难",
    "tag": [
        "贪心",
        "深度优先搜索",
        "广度优先搜索",
        "并查集",
        "图"
    ],
    "desc": "N 对情侣坐在连续排列的 2N 个座位上，想要牵到对方的手。 计算最少交换座位的次数，以便每对情侣可以并肩坐在一起。 一次交换可选择任意两人，让他们站起来交换座位。",
    "solutions": [
        {
            "date": 1613232000000,
            "time": 84,
            "memory": 40.2,
            "script": "typescript",
            "desc": "储存所有值进行交换。",
            "code": "function minSwapsCouples(row: number[]): number {\n  const map: Record<number, number> = {};\n  row.forEach((num, i) => (map[num] = i));\n  const swap = (num1: number, num2: number) => {\n    [row[map[num1]], row[map[num2]]] = [row[map[num2]], row[map[num1]]];\n    [map[num1], map[num2]] = [map[num2], map[num1]];\n  };\n  let ans = 0;\n  for (let i = 0, l = row.length - 1; i < l - 1; i += 2) {\n    const num = row[i];\n    const nextNum = row[i + 1];\n    const needNum = num & 1 ? num - 1 : num + 1;\n    if (nextNum !== needNum) {\n      ans++;\n      swap(needNum, nextNum);\n    }\n  }\n  return ans;\n}"
        }
    ]
}