{
  "name": "796. 旋转字符串",
  "url": "https://leetcode-cn.com/problems/rotate-string/",
  "difficulty": "简单",
  "tag": ["字符串", "字符串匹配"],
  "desc": "给定两个字符串, s 和 goal。如果在若干次旋转操作之后，s 能变成 goal ，那么返回 true 。",
  "solutions": [
    {
      "date": 1647532800000,
      "time": 0,
      "memory": 6.1,
      "script": "cpp",
      "desc": "找到所有下标起始点进行遍历。",
      "code": "class Solution {\n   public:\n    bool rotateString(string s, string goal) {\n        if (s.size() != goal.size()) return false;\n        vector<int> idxs = findidx(s, goal[0]);\n        for (auto &idx : idxs) {\n            if (check(s, goal, idx)) return true;\n        }\n        return false;\n    }\n    bool check(const string &s, const string &goal, const int &idx) {\n        int i1 = idx, i2 = 0, n = s.size();\n        while (i2 < n) {\n            if (s[i1] != goal[i2]) return false;\n            i1 = (i1 + 1) % s.size();\n            i2++;\n        }\n        return true;\n    }\n    vector<int> findidx(const string &s, const char &ch) {\n        vector<int> ans;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == ch) ans.push_back(i);\n        }\n        return ans;\n    }\n};"
    },
    {
      "date": 1649260800000,
      "time": 0,
      "memory": 6,
      "script": "cpp",
      "desc": "遍历。",
      "code": "class Solution {\n   public:\n    int n;\n    bool rotateString(string s, string goal) {\n        n = s.size();\n        vector<int> list;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == goal[0]) list.push_back(i);\n        }\n        for (auto &start : list) {\n            if (check(s, goal, start)) return true;\n        }\n        return false;\n    }\n    bool check(string &s, string &goal, int start) {\n        for (int i = 0; i < n; i++, start = (start + 1) % n) {\n            if (s[start] != goal[i]) return false;\n        }\n        return true;\n    }\n};"
    }
  ]
}
