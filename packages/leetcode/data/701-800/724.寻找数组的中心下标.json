{
    "id": "724",
    "name": "724.寻找数组的中心下标",
    "url": "https://leetcode.cn/problems/find-pivot-index",
    "difficulty": "简单",
    "tag": [
        "数组",
        "前缀和"
    ],
    "desc": "给定一个整数类型的数组 nums，请编写一个能够返回数组 “中心索引” 的方法。",
    "solutions": [
        {
            "date": 1611763200000,
            "time": 120,
            "memory": 41.1,
            "script": "typescript",
            "desc": "前缀和。",
            "code": "function pivotIndex(nums: number[]): number {\n  const sum = nums.reduce((total, cur) => total + cur, 0);\n  const len = nums.length;\n  let l = 0;\n  for (let i = 0; i < len; i++) {\n    if (l === sum - l - nums[i]) return i;\n    l += nums[i];\n  }\n  return -1;\n}"
        },
        {
            "date": 1640188800000,
            "time": 24,
            "memory": 30.2,
            "script": "c++",
            "desc": "前缀和。",
            "code": "class Solution {\n   public:\n    int pivotIndex(vector<int>& nums) {\n        int sum = 0;\n        for (auto& num : nums) sum += num;\n        int pre = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (sum - nums[i] == pre) return i;\n            pre += nums[i];\n            sum -= nums[i];\n        }\n        return -1;\n    }\n};"
        }
    ]
}