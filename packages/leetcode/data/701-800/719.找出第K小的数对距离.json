{
    "name": "719.找出第K小的数对距离",
    "url": "https://leetcode.cn/problems/find-k-th-smallest-pair-distance/",
    "difficulty": "困难",
    "tag": [
        "数组",
        "双指针",
        "二分查找",
        "排序"
    ],
    "desc": "返回 所有数对距离中 第 k 小的数对距离。",
    "solutions": [
        {
            "date": 1655222400000,
            "time": 16,
            "memory": 9.7,
            "script": "cpp",
            "desc": "排序后，对于每一种差值，计算可能的数量。",
            "code": "class Solution {\n   public:\n    int smallestDistancePair(vector<int>& nums, int k) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size(), l = 0, r = nums[n - 1] - nums[0], m;\n        while (l < r) {\n            m = (l + r) >> 1;\n            int cnt = 0;\n            for (int i = 0; i < n; i++) cnt += i - bs(nums, i, nums[i] - m);\n            if (cnt >= k)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n    int bs(vector<int>& nums, int r, int target) {\n        int l = 0, m;\n        while (l < r) {\n            m = (l + r) >> 1;\n            if (nums[m] >= target)\n                r = m;\n            else\n                l = m + 1;\n        }\n        return l;\n    }\n};"
        }
    ]
}