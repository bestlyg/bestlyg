{
    "id": "1050",
    "name": "1008.前序遍历构造二叉搜索树",
    "url": "https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",
    "difficulty": "中等",
    "tag": [
        "栈",
        "树",
        "二叉搜索树",
        "数组",
        "二叉树",
        "单调栈"
    ],
    "desc": "返回与给定前序遍历 preorder 相匹配的二叉搜索树（binary search tree）的根结点。",
    "solutions": [
        {
            "date": 1628265600000,
            "time": 72,
            "memory": 39.6,
            "script": "typescript",
            "desc": "获取左子树和右子树分别构造。",
            "code": "function bstFromPreorder(preorder: number[]): TreeNode | null {\n  const n = preorder.length;\n  if (n === 0) return null;\n  const mid = preorder[0];\n  let i = 1;\n  while (i < n && preorder[i] < mid) i++;\n  return new TreeNode(\n    mid,\n    bstFromPreorder(preorder.slice(1, i)),\n    bstFromPreorder(preorder.slice(i))\n  );\n}"
        }
    ]
}