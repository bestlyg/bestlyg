{
    "id": "1062",
    "name": "1013.将数组分成和相等的三个部分",
    "url": "https://leetcode.cn/problems/partition-array-into-three-parts-with-equal-sum",
    "difficulty": "简单",
    "tag": ["贪心", "数组"],
    "desc": "给你一个整数数组 arr，只有可以将其划分为三个和相等的 非空 部分时才返回 true，否则返回 false。",
    "solutions": [
        {
            "script": "python",
            "time": 248,
            "memory": 26.3,
            "desc": "dfs。",
            "code": "class Solution:\ndef canThreePartsEqualSum(self, arr: List[int]) -> bool:\n    print(arr)\n    n = len(arr)\n    nsum = sum(arr)\n    print(nsum)\n    if nsum / 3 != nsum // 3:\n        return False\n    num = nsum // 3\n    f: bool = False\n    def dfs(i: int, frag: int):\n        nonlocal f\n        if i == n:\n            if frag == 3:\n                f = True\n            return\n        vsum = 0\n        for i in range(i, n):\n            vsum += arr[i]\n            if vsum == num:\n                dfs(i + 1, frag + 1)\n    dfs(0, 0)\n    return f",
            "date": 1674230400000
        }
    ]
}
