{
    "id": "1139",
    "name": "1053.交换一次的先前排列",
    "url": "https://leetcode.cn/problems/previous-permutation-with-one-swap",
    "difficulty": "中等",
    "tag": [
        "贪心",
        "数组"
    ],
    "desc": "给你一个正整数数组 arr（可能存在重复的元素），请你返回可在 一次交换（交换两数字 arr[i] 和 arr[j] 的位置）后得到的、按字典序排列小于 arr 的最大排列。",
    "solutions": [
        {
            "script": "cpp",
            "time": 28,
            "memory": 24.1,
            "desc": "找出末尾第一个出现的逆序。",
            "code": "class Solution {\npublic:\n    vector<int> prevPermOpt1(vector<int>& arr) {\n        map<int, int> m;\n        m[10005] = arr.size();\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            auto it = m.lower_bound(arr[i]);\n            if (m.size() > 1 && it != m.begin()) {\n                swap(arr[i], arr[(*(--it)).second]);\n                break;\n            }\n            m[val] = i;\n        }\n        return arr;\n    }\n};",
            "date": 1680451200000
        }
    ]
}