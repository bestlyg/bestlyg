{
    "id": "1147",
    "name": "1072.按列翻转得到最大值等行数",
    "url": "https://leetcode.cn/problems/flip-columns-for-maximum-number-of-equal-rows",
    "difficulty": "中等",
    "tag": ["数组", "哈希表", "矩阵"],
    "desc": "给定 m x n 矩阵 matrix 。你可以从中选出任意数量的列并翻转其上的 每个 单元格。（即翻转后，单元格的值从 0 变成 1，或者从 1 变为 0 。）返回 经过一些翻转后，行与行之间所有值都相等的最大行数 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 352,
            "memory": 69,
            "desc": "按照行首的值进行反转。",
            "code": "class Solution {\npublic:\n    int maxEqualRowsAfterFlips(vector<vector<int>>& matrix) {\n        unordered_map<string, int> m;\n        for (auto &row : matrix) {\n            string s = \"\";\n            for (auto &v : row) {\n                s += to_string(v ^ row[0]);\n            }\n            m[s]++;\n        }\n        int res = 0;\n        for (auto &item : m) {\n            res = max(res, item.second);\n        }\n        return res;\n    }\n};",
            "date": 1684080000000
        },
        {
            "script": "python",
            "time": 248,
            "memory": 18.6,
            "desc": "同上。",
            "code": "class Solution:\n    def maxEqualRowsAfterFlips(self, matrix: List[List[int]]) -> int:\n        m = Counter()\n        for row in matrix:\n            s = \"\"\n            for v in row:\n                s += str(v ^ row[0])\n            m[s] += 1\n        res = 0\n        for v in m.values():\n            res = max(res, v)\n        return res",
            "date": 1684080000000
        },
        {
            "script": "rust",
            "time": 28,
            "memory": 3.2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn max_equal_rows_after_flips(matrix: Vec<Vec<i32>>) -> i32 {\n        let mut m = std::collections::HashMap::<String, i32>::new();\n        for row in matrix {\n            let mut s = String::new();\n            for v in &row {\n                s.push(((*v ^ row[0]) as u8 + b'0') as char);\n            }\n            *m.entry(s).or_insert(0) += 1;\n        }\n        let mut res = 0;\n        for (_, v) in m.into_iter() {\n            res = res.max(v);\n        }\n        res\n    }\n}",
            "date": 1684080000000
        }
    ]
}
