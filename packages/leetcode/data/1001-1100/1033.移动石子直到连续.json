{
    "id": "1103",
    "name": "1033.移动石子直到连续",
    "url": "https://leetcode.cn/problems/moving-stones-until-consecutive",
    "difficulty": "中等",
    "tag": [
        "脑筋急转弯",
        "数学"
    ],
    "desc": "三枚石子放置在数轴上，位置分别为 a，b，c。使游戏结束，你可以执行的最小和最大移动次数分别是多少？。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 6.1,
            "desc": "贪心，先排序，最大数就是ac一步步往b靠，最小数是如果有两个数紧挨或者两个数中间空一格，那就可以一步到位，否则需要两步。",
            "code": "void sort3(int &a, int &b, int &c) {\n    if (a > c) swap(a, c);\n    if (a > b) swap(a, b);\n    if (b > c) swap(b, c);\n}\nclass Solution {\npublic:\n    vector<int> numMovesStones(int a, int b, int c) {\n        sort3(a, b, c);\n        vector<int> res(2, 0);\n        if (a + 2 == c) return res;\n        res[0] = a + 1 == b || b + 1 == c || a + 2 == b || b + 2 == c ? 1 : 2;\n        res[1] = c - b - 1 + b - a - 1;\n        return res;\n    }\n};",
            "date": 1682784000000
        },
        {
            "script": "python3",
            "time": 36,
            "memory": 16.1,
            "desc": "同上。",
            "code": "def sort3(a: int, b: int, c: int) -> Tuple[int, int, int]:\n    if a > c:\n        a, c = c, a\n    if a > b:\n        a, b = b, a\n    if b > c:\n        b, c = c, b\n    return (a, b, c)\n\n\nclass Solution:\n    def numMovesStones(self, a: int, b: int, c: int) -> List[int]:\n        a, b, c = sort3(a, b, c)\n        if a + 2 == c:\n            return [0, 0]\n        return [\n            1 if a + 1 == b or b + 1 == c or a + 2 == b or b + 2 == c else 2,\n            c - b - 1 + b - a - 1\n        ]",
            "date": 1682784000000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 1.9,
            "desc": "同上。",
            "code": "fn sort3(a: &mut i32, b: &mut i32, c: &mut i32) {\n    use std::ptr::swap;\n    unsafe {\n        if a > c {\n            swap(a, c);\n        }\n        if a > b {\n            swap(a, b);\n        }\n        if b > c {\n            swap(b, c);\n        }\n    };\n}\n\nimpl Solution {\n    pub fn num_moves_stones(mut a: i32, mut b: i32, mut c: i32) -> Vec<i32> {\n        sort3(&mut a, &mut b, &mut c);\n        if a + 2 == c {\n            vec![0, 0]\n        } else {\n            vec![\n                if a + 1 == b || b + 1 == c || a + 2 == b || b + 2 == c {\n                    1\n                } else {\n                    2\n                },\n                c - b - 1 + b - a - 1,\n            ]\n        }\n    }\n}",
            "date": 1682784000000
        }
    ]
}