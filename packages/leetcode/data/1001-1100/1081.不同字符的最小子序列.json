{
    "id": "1159",
    "name": "1081.不同字符的最小子序列",
    "url": "https://leetcode.cn/problems/smallest-subsequence-of-distinct-characters",
    "desc": "返回 s 字典序最小的子序列，该子序列包含 s 的所有不同字符，且只包含一次。",
    "solutions": [
        {
            "date": "2021-07-30",
            "time": 176,
            "memory": 46.1,
            "script": "typescript",
            "desc": "单调栈。",
            "code": "function smallestSubsequence(s: string): string {\n  const map: Record<string, number> = {};\n  for (const c of s) map[c] = (map[c] ?? 0) + 1;\n  const stack: string[] = [];\n  const set = new Set<string>();\n  const toNum = (c: string) => c.codePointAt(0)! - 'a'.codePointAt(0)!;\n  for (const c of s) {\n    if (set.has(c)) {\n      map[c]--;\n      continue;\n    }\n    while (\n      stack.length &&\n      toNum(stack[stack.length - 1]) > toNum(c) &&\n      map[stack[stack.length - 1]] > 0\n    ) {\n      console.log(set);\n      set.delete(stack.pop()!);\n    }\n    stack.push(c);\n    set.add(c);\n    map[c]--;\n  }\n  return stack.join('');\n}"
        }
    ],
    "tagList": ["栈", "贪心", "字符串", "单调栈"],
    "level": "Medium"
}
