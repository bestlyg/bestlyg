{
    "id": "1072",
    "name": "1019.链表中的下一个更大节点",
    "url": "https://leetcode.cn/problems/next-greater-node-in-linked-list",
    "desc": "返回一个整数数组 answer ，其中 answer[i] 是第 i 个节点( 从1开始 )的下一个更大的节点的值。如果第 i 个节点没有下一个更大的节点，设置 answer[i] = 0 。",
    "solutions": [
        {
            "script": "cpp",
            "time": 72,
            "memory": 43.8,
            "desc": "单调栈。",
            "code": "class Solution {\npublic:\n    vector<int> nextLargerNodes(ListNode* head) {\n        int idx = 0;\n        ListNode *tmp = head;\n        vector<int> vlist, res;\n        stack<int> s;\n        while (tmp) {\n            vlist.push_back(tmp->val);\n            res.push_back(0);\n            while (s.size() && vlist[s.top()] < tmp->val) {\n                int top = s.top();\n                s.pop();\n                res[top] = tmp->val;\n            }\n            s.push(idx);\n            idx++;\n            tmp = tmp->next;\n        }\n        return res;\n    }\n};",
            "date": "2023-04-10"
        },
        {
            "script": "python",
            "time": 220,
            "memory": 19.8,
            "desc": "同上。",
            "code": "class Solution:\n    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:\n        idx = 0\n        tmp = head\n        vlist, res, s = [], [], []\n        while tmp:\n            vlist.append(tmp.val)\n            res.append(0)\n            while len(s) and vlist[s[-1]] < tmp.val:\n                res[s.pop()] = tmp.val\n            s.append(idx)\n            idx += 1\n            tmp = tmp.next\n        return res",
            "date": "2023-04-10"
        },
        {
            "script": "rust",
            "time": 24,
            "memory": 2.9,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn next_larger_nodes(head: Option<Box<ListNode>>) -> Vec<i32> {\n        let mut tmp = &head;\n        let mut idx = 0;\n        let mut vlist = vec![];\n        let mut res = vec![];\n        let mut s = vec![];\n        while let Some(ref node) = tmp {\n            vlist.push(node.val);\n            res.push(0);\n            while !s.is_empty() && vlist[*s.last().unwrap()] < node.val {\n                res[s.pop().unwrap()] = node.val;\n            }\n            s.push(idx);\n            idx += 1;\n            tmp = &node.next;\n        }\n        res\n    }\n}",
            "date": "2023-04-10"
        }
    ],
    "tagList": ["栈", "数组", "链表", "单调栈"],
    "level": "Medium"
}
