{
    "id": "1064",
    "name": "1015.可被K整除的最小整数",
    "url": "https://leetcode.cn/problems/smallest-integer-divisible-by-k",
    "difficulty": "中等",
    "tag": ["哈希表", "数学"],
    "desc": "给定正整数 k ，你需要找出可以被 k 整除的、仅包含数字 1 的最 小 正整数 n 的长度。",
    "solutions": [
        {
            "script": "cpp",
            "time": 0,
            "memory": 5.9,
            "desc": "欧拉函数。",
            "code": "typedef long long ll;\nll gcd(ll a, ll b) {\n    if (a < b) return gcd(b, a);\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\nll phi(ll n) {\n    ll i = 2, x = n;\n    while (i * i <= n) {\n        if (x % i == 0) n -= n / i;\n        while (x % i == 0) x /= i;\n        i += 1;\n    }\n    if (x != 1) n -= n / x;\n    return n;\n}\nll quick_mul(ll a, ll b, ll mod) {\n    ll ans = 0, temp = a;\n    while (b) {\n        if (b & 1) ans = (ans + temp) % mod;\n        temp = (temp + temp) % mod;\n        b >>= 1;\n    }\n    return ans;\n}\nll quick_pow(ll a, ll b, ll mod) {\n    ll ans = 1, temp = a;\n    while (b) {\n        if (b & 1) ans = quick_mul(ans, temp, mod) % mod;\n        temp = quick_mul(temp, temp, mod) % mod;\n        b >>= 1;\n    }\n    return ans;\n}\nset<ll> get_factors(ll num) {\n    set<ll> s;\n    ll i = 1;\n    for (; i * i <= num; i++) {\n        if (num % i == 0) {\n            s.insert(i);\n            s.insert(num / i);\n        }\n    }\n    return s;\n}\nclass Solution {\npublic:\n    int smallestRepunitDivByK(int k) {\n        if (gcd(10, 9 * k) != 1) return -1;\n        k *= 9;\n        ll n = phi(k);\n        auto factors = get_factors(n);\n        for (auto &num : factors) {\n            if (quick_pow(10, num, k) == 1) return num;\n        }\n        return -1;\n    }\n};",
            "date": 1683648000000
        }
    ]
}
