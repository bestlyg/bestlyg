{
    "id": "1148",
    "name": "1073.负二进制数相加",
    "url": "https://leetcode.cn/problems/adding-two-negabinary-numbers",
    "difficulty": "中等",
    "tag": ["数组", "数学"],
    "desc": "给出基数为 -2 的两个数 arr1 和 arr2，返回两数相加的结果。",
    "solutions": [
        {
            "script": "cpp",
            "time": 8,
            "memory": 19.1,
            "desc": "统一两个数组，如果都1，那可以抵消下一位的1，如果该位需要增加1，可以在该位加1，且下一位加1。",
            "code": "class Solution {\npublic:\n    vector<int> addNegabinary(vector<int>& arr1, vector<int>& arr2) {\n        reverse(arr1.begin(), arr1.end());\n        reverse(arr2.begin(), arr2.end());\n        for (int i = 0; i < max(arr1.size(), arr2.size()); i++) {\n            if (i == arr1.size()) arr1.push_back(0);\n            if (i == arr2.size()) arr2.push_back(0);\n        }\n        vector<int> res;\n        for (int i = 0, add = 0; i < arr1.size(); i++) {\n            switch (arr1[i] + arr2[i] + add) {\n                case -1: res.push_back(1); add = 1; break;\n                case 0: res.push_back(0); add = 0; break;\n                case 1: res.push_back(1); add = 0; break;\n                case 2: res.push_back(0); add = -1; break;\n                case 3: res.push_back(1); add = -1; break;\n            }\n            if (i == arr1.size() - 1 && add != 0) arr1.push_back(0), arr2.push_back(0);\n        }\n        while (res.size() > 1 && res.back() == 0) res.pop_back();\n        reverse(res.begin(), res.end());\n        return res;\n    }\n};",
            "date": 1684339200000
        },
        {
            "script": "python",
            "time": 48,
            "memory": 16.3,
            "desc": "同上。",
            "code": "class Solution:\n    def addNegabinary(self, arr1: List[int], arr2: List[int]) -> List[int]:\n        arr1.reverse()\n        arr2.reverse()\n        print(arr1, arr2)\n        for i in range(max(len(arr1), len(arr2))):\n            if i == len(arr1):\n                arr1.append(0)\n            if i == len(arr2):\n                arr2.append(0)\n        res = []\n        i = add = 0\n        while i < len(arr1):\n            match arr1[i] + arr2[i] + add:\n                case -1:\n                    res.append(1)\n                    add = 1\n                case 0:\n                    res.append(0)\n                    add = 0\n                case 1:\n                    res.append(1)\n                    add = 0\n                case 2:\n                    res.append(0)\n                    add = -1\n                case 3:\n                    res.append(1)\n                    add = -1\n            if i == len(arr1) - 1 and add != 0:\n                arr1.append(0)\n                arr2.append(0)\n            i += 1\n        while len(res) > 1 and res[-1] == 0:\n            res.pop()\n        res.reverse()\n        return res",
            "date": 1684339200000
        },
        {
            "script": "rust",
            "time": 0,
            "memory": 2.2,
            "desc": "同上。",
            "code": "impl Solution {\n    pub fn add_negabinary(mut arr1: Vec<i32>, mut arr2: Vec<i32>) -> Vec<i32> {\n        arr1.reverse();\n        arr2.reverse();\n        for i in 0..arr1.len().max(arr2.len()) {\n            if i == arr1.len() {\n                arr1.push(0);\n            }\n            if i == arr2.len() {\n                arr2.push(0);\n            }\n        }\n        let mut res = vec![];\n        let (mut i, mut add) = (0, 0);\n        while i < arr1.len() {\n            match arr1[i] + arr2[i] + add {\n                -1 => {\n                    res.push(1);\n                    add = 1;\n                }\n                0 => {\n                    res.push(0);\n                    add = 0;\n                }\n                1 => {\n                    res.push(1);\n                    add = 0;\n                }\n                2 => {\n                    res.push(0);\n                    add = -1;\n                }\n                3 => {\n                    res.push(1);\n                    add = -1;\n                }\n                _ => {}\n            }\n            if i == arr1.len() - 1 && add != 0 {\n                arr1.push(0);\n                arr2.push(0);\n            }\n            i += 1;\n        }\n        while res.len() > 1 && *res.last().unwrap() == 0 {\n            res.pop();\n        }\n        res.reverse();\n        res\n    }\n}\n",
            "date": 1684339200000
        }
    ]
}
