{
    "id": "1078",
    "name": "1021.删除最外层的括号",
    "url": "https://leetcode.cn/problems/remove-outermost-parentheses",
    "desc": "对 S 进行原语化分解，删除分解中每个原语字符串的最外层括号，返回 S 。",
    "solutions": [
        {
            "date": "2021-03-19",
            "time": 96,
            "memory": 39.7,
            "script": "typescript",
            "desc": "利用栈维护内层括号。",
            "code": "function removeOuterParentheses(S: string): string {\n  const stack: string[] = [];\n  let ans = '';\n  let deep = 0;\n  let count = 0;\n  for (const c of S) {\n    if (c === '(') {\n      stack.push(c);\n      deep++;\n      count++;\n    } else if (--deep === 0) {\n      let str = '';\n      while (--count !== 0) str = stack.pop()! + str;\n      ans += str;\n    } else {\n      stack.push(c);\n      count++;\n    }\n  }\n  return ans;\n}"
        },
        {
            "date": "2022-05-28",
            "time": 0,
            "memory": 6.4,
            "script": "cpp",
            "desc": "一次遍历, 储存当前等级。",
            "code": "class Solution {\n   public:\n    string removeOuterParentheses(string s) {\n        string ans = \"\";\n        int level = 0;\n        for (auto& ch : s) {\n            if (ch == '(') {\n                if (level != 0) ans += ch;\n                level++;\n            } else {\n                level--;\n                if (level != 0) ans += ch;\n            }\n        }\n        return ans;\n    }\n};"
        }
    ],
    "tagList": ["栈", "字符串"],
    "level": "Easy"
}
